Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM COLON gotomain global program2 finglobal program3 llenarmain MAIN main1 mainc finmain
Rule 2     program -> PROGRAM COLON gotomain global program2 finglobal llenarmain MAIN main1 mainc finmain
Rule 3     program -> PROGRAM COLON gotomain global finglobal program3 llenarmain MAIN main1 mainc finmain
Rule 4     program -> PROGRAM COLON gotomain llenarmain MAIN main1 mainc finmain
Rule 5     gotomain -> <empty>
Rule 6     program2 -> crear program2
Rule 7     program2 -> crear
Rule 8     program3 -> function program3
Rule 9     program3 -> function
Rule 10    llenarmain -> <empty>
Rule 11    crear -> var
Rule 12    crear -> vector
Rule 13    global -> <empty>
Rule 14    finglobal -> <empty>
Rule 15    main1 -> <empty>
Rule 16    finmain -> <empty>
Rule 17    var -> VAR tipo ID SEMICOLON
Rule 18    tipo -> INT
Rule 19    tipo -> FLOAT
Rule 20    tipo -> STRING
Rule 21    tipo -> BOOL
Rule 22    vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON
Rule 23    initvector -> <empty>
Rule 24    function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return1 RKEY
Rule 25    function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY bloq return1 RKEY
Rule 26    function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
Rule 27    function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY bloq RKEY
Rule 28    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
Rule 29    function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar RKEY
Rule 30    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return1 RKEY
Rule 31    function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
Rule 32    function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY bloq RKEY
Rule 33    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY bloq return1 RKEY
Rule 34    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY
Rule 35    functype -> INT
Rule 36    functype -> FLOAT
Rule 37    functype -> STRING
Rule 38    functype -> BOOL
Rule 39    pushvoid -> VOID
Rule 40    addInTable -> <empty>
Rule 41    funci -> tipo ID sumparam
Rule 42    funci -> tipo ID sumparam COMA funci
Rule 43    localvar -> var
Rule 44    localvar -> vector
Rule 45    localvar -> var localvar
Rule 46    localvar -> vector localvar
Rule 47    sumparam -> <empty>
Rule 48    return1 -> RETURN pushop expres resreturn SEMICOLON
Rule 49    return1 -> empty
Rule 50    resreturn -> <empty>
Rule 51    mainc -> LKEY RKEY
Rule 52    mainc -> LKEY localvar bloq RKEY
Rule 53    mainc -> LKEY localvar RKEY
Rule 54    mainc -> LKEY bloq RKEY
Rule 55    bloq -> estat
Rule 56    bloq -> estat bloq
Rule 57    estat -> asign
Rule 58    estat -> cond
Rule 59    estat -> escrit
Rule 60    estat -> ciclo
Rule 61    estat -> leer
Rule 62    estat -> fcallvoid
Rule 63    estat -> findvec
Rule 64    estat -> sorti
Rule 65    asign -> ID pushid EQUAL pushop fcall SEMICOLON
Rule 66    asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
Rule 67    asign -> ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
Rule 68    cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
Rule 69    cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
Rule 70    escrit -> PRINT pushop LPAREN escriti RPAREN SEMICOLON
Rule 71    escriti -> expres escrit1
Rule 72    escriti -> expres escrit2 COMA escriti
Rule 73    escrit1 -> <empty>
Rule 74    escrit2 -> <empty>
Rule 75    ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
Rule 76    leer -> READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
Rule 77    readid -> <empty>
Rule 78    expres -> exr
Rule 79    expres -> exr log expres reslog
Rule 80    exr -> ex
Rule 81    exr -> ex rel exr resrel
Rule 82    reslog -> <empty>
Rule 83    ex -> term resterm
Rule 84    ex -> term resterm PLUS pushop ex
Rule 85    ex -> term resterm MINUS pushop ex
Rule 86    term -> fact resfact
Rule 87    term -> fact resfact TIMES pushop term
Rule 88    term -> fact resfact DIVIDE pushop term
Rule 89    fact -> LPAREN pushop expres RPAREN popop
Rule 90    fact -> var_cte
Rule 91    fact -> PLUS pushop var_cte
Rule 92    fact -> MINUS pushop var_cte
Rule 93    rel -> LOWERTHAN
Rule 94    rel -> MORETHAN
Rule 95    rel -> LOWEREQ
Rule 96    rel -> MOREEQ
Rule 97    rel -> SAME
Rule 98    rel -> DIFFERENT
Rule 99    log -> OR
Rule 100   log -> AND
Rule 101   var_cte -> ID pushid
Rule 102   var_cte -> CTE_I pushcte
Rule 103   var_cte -> CTE_F pushcte
Rule 104   var_cte -> CTE_S pushcte
Rule 105   var_cte -> TRUE pushcte
Rule 106   var_cte -> FALSE pushcte
Rule 107   var_cte -> asigvector
Rule 108   findvec -> FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
Rule 109   sorti -> SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON
Rule 110   asigvector -> ID pushid LBRACE ex RBRACE
Rule 111   fcall -> ID existfunc LPAREN startera fcall1 RPAREN
Rule 112   fcall -> ID existfunc LPAREN startera RPAREN
Rule 113   fcallvoid -> ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
Rule 114   fcallvoid -> ID existfunc LPAREN startera RPAREN SEMICOLON
Rule 115   existfunc -> <empty>
Rule 116   startera -> <empty>
Rule 117   fcall1 -> expres generateparam
Rule 118   fcall1 -> expres generateparam COMA fcall1
Rule 119   generateparam -> <empty>
Rule 120   empty -> <empty>
Rule 121   pushcte -> <empty>
Rule 122   pushid -> <empty>
Rule 123   pushop -> <empty>
Rule 124   popop -> <empty>
Rule 125   resolverasignacion -> <empty>
Rule 126   resasignvec -> <empty>
Rule 127   resfact -> <empty>
Rule 128   resterm -> <empty>
Rule 129   resrel -> <empty>
Rule 130   resif -> <empty>
Rule 131   reselse -> <empty>
Rule 132   finif -> <empty>
Rule 133   while1 -> <empty>
Rule 134   while2 -> <empty>
Rule 135   while3 -> <empty>

Terminals, with rules where they appear

AND                  : 100
BOOL                 : 21 38
COLON                : 1 2 3 4
COMA                 : 42 72 118
CTE_F                : 103
CTE_I                : 22 102
CTE_S                : 104
DIFFERENT            : 98
DIVIDE               : 88
ELSE                 : 69
EQUAL                : 65 66 67
FALSE                : 106
FIND                 : 108
FLOAT                : 19 36
FUNCTION             : 24 25 26 27 28 29 30 31 32 33 34
ID                   : 17 22 24 25 26 27 28 29 30 31 32 33 34 41 42 65 66 67 76 101 108 109 110 111 112 113 114
IF                   : 68 69
INT                  : 18 35
LBRACE               : 22 67 108 109 110
LKEY                 : 24 25 26 27 28 29 30 31 32 33 34 51 52 53 54 68 69 69 75
LOWEREQ              : 95
LOWERTHAN            : 93
LPAREN               : 24 25 26 27 28 29 30 31 32 33 34 68 69 70 75 76 89 108 109 111 112 113 114
MAIN                 : 1 2 3 4
MINUS                : 85 92
MOREEQ               : 96
MORETHAN             : 94
OR                   : 99
PLUS                 : 84 91
PRINT                : 70
PROGRAM              : 1 2 3 4
RBRACE               : 22 67 108 109 110
READ                 : 76
RETURN               : 48
RKEY                 : 24 25 26 27 28 29 30 31 32 33 34 51 52 53 54 68 69 69 75
RPAREN               : 24 25 26 27 28 29 30 31 32 33 34 68 69 70 75 76 89 108 109 111 112 113 114
SAME                 : 97
SEMICOLON            : 17 22 48 65 66 67 70 76 108 109 113 114
SORT                 : 109
STRING               : 20 37
TIMES                : 87
TRUE                 : 105
VAR                  : 17
VECTOR               : 22
VOID                 : 39
WHILE                : 75
error                : 

Nonterminals, with rules where they appear

addInTable           : 24 25 26 27 28 29 30 31 32 33 34
asign                : 57
asigvector           : 107
bloq                 : 24 25 26 27 30 31 32 33 52 54 56 68 69 69 75
ciclo                : 60
cond                 : 58
crear                : 6 7
empty                : 49
escrit               : 59
escrit1              : 71
escrit2              : 72
escriti              : 70 72
estat                : 55 56
ex                   : 80 81 84 85 108 110
existfunc            : 111 112 113 114
expres               : 48 66 67 68 69 71 72 75 79 89 117 118
exr                  : 67 78 79 81
fact                 : 86 87 88
fcall                : 65
fcall1               : 111 113 118
fcallvoid            : 62
findvec              : 63
finglobal            : 1 2 3
finif                : 68 69
finmain              : 1 2 3 4
funci                : 24 25 26 27 42
function             : 8 9
functype             : 24 25 28 30 33 34
generateparam        : 117 118
global               : 1 2 3
gotomain             : 1 2 3 4
initvector           : 22
leer                 : 61
llenarmain           : 1 2 3 4
localvar             : 24 26 28 29 30 31 45 46 52 53
log                  : 79
main1                : 1 2 3 4
mainc                : 1 2 3 4
popop                : 89
program              : 0
program2             : 1 2 6
program3             : 1 3 8
pushcte              : 102 103 104 105 106
pushid               : 65 66 76 101 110
pushop               : 48 65 66 67 70 76 84 85 87 88 89 91 92 108 109
pushvoid             : 26 27 29 31 32
readid               : 76
rel                  : 81
resasignvec          : 67
reselse              : 69
resfact              : 86 87 88
resif                : 68 69
reslog               : 79
resolverasignacion   : 66
resrel               : 81
resreturn            : 48
resterm              : 83 84 85
return1              : 24 25 30 33
sorti                : 64
startera             : 111 112 113 114
sumparam             : 41 42
term                 : 83 84 85 87 88
tipo                 : 17 22 41 42
var                  : 11 43 45
var_cte              : 90 91 92
vector               : 12 44 46
while1               : 75
while2               : 75
while3               : 75

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM COLON gotomain global program2 finglobal program3 llenarmain MAIN main1 mainc finmain
    (2) program -> . PROGRAM COLON gotomain global program2 finglobal llenarmain MAIN main1 mainc finmain
    (3) program -> . PROGRAM COLON gotomain global finglobal program3 llenarmain MAIN main1 mainc finmain
    (4) program -> . PROGRAM COLON gotomain llenarmain MAIN main1 mainc finmain

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . COLON gotomain global program2 finglobal program3 llenarmain MAIN main1 mainc finmain
    (2) program -> PROGRAM . COLON gotomain global program2 finglobal llenarmain MAIN main1 mainc finmain
    (3) program -> PROGRAM . COLON gotomain global finglobal program3 llenarmain MAIN main1 mainc finmain
    (4) program -> PROGRAM . COLON gotomain llenarmain MAIN main1 mainc finmain

    COLON           shift and go to state 3


state 3

    (1) program -> PROGRAM COLON . gotomain global program2 finglobal program3 llenarmain MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON . gotomain global program2 finglobal llenarmain MAIN main1 mainc finmain
    (3) program -> PROGRAM COLON . gotomain global finglobal program3 llenarmain MAIN main1 mainc finmain
    (4) program -> PROGRAM COLON . gotomain llenarmain MAIN main1 mainc finmain
    (5) gotomain -> .

    VAR             reduce using rule 5 (gotomain -> .)
    VECTOR          reduce using rule 5 (gotomain -> .)
    FUNCTION        reduce using rule 5 (gotomain -> .)
    MAIN            reduce using rule 5 (gotomain -> .)

    gotomain                       shift and go to state 4

state 4

    (1) program -> PROGRAM COLON gotomain . global program2 finglobal program3 llenarmain MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON gotomain . global program2 finglobal llenarmain MAIN main1 mainc finmain
    (3) program -> PROGRAM COLON gotomain . global finglobal program3 llenarmain MAIN main1 mainc finmain
    (4) program -> PROGRAM COLON gotomain . llenarmain MAIN main1 mainc finmain
    (13) global -> .
    (10) llenarmain -> .

    VAR             reduce using rule 13 (global -> .)
    VECTOR          reduce using rule 13 (global -> .)
    FUNCTION        reduce using rule 13 (global -> .)
    MAIN            reduce using rule 10 (llenarmain -> .)

    global                         shift and go to state 5
    llenarmain                     shift and go to state 6

state 5

    (1) program -> PROGRAM COLON gotomain global . program2 finglobal program3 llenarmain MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON gotomain global . program2 finglobal llenarmain MAIN main1 mainc finmain
    (3) program -> PROGRAM COLON gotomain global . finglobal program3 llenarmain MAIN main1 mainc finmain
    (6) program2 -> . crear program2
    (7) program2 -> . crear
    (14) finglobal -> .
    (11) crear -> . var
    (12) crear -> . vector
    (17) var -> . VAR tipo ID SEMICOLON
    (22) vector -> . VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON

    FUNCTION        reduce using rule 14 (finglobal -> .)
    VAR             shift and go to state 12
    VECTOR          shift and go to state 13

    program2                       shift and go to state 7
    finglobal                      shift and go to state 8
    crear                          shift and go to state 9
    var                            shift and go to state 10
    vector                         shift and go to state 11

state 6

    (4) program -> PROGRAM COLON gotomain llenarmain . MAIN main1 mainc finmain

    MAIN            shift and go to state 14


state 7

    (1) program -> PROGRAM COLON gotomain global program2 . finglobal program3 llenarmain MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON gotomain global program2 . finglobal llenarmain MAIN main1 mainc finmain
    (14) finglobal -> .

    FUNCTION        reduce using rule 14 (finglobal -> .)
    MAIN            reduce using rule 14 (finglobal -> .)

    finglobal                      shift and go to state 15

state 8

    (3) program -> PROGRAM COLON gotomain global finglobal . program3 llenarmain MAIN main1 mainc finmain
    (8) program3 -> . function program3
    (9) program3 -> . function
    (24) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return1 RKEY
    (25) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY bloq return1 RKEY
    (26) function -> . FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (27) function -> . FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY bloq RKEY
    (28) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (29) function -> . FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (30) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return1 RKEY
    (31) function -> . FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (32) function -> . FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY bloq RKEY
    (33) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY bloq return1 RKEY
    (34) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY

    FUNCTION        shift and go to state 18

    program3                       shift and go to state 16
    function                       shift and go to state 17

state 9

    (6) program2 -> crear . program2
    (7) program2 -> crear .
    (6) program2 -> . crear program2
    (7) program2 -> . crear
    (11) crear -> . var
    (12) crear -> . vector
    (17) var -> . VAR tipo ID SEMICOLON
    (22) vector -> . VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON

    FUNCTION        reduce using rule 7 (program2 -> crear .)
    MAIN            reduce using rule 7 (program2 -> crear .)
    VAR             shift and go to state 12
    VECTOR          shift and go to state 13

    crear                          shift and go to state 9
    program2                       shift and go to state 19
    var                            shift and go to state 10
    vector                         shift and go to state 11

state 10

    (11) crear -> var .

    VAR             reduce using rule 11 (crear -> var .)
    VECTOR          reduce using rule 11 (crear -> var .)
    FUNCTION        reduce using rule 11 (crear -> var .)
    MAIN            reduce using rule 11 (crear -> var .)


state 11

    (12) crear -> vector .

    VAR             reduce using rule 12 (crear -> vector .)
    VECTOR          reduce using rule 12 (crear -> vector .)
    FUNCTION        reduce using rule 12 (crear -> vector .)
    MAIN            reduce using rule 12 (crear -> vector .)


state 12

    (17) var -> VAR . tipo ID SEMICOLON
    (18) tipo -> . INT
    (19) tipo -> . FLOAT
    (20) tipo -> . STRING
    (21) tipo -> . BOOL

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    STRING          shift and go to state 23
    BOOL            shift and go to state 24

    tipo                           shift and go to state 20

state 13

    (22) vector -> VECTOR . initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON
    (23) initvector -> .

    INT             reduce using rule 23 (initvector -> .)
    FLOAT           reduce using rule 23 (initvector -> .)
    STRING          reduce using rule 23 (initvector -> .)
    BOOL            reduce using rule 23 (initvector -> .)

    initvector                     shift and go to state 25

state 14

    (4) program -> PROGRAM COLON gotomain llenarmain MAIN . main1 mainc finmain
    (15) main1 -> .

    LKEY            reduce using rule 15 (main1 -> .)

    main1                          shift and go to state 26

state 15

    (1) program -> PROGRAM COLON gotomain global program2 finglobal . program3 llenarmain MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON gotomain global program2 finglobal . llenarmain MAIN main1 mainc finmain
    (8) program3 -> . function program3
    (9) program3 -> . function
    (10) llenarmain -> .
    (24) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return1 RKEY
    (25) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY bloq return1 RKEY
    (26) function -> . FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (27) function -> . FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY bloq RKEY
    (28) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (29) function -> . FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (30) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return1 RKEY
    (31) function -> . FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (32) function -> . FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY bloq RKEY
    (33) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY bloq return1 RKEY
    (34) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY

    MAIN            reduce using rule 10 (llenarmain -> .)
    FUNCTION        shift and go to state 18

    program3                       shift and go to state 27
    llenarmain                     shift and go to state 28
    function                       shift and go to state 17

state 16

    (3) program -> PROGRAM COLON gotomain global finglobal program3 . llenarmain MAIN main1 mainc finmain
    (10) llenarmain -> .

    MAIN            reduce using rule 10 (llenarmain -> .)

    llenarmain                     shift and go to state 29

state 17

    (8) program3 -> function . program3
    (9) program3 -> function .
    (8) program3 -> . function program3
    (9) program3 -> . function
    (24) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return1 RKEY
    (25) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY bloq return1 RKEY
    (26) function -> . FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (27) function -> . FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY bloq RKEY
    (28) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (29) function -> . FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (30) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return1 RKEY
    (31) function -> . FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (32) function -> . FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY bloq RKEY
    (33) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY bloq return1 RKEY
    (34) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY

    MAIN            reduce using rule 9 (program3 -> function .)
    FUNCTION        shift and go to state 18

    function                       shift and go to state 17
    program3                       shift and go to state 30

state 18

    (24) function -> FUNCTION . functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return1 RKEY
    (25) function -> FUNCTION . functype ID addInTable LPAREN funci RPAREN LKEY bloq return1 RKEY
    (26) function -> FUNCTION . pushvoid ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (27) function -> FUNCTION . pushvoid ID addInTable LPAREN funci RPAREN LKEY bloq RKEY
    (28) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (29) function -> FUNCTION . pushvoid ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (30) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY localvar bloq return1 RKEY
    (31) function -> FUNCTION . pushvoid ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (32) function -> FUNCTION . pushvoid ID addInTable LPAREN RPAREN LKEY bloq RKEY
    (33) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY bloq return1 RKEY
    (34) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY RKEY
    (35) functype -> . INT
    (36) functype -> . FLOAT
    (37) functype -> . STRING
    (38) functype -> . BOOL
    (39) pushvoid -> . VOID

    INT             shift and go to state 33
    FLOAT           shift and go to state 34
    STRING          shift and go to state 35
    BOOL            shift and go to state 36
    VOID            shift and go to state 37

    functype                       shift and go to state 31
    pushvoid                       shift and go to state 32

state 19

    (6) program2 -> crear program2 .

    FUNCTION        reduce using rule 6 (program2 -> crear program2 .)
    MAIN            reduce using rule 6 (program2 -> crear program2 .)


state 20

    (17) var -> VAR tipo . ID SEMICOLON

    ID              shift and go to state 38


state 21

    (18) tipo -> INT .

    ID              reduce using rule 18 (tipo -> INT .)


state 22

    (19) tipo -> FLOAT .

    ID              reduce using rule 19 (tipo -> FLOAT .)


state 23

    (20) tipo -> STRING .

    ID              reduce using rule 20 (tipo -> STRING .)


state 24

    (21) tipo -> BOOL .

    ID              reduce using rule 21 (tipo -> BOOL .)


state 25

    (22) vector -> VECTOR initvector . tipo ID LBRACE CTE_I RBRACE SEMICOLON
    (18) tipo -> . INT
    (19) tipo -> . FLOAT
    (20) tipo -> . STRING
    (21) tipo -> . BOOL

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    STRING          shift and go to state 23
    BOOL            shift and go to state 24

    tipo                           shift and go to state 39

state 26

    (4) program -> PROGRAM COLON gotomain llenarmain MAIN main1 . mainc finmain
    (51) mainc -> . LKEY RKEY
    (52) mainc -> . LKEY localvar bloq RKEY
    (53) mainc -> . LKEY localvar RKEY
    (54) mainc -> . LKEY bloq RKEY

    LKEY            shift and go to state 41

    mainc                          shift and go to state 40

state 27

    (1) program -> PROGRAM COLON gotomain global program2 finglobal program3 . llenarmain MAIN main1 mainc finmain
    (10) llenarmain -> .

    MAIN            reduce using rule 10 (llenarmain -> .)

    llenarmain                     shift and go to state 42

state 28

    (2) program -> PROGRAM COLON gotomain global program2 finglobal llenarmain . MAIN main1 mainc finmain

    MAIN            shift and go to state 43


state 29

    (3) program -> PROGRAM COLON gotomain global finglobal program3 llenarmain . MAIN main1 mainc finmain

    MAIN            shift and go to state 44


state 30

    (8) program3 -> function program3 .

    MAIN            reduce using rule 8 (program3 -> function program3 .)


state 31

    (24) function -> FUNCTION functype . ID addInTable LPAREN funci RPAREN LKEY localvar bloq return1 RKEY
    (25) function -> FUNCTION functype . ID addInTable LPAREN funci RPAREN LKEY bloq return1 RKEY
    (28) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (30) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY localvar bloq return1 RKEY
    (33) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY bloq return1 RKEY
    (34) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY RKEY

    ID              shift and go to state 45


state 32

    (26) function -> FUNCTION pushvoid . ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (27) function -> FUNCTION pushvoid . ID addInTable LPAREN funci RPAREN LKEY bloq RKEY
    (29) function -> FUNCTION pushvoid . ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (31) function -> FUNCTION pushvoid . ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (32) function -> FUNCTION pushvoid . ID addInTable LPAREN RPAREN LKEY bloq RKEY

    ID              shift and go to state 46


state 33

    (35) functype -> INT .

    ID              reduce using rule 35 (functype -> INT .)


state 34

    (36) functype -> FLOAT .

    ID              reduce using rule 36 (functype -> FLOAT .)


state 35

    (37) functype -> STRING .

    ID              reduce using rule 37 (functype -> STRING .)


state 36

    (38) functype -> BOOL .

    ID              reduce using rule 38 (functype -> BOOL .)


state 37

    (39) pushvoid -> VOID .

    ID              reduce using rule 39 (pushvoid -> VOID .)


state 38

    (17) var -> VAR tipo ID . SEMICOLON

    SEMICOLON       shift and go to state 47


state 39

    (22) vector -> VECTOR initvector tipo . ID LBRACE CTE_I RBRACE SEMICOLON

    ID              shift and go to state 48


state 40

    (4) program -> PROGRAM COLON gotomain llenarmain MAIN main1 mainc . finmain
    (16) finmain -> .

    $end            reduce using rule 16 (finmain -> .)

    finmain                        shift and go to state 49

state 41

    (51) mainc -> LKEY . RKEY
    (52) mainc -> LKEY . localvar bloq RKEY
    (53) mainc -> LKEY . localvar RKEY
    (54) mainc -> LKEY . bloq RKEY
    (43) localvar -> . var
    (44) localvar -> . vector
    (45) localvar -> . var localvar
    (46) localvar -> . vector localvar
    (55) bloq -> . estat
    (56) bloq -> . estat bloq
    (17) var -> . VAR tipo ID SEMICOLON
    (22) vector -> . VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON
    (57) estat -> . asign
    (58) estat -> . cond
    (59) estat -> . escrit
    (60) estat -> . ciclo
    (61) estat -> . leer
    (62) estat -> . fcallvoid
    (63) estat -> . findvec
    (64) estat -> . sorti
    (65) asign -> . ID pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT pushop LPAREN escriti RPAREN SEMICOLON
    (75) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (76) leer -> . READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (113) fcallvoid -> . ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> . ID existfunc LPAREN startera RPAREN SEMICOLON
    (108) findvec -> . FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (109) sorti -> . SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    RKEY            shift and go to state 50
    VAR             shift and go to state 12
    VECTOR          shift and go to state 13
    ID              shift and go to state 56
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    READ            shift and go to state 68
    FIND            shift and go to state 69
    SORT            shift and go to state 70

    localvar                       shift and go to state 51
    bloq                           shift and go to state 52
    var                            shift and go to state 53
    vector                         shift and go to state 54
    estat                          shift and go to state 55
    asign                          shift and go to state 57
    cond                           shift and go to state 58
    escrit                         shift and go to state 59
    ciclo                          shift and go to state 60
    leer                           shift and go to state 61
    fcallvoid                      shift and go to state 62
    findvec                        shift and go to state 63
    sorti                          shift and go to state 64

state 42

    (1) program -> PROGRAM COLON gotomain global program2 finglobal program3 llenarmain . MAIN main1 mainc finmain

    MAIN            shift and go to state 71


state 43

    (2) program -> PROGRAM COLON gotomain global program2 finglobal llenarmain MAIN . main1 mainc finmain
    (15) main1 -> .

    LKEY            reduce using rule 15 (main1 -> .)

    main1                          shift and go to state 72

state 44

    (3) program -> PROGRAM COLON gotomain global finglobal program3 llenarmain MAIN . main1 mainc finmain
    (15) main1 -> .

    LKEY            reduce using rule 15 (main1 -> .)

    main1                          shift and go to state 73

state 45

    (24) function -> FUNCTION functype ID . addInTable LPAREN funci RPAREN LKEY localvar bloq return1 RKEY
    (25) function -> FUNCTION functype ID . addInTable LPAREN funci RPAREN LKEY bloq return1 RKEY
    (28) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY localvar RKEY
    (30) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY localvar bloq return1 RKEY
    (33) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY bloq return1 RKEY
    (34) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY RKEY
    (40) addInTable -> .

    LPAREN          reduce using rule 40 (addInTable -> .)

    addInTable                     shift and go to state 74

state 46

    (26) function -> FUNCTION pushvoid ID . addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (27) function -> FUNCTION pushvoid ID . addInTable LPAREN funci RPAREN LKEY bloq RKEY
    (29) function -> FUNCTION pushvoid ID . addInTable LPAREN RPAREN LKEY localvar RKEY
    (31) function -> FUNCTION pushvoid ID . addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (32) function -> FUNCTION pushvoid ID . addInTable LPAREN RPAREN LKEY bloq RKEY
    (40) addInTable -> .

    LPAREN          reduce using rule 40 (addInTable -> .)

    addInTable                     shift and go to state 75

state 47

    (17) var -> VAR tipo ID SEMICOLON .

    VAR             reduce using rule 17 (var -> VAR tipo ID SEMICOLON .)
    VECTOR          reduce using rule 17 (var -> VAR tipo ID SEMICOLON .)
    FUNCTION        reduce using rule 17 (var -> VAR tipo ID SEMICOLON .)
    MAIN            reduce using rule 17 (var -> VAR tipo ID SEMICOLON .)
    RKEY            reduce using rule 17 (var -> VAR tipo ID SEMICOLON .)
    ID              reduce using rule 17 (var -> VAR tipo ID SEMICOLON .)
    IF              reduce using rule 17 (var -> VAR tipo ID SEMICOLON .)
    PRINT           reduce using rule 17 (var -> VAR tipo ID SEMICOLON .)
    WHILE           reduce using rule 17 (var -> VAR tipo ID SEMICOLON .)
    READ            reduce using rule 17 (var -> VAR tipo ID SEMICOLON .)
    FIND            reduce using rule 17 (var -> VAR tipo ID SEMICOLON .)
    SORT            reduce using rule 17 (var -> VAR tipo ID SEMICOLON .)


state 48

    (22) vector -> VECTOR initvector tipo ID . LBRACE CTE_I RBRACE SEMICOLON

    LBRACE          shift and go to state 76


state 49

    (4) program -> PROGRAM COLON gotomain llenarmain MAIN main1 mainc finmain .

    $end            reduce using rule 4 (program -> PROGRAM COLON gotomain llenarmain MAIN main1 mainc finmain .)


state 50

    (51) mainc -> LKEY RKEY .

    $end            reduce using rule 51 (mainc -> LKEY RKEY .)


state 51

    (52) mainc -> LKEY localvar . bloq RKEY
    (53) mainc -> LKEY localvar . RKEY
    (55) bloq -> . estat
    (56) bloq -> . estat bloq
    (57) estat -> . asign
    (58) estat -> . cond
    (59) estat -> . escrit
    (60) estat -> . ciclo
    (61) estat -> . leer
    (62) estat -> . fcallvoid
    (63) estat -> . findvec
    (64) estat -> . sorti
    (65) asign -> . ID pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT pushop LPAREN escriti RPAREN SEMICOLON
    (75) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (76) leer -> . READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (113) fcallvoid -> . ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> . ID existfunc LPAREN startera RPAREN SEMICOLON
    (108) findvec -> . FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (109) sorti -> . SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    RKEY            shift and go to state 78
    ID              shift and go to state 56
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    READ            shift and go to state 68
    FIND            shift and go to state 69
    SORT            shift and go to state 70

    bloq                           shift and go to state 77
    estat                          shift and go to state 55
    asign                          shift and go to state 57
    cond                           shift and go to state 58
    escrit                         shift and go to state 59
    ciclo                          shift and go to state 60
    leer                           shift and go to state 61
    fcallvoid                      shift and go to state 62
    findvec                        shift and go to state 63
    sorti                          shift and go to state 64

state 52

    (54) mainc -> LKEY bloq . RKEY

    RKEY            shift and go to state 79


state 53

    (43) localvar -> var .
    (45) localvar -> var . localvar
    (43) localvar -> . var
    (44) localvar -> . vector
    (45) localvar -> . var localvar
    (46) localvar -> . vector localvar
    (17) var -> . VAR tipo ID SEMICOLON
    (22) vector -> . VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            reduce using rule 43 (localvar -> var .)
    ID              reduce using rule 43 (localvar -> var .)
    IF              reduce using rule 43 (localvar -> var .)
    PRINT           reduce using rule 43 (localvar -> var .)
    WHILE           reduce using rule 43 (localvar -> var .)
    READ            reduce using rule 43 (localvar -> var .)
    FIND            reduce using rule 43 (localvar -> var .)
    SORT            reduce using rule 43 (localvar -> var .)
    VAR             shift and go to state 12
    VECTOR          shift and go to state 13

    var                            shift and go to state 53
    localvar                       shift and go to state 80
    vector                         shift and go to state 54

state 54

    (44) localvar -> vector .
    (46) localvar -> vector . localvar
    (43) localvar -> . var
    (44) localvar -> . vector
    (45) localvar -> . var localvar
    (46) localvar -> . vector localvar
    (17) var -> . VAR tipo ID SEMICOLON
    (22) vector -> . VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            reduce using rule 44 (localvar -> vector .)
    ID              reduce using rule 44 (localvar -> vector .)
    IF              reduce using rule 44 (localvar -> vector .)
    PRINT           reduce using rule 44 (localvar -> vector .)
    WHILE           reduce using rule 44 (localvar -> vector .)
    READ            reduce using rule 44 (localvar -> vector .)
    FIND            reduce using rule 44 (localvar -> vector .)
    SORT            reduce using rule 44 (localvar -> vector .)
    VAR             shift and go to state 12
    VECTOR          shift and go to state 13

    vector                         shift and go to state 54
    localvar                       shift and go to state 81
    var                            shift and go to state 53

state 55

    (55) bloq -> estat .
    (56) bloq -> estat . bloq
    (55) bloq -> . estat
    (56) bloq -> . estat bloq
    (57) estat -> . asign
    (58) estat -> . cond
    (59) estat -> . escrit
    (60) estat -> . ciclo
    (61) estat -> . leer
    (62) estat -> . fcallvoid
    (63) estat -> . findvec
    (64) estat -> . sorti
    (65) asign -> . ID pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT pushop LPAREN escriti RPAREN SEMICOLON
    (75) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (76) leer -> . READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (113) fcallvoid -> . ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> . ID existfunc LPAREN startera RPAREN SEMICOLON
    (108) findvec -> . FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (109) sorti -> . SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    RKEY            reduce using rule 55 (bloq -> estat .)
    RETURN          reduce using rule 55 (bloq -> estat .)
    ID              shift and go to state 56
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    READ            shift and go to state 68
    FIND            shift and go to state 69
    SORT            shift and go to state 70

    estat                          shift and go to state 55
    bloq                           shift and go to state 82
    asign                          shift and go to state 57
    cond                           shift and go to state 58
    escrit                         shift and go to state 59
    ciclo                          shift and go to state 60
    leer                           shift and go to state 61
    fcallvoid                      shift and go to state 62
    findvec                        shift and go to state 63
    sorti                          shift and go to state 64

state 56

    (65) asign -> ID . pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> ID . pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> ID . LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (113) fcallvoid -> ID . existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> ID . existfunc LPAREN startera RPAREN SEMICOLON
    (122) pushid -> .
    (115) existfunc -> .

    LBRACE          shift and go to state 84
    EQUAL           reduce using rule 122 (pushid -> .)
    LPAREN          reduce using rule 115 (existfunc -> .)

    pushid                         shift and go to state 83
    existfunc                      shift and go to state 85

state 57

    (57) estat -> asign .

    ID              reduce using rule 57 (estat -> asign .)
    IF              reduce using rule 57 (estat -> asign .)
    PRINT           reduce using rule 57 (estat -> asign .)
    WHILE           reduce using rule 57 (estat -> asign .)
    READ            reduce using rule 57 (estat -> asign .)
    FIND            reduce using rule 57 (estat -> asign .)
    SORT            reduce using rule 57 (estat -> asign .)
    RKEY            reduce using rule 57 (estat -> asign .)
    RETURN          reduce using rule 57 (estat -> asign .)


state 58

    (58) estat -> cond .

    ID              reduce using rule 58 (estat -> cond .)
    IF              reduce using rule 58 (estat -> cond .)
    PRINT           reduce using rule 58 (estat -> cond .)
    WHILE           reduce using rule 58 (estat -> cond .)
    READ            reduce using rule 58 (estat -> cond .)
    FIND            reduce using rule 58 (estat -> cond .)
    SORT            reduce using rule 58 (estat -> cond .)
    RKEY            reduce using rule 58 (estat -> cond .)
    RETURN          reduce using rule 58 (estat -> cond .)


state 59

    (59) estat -> escrit .

    ID              reduce using rule 59 (estat -> escrit .)
    IF              reduce using rule 59 (estat -> escrit .)
    PRINT           reduce using rule 59 (estat -> escrit .)
    WHILE           reduce using rule 59 (estat -> escrit .)
    READ            reduce using rule 59 (estat -> escrit .)
    FIND            reduce using rule 59 (estat -> escrit .)
    SORT            reduce using rule 59 (estat -> escrit .)
    RKEY            reduce using rule 59 (estat -> escrit .)
    RETURN          reduce using rule 59 (estat -> escrit .)


state 60

    (60) estat -> ciclo .

    ID              reduce using rule 60 (estat -> ciclo .)
    IF              reduce using rule 60 (estat -> ciclo .)
    PRINT           reduce using rule 60 (estat -> ciclo .)
    WHILE           reduce using rule 60 (estat -> ciclo .)
    READ            reduce using rule 60 (estat -> ciclo .)
    FIND            reduce using rule 60 (estat -> ciclo .)
    SORT            reduce using rule 60 (estat -> ciclo .)
    RKEY            reduce using rule 60 (estat -> ciclo .)
    RETURN          reduce using rule 60 (estat -> ciclo .)


state 61

    (61) estat -> leer .

    ID              reduce using rule 61 (estat -> leer .)
    IF              reduce using rule 61 (estat -> leer .)
    PRINT           reduce using rule 61 (estat -> leer .)
    WHILE           reduce using rule 61 (estat -> leer .)
    READ            reduce using rule 61 (estat -> leer .)
    FIND            reduce using rule 61 (estat -> leer .)
    SORT            reduce using rule 61 (estat -> leer .)
    RKEY            reduce using rule 61 (estat -> leer .)
    RETURN          reduce using rule 61 (estat -> leer .)


state 62

    (62) estat -> fcallvoid .

    ID              reduce using rule 62 (estat -> fcallvoid .)
    IF              reduce using rule 62 (estat -> fcallvoid .)
    PRINT           reduce using rule 62 (estat -> fcallvoid .)
    WHILE           reduce using rule 62 (estat -> fcallvoid .)
    READ            reduce using rule 62 (estat -> fcallvoid .)
    FIND            reduce using rule 62 (estat -> fcallvoid .)
    SORT            reduce using rule 62 (estat -> fcallvoid .)
    RKEY            reduce using rule 62 (estat -> fcallvoid .)
    RETURN          reduce using rule 62 (estat -> fcallvoid .)


state 63

    (63) estat -> findvec .

    ID              reduce using rule 63 (estat -> findvec .)
    IF              reduce using rule 63 (estat -> findvec .)
    PRINT           reduce using rule 63 (estat -> findvec .)
    WHILE           reduce using rule 63 (estat -> findvec .)
    READ            reduce using rule 63 (estat -> findvec .)
    FIND            reduce using rule 63 (estat -> findvec .)
    SORT            reduce using rule 63 (estat -> findvec .)
    RKEY            reduce using rule 63 (estat -> findvec .)
    RETURN          reduce using rule 63 (estat -> findvec .)


state 64

    (64) estat -> sorti .

    ID              reduce using rule 64 (estat -> sorti .)
    IF              reduce using rule 64 (estat -> sorti .)
    PRINT           reduce using rule 64 (estat -> sorti .)
    WHILE           reduce using rule 64 (estat -> sorti .)
    READ            reduce using rule 64 (estat -> sorti .)
    FIND            reduce using rule 64 (estat -> sorti .)
    SORT            reduce using rule 64 (estat -> sorti .)
    RKEY            reduce using rule 64 (estat -> sorti .)
    RETURN          reduce using rule 64 (estat -> sorti .)


state 65

    (68) cond -> IF . LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> IF . LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif

    LPAREN          shift and go to state 86


state 66

    (70) escrit -> PRINT . pushop LPAREN escriti RPAREN SEMICOLON
    (123) pushop -> .

    LPAREN          reduce using rule 123 (pushop -> .)

    pushop                         shift and go to state 87

state 67

    (75) ciclo -> WHILE . while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (133) while1 -> .

    LPAREN          reduce using rule 133 (while1 -> .)

    while1                         shift and go to state 88

state 68

    (76) leer -> READ . pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (123) pushop -> .

    LPAREN          reduce using rule 123 (pushop -> .)

    pushop                         shift and go to state 89

state 69

    (108) findvec -> FIND . pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (123) pushop -> .

    LPAREN          reduce using rule 123 (pushop -> .)

    pushop                         shift and go to state 90

state 70

    (109) sorti -> SORT . pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON
    (123) pushop -> .

    LPAREN          reduce using rule 123 (pushop -> .)

    pushop                         shift and go to state 91

state 71

    (1) program -> PROGRAM COLON gotomain global program2 finglobal program3 llenarmain MAIN . main1 mainc finmain
    (15) main1 -> .

    LKEY            reduce using rule 15 (main1 -> .)

    main1                          shift and go to state 92

state 72

    (2) program -> PROGRAM COLON gotomain global program2 finglobal llenarmain MAIN main1 . mainc finmain
    (51) mainc -> . LKEY RKEY
    (52) mainc -> . LKEY localvar bloq RKEY
    (53) mainc -> . LKEY localvar RKEY
    (54) mainc -> . LKEY bloq RKEY

    LKEY            shift and go to state 41

    mainc                          shift and go to state 93

state 73

    (3) program -> PROGRAM COLON gotomain global finglobal program3 llenarmain MAIN main1 . mainc finmain
    (51) mainc -> . LKEY RKEY
    (52) mainc -> . LKEY localvar bloq RKEY
    (53) mainc -> . LKEY localvar RKEY
    (54) mainc -> . LKEY bloq RKEY

    LKEY            shift and go to state 41

    mainc                          shift and go to state 94

state 74

    (24) function -> FUNCTION functype ID addInTable . LPAREN funci RPAREN LKEY localvar bloq return1 RKEY
    (25) function -> FUNCTION functype ID addInTable . LPAREN funci RPAREN LKEY bloq return1 RKEY
    (28) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY localvar RKEY
    (30) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY localvar bloq return1 RKEY
    (33) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY bloq return1 RKEY
    (34) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY RKEY

    LPAREN          shift and go to state 95


state 75

    (26) function -> FUNCTION pushvoid ID addInTable . LPAREN funci RPAREN LKEY localvar bloq RKEY
    (27) function -> FUNCTION pushvoid ID addInTable . LPAREN funci RPAREN LKEY bloq RKEY
    (29) function -> FUNCTION pushvoid ID addInTable . LPAREN RPAREN LKEY localvar RKEY
    (31) function -> FUNCTION pushvoid ID addInTable . LPAREN RPAREN LKEY localvar bloq RKEY
    (32) function -> FUNCTION pushvoid ID addInTable . LPAREN RPAREN LKEY bloq RKEY

    LPAREN          shift and go to state 96


state 76

    (22) vector -> VECTOR initvector tipo ID LBRACE . CTE_I RBRACE SEMICOLON

    CTE_I           shift and go to state 97


state 77

    (52) mainc -> LKEY localvar bloq . RKEY

    RKEY            shift and go to state 98


state 78

    (53) mainc -> LKEY localvar RKEY .

    $end            reduce using rule 53 (mainc -> LKEY localvar RKEY .)


state 79

    (54) mainc -> LKEY bloq RKEY .

    $end            reduce using rule 54 (mainc -> LKEY bloq RKEY .)


state 80

    (45) localvar -> var localvar .

    RKEY            reduce using rule 45 (localvar -> var localvar .)
    ID              reduce using rule 45 (localvar -> var localvar .)
    IF              reduce using rule 45 (localvar -> var localvar .)
    PRINT           reduce using rule 45 (localvar -> var localvar .)
    WHILE           reduce using rule 45 (localvar -> var localvar .)
    READ            reduce using rule 45 (localvar -> var localvar .)
    FIND            reduce using rule 45 (localvar -> var localvar .)
    SORT            reduce using rule 45 (localvar -> var localvar .)


state 81

    (46) localvar -> vector localvar .

    RKEY            reduce using rule 46 (localvar -> vector localvar .)
    ID              reduce using rule 46 (localvar -> vector localvar .)
    IF              reduce using rule 46 (localvar -> vector localvar .)
    PRINT           reduce using rule 46 (localvar -> vector localvar .)
    WHILE           reduce using rule 46 (localvar -> vector localvar .)
    READ            reduce using rule 46 (localvar -> vector localvar .)
    FIND            reduce using rule 46 (localvar -> vector localvar .)
    SORT            reduce using rule 46 (localvar -> vector localvar .)


state 82

    (56) bloq -> estat bloq .

    RKEY            reduce using rule 56 (bloq -> estat bloq .)
    RETURN          reduce using rule 56 (bloq -> estat bloq .)


state 83

    (65) asign -> ID pushid . EQUAL pushop fcall SEMICOLON
    (66) asign -> ID pushid . EQUAL pushop expres resolverasignacion SEMICOLON

    EQUAL           shift and go to state 99


state 84

    (67) asign -> ID LBRACE . exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (80) exr -> . ex
    (81) exr -> . ex rel exr resrel
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    exr                            shift and go to state 101
    ex                             shift and go to state 102
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 85

    (113) fcallvoid -> ID existfunc . LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> ID existfunc . LPAREN startera RPAREN SEMICOLON

    LPAREN          shift and go to state 115


state 86

    (68) cond -> IF LPAREN . expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> IF LPAREN . expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (78) expres -> . exr
    (79) expres -> . exr log expres reslog
    (80) exr -> . ex
    (81) exr -> . ex rel exr resrel
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    expres                         shift and go to state 116
    exr                            shift and go to state 117
    ex                             shift and go to state 102
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 87

    (70) escrit -> PRINT pushop . LPAREN escriti RPAREN SEMICOLON

    LPAREN          shift and go to state 118


state 88

    (75) ciclo -> WHILE while1 . LPAREN expres RPAREN while2 LKEY bloq RKEY while3

    LPAREN          shift and go to state 119


state 89

    (76) leer -> READ pushop . LPAREN ID pushid RPAREN readid SEMICOLON

    LPAREN          shift and go to state 120


state 90

    (108) findvec -> FIND pushop . LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON

    LPAREN          shift and go to state 121


state 91

    (109) sorti -> SORT pushop . LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    LPAREN          shift and go to state 122


state 92

    (1) program -> PROGRAM COLON gotomain global program2 finglobal program3 llenarmain MAIN main1 . mainc finmain
    (51) mainc -> . LKEY RKEY
    (52) mainc -> . LKEY localvar bloq RKEY
    (53) mainc -> . LKEY localvar RKEY
    (54) mainc -> . LKEY bloq RKEY

    LKEY            shift and go to state 41

    mainc                          shift and go to state 123

state 93

    (2) program -> PROGRAM COLON gotomain global program2 finglobal llenarmain MAIN main1 mainc . finmain
    (16) finmain -> .

    $end            reduce using rule 16 (finmain -> .)

    finmain                        shift and go to state 124

state 94

    (3) program -> PROGRAM COLON gotomain global finglobal program3 llenarmain MAIN main1 mainc . finmain
    (16) finmain -> .

    $end            reduce using rule 16 (finmain -> .)

    finmain                        shift and go to state 125

state 95

    (24) function -> FUNCTION functype ID addInTable LPAREN . funci RPAREN LKEY localvar bloq return1 RKEY
    (25) function -> FUNCTION functype ID addInTable LPAREN . funci RPAREN LKEY bloq return1 RKEY
    (28) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY localvar RKEY
    (30) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY localvar bloq return1 RKEY
    (33) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY bloq return1 RKEY
    (34) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY RKEY
    (41) funci -> . tipo ID sumparam
    (42) funci -> . tipo ID sumparam COMA funci
    (18) tipo -> . INT
    (19) tipo -> . FLOAT
    (20) tipo -> . STRING
    (21) tipo -> . BOOL

    RPAREN          shift and go to state 127
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    STRING          shift and go to state 23
    BOOL            shift and go to state 24

    funci                          shift and go to state 126
    tipo                           shift and go to state 128

state 96

    (26) function -> FUNCTION pushvoid ID addInTable LPAREN . funci RPAREN LKEY localvar bloq RKEY
    (27) function -> FUNCTION pushvoid ID addInTable LPAREN . funci RPAREN LKEY bloq RKEY
    (29) function -> FUNCTION pushvoid ID addInTable LPAREN . RPAREN LKEY localvar RKEY
    (31) function -> FUNCTION pushvoid ID addInTable LPAREN . RPAREN LKEY localvar bloq RKEY
    (32) function -> FUNCTION pushvoid ID addInTable LPAREN . RPAREN LKEY bloq RKEY
    (41) funci -> . tipo ID sumparam
    (42) funci -> . tipo ID sumparam COMA funci
    (18) tipo -> . INT
    (19) tipo -> . FLOAT
    (20) tipo -> . STRING
    (21) tipo -> . BOOL

    RPAREN          shift and go to state 130
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    STRING          shift and go to state 23
    BOOL            shift and go to state 24

    funci                          shift and go to state 129
    tipo                           shift and go to state 128

state 97

    (22) vector -> VECTOR initvector tipo ID LBRACE CTE_I . RBRACE SEMICOLON

    RBRACE          shift and go to state 131


state 98

    (52) mainc -> LKEY localvar bloq RKEY .

    $end            reduce using rule 52 (mainc -> LKEY localvar bloq RKEY .)


state 99

    (65) asign -> ID pushid EQUAL . pushop fcall SEMICOLON
    (66) asign -> ID pushid EQUAL . pushop expres resolverasignacion SEMICOLON
    (123) pushop -> .

    ID              reduce using rule 123 (pushop -> .)
    LPAREN          reduce using rule 123 (pushop -> .)
    PLUS            reduce using rule 123 (pushop -> .)
    MINUS           reduce using rule 123 (pushop -> .)
    CTE_I           reduce using rule 123 (pushop -> .)
    CTE_F           reduce using rule 123 (pushop -> .)
    CTE_S           reduce using rule 123 (pushop -> .)
    TRUE            reduce using rule 123 (pushop -> .)
    FALSE           reduce using rule 123 (pushop -> .)

    pushop                         shift and go to state 132

state 100

    (101) var_cte -> ID . pushid
    (110) asigvector -> ID . pushid LBRACE ex RBRACE
    (122) pushid -> .

    LBRACE          reduce using rule 122 (pushid -> .)
    TIMES           reduce using rule 122 (pushid -> .)
    DIVIDE          reduce using rule 122 (pushid -> .)
    PLUS            reduce using rule 122 (pushid -> .)
    MINUS           reduce using rule 122 (pushid -> .)
    LOWERTHAN       reduce using rule 122 (pushid -> .)
    MORETHAN        reduce using rule 122 (pushid -> .)
    LOWEREQ         reduce using rule 122 (pushid -> .)
    MOREEQ          reduce using rule 122 (pushid -> .)
    SAME            reduce using rule 122 (pushid -> .)
    DIFFERENT       reduce using rule 122 (pushid -> .)
    RBRACE          reduce using rule 122 (pushid -> .)
    OR              reduce using rule 122 (pushid -> .)
    AND             reduce using rule 122 (pushid -> .)
    RPAREN          reduce using rule 122 (pushid -> .)
    COMA            reduce using rule 122 (pushid -> .)
    SEMICOLON       reduce using rule 122 (pushid -> .)

    pushid                         shift and go to state 133

state 101

    (67) asign -> ID LBRACE exr . RBRACE EQUAL pushop expres resasignvec SEMICOLON

    RBRACE          shift and go to state 134


state 102

    (80) exr -> ex .
    (81) exr -> ex . rel exr resrel
    (93) rel -> . LOWERTHAN
    (94) rel -> . MORETHAN
    (95) rel -> . LOWEREQ
    (96) rel -> . MOREEQ
    (97) rel -> . SAME
    (98) rel -> . DIFFERENT

    RBRACE          reduce using rule 80 (exr -> ex .)
    OR              reduce using rule 80 (exr -> ex .)
    AND             reduce using rule 80 (exr -> ex .)
    RPAREN          reduce using rule 80 (exr -> ex .)
    COMA            reduce using rule 80 (exr -> ex .)
    SEMICOLON       reduce using rule 80 (exr -> ex .)
    LOWERTHAN       shift and go to state 136
    MORETHAN        shift and go to state 137
    LOWEREQ         shift and go to state 138
    MOREEQ          shift and go to state 139
    SAME            shift and go to state 140
    DIFFERENT       shift and go to state 141

    rel                            shift and go to state 135

state 103

    (83) ex -> term . resterm
    (84) ex -> term . resterm PLUS pushop ex
    (85) ex -> term . resterm MINUS pushop ex
    (128) resterm -> .

    PLUS            reduce using rule 128 (resterm -> .)
    MINUS           reduce using rule 128 (resterm -> .)
    LOWERTHAN       reduce using rule 128 (resterm -> .)
    MORETHAN        reduce using rule 128 (resterm -> .)
    LOWEREQ         reduce using rule 128 (resterm -> .)
    MOREEQ          reduce using rule 128 (resterm -> .)
    SAME            reduce using rule 128 (resterm -> .)
    DIFFERENT       reduce using rule 128 (resterm -> .)
    RBRACE          reduce using rule 128 (resterm -> .)
    OR              reduce using rule 128 (resterm -> .)
    AND             reduce using rule 128 (resterm -> .)
    RPAREN          reduce using rule 128 (resterm -> .)
    COMA            reduce using rule 128 (resterm -> .)
    SEMICOLON       reduce using rule 128 (resterm -> .)

    resterm                        shift and go to state 142

state 104

    (91) fact -> PLUS . pushop var_cte
    (123) pushop -> .

    ID              reduce using rule 123 (pushop -> .)
    CTE_I           reduce using rule 123 (pushop -> .)
    CTE_F           reduce using rule 123 (pushop -> .)
    CTE_S           reduce using rule 123 (pushop -> .)
    TRUE            reduce using rule 123 (pushop -> .)
    FALSE           reduce using rule 123 (pushop -> .)

    pushop                         shift and go to state 143

state 105

    (92) fact -> MINUS . pushop var_cte
    (123) pushop -> .

    ID              reduce using rule 123 (pushop -> .)
    CTE_I           reduce using rule 123 (pushop -> .)
    CTE_F           reduce using rule 123 (pushop -> .)
    CTE_S           reduce using rule 123 (pushop -> .)
    TRUE            reduce using rule 123 (pushop -> .)
    FALSE           reduce using rule 123 (pushop -> .)

    pushop                         shift and go to state 144

state 106

    (86) term -> fact . resfact
    (87) term -> fact . resfact TIMES pushop term
    (88) term -> fact . resfact DIVIDE pushop term
    (127) resfact -> .

    TIMES           reduce using rule 127 (resfact -> .)
    DIVIDE          reduce using rule 127 (resfact -> .)
    PLUS            reduce using rule 127 (resfact -> .)
    MINUS           reduce using rule 127 (resfact -> .)
    LOWERTHAN       reduce using rule 127 (resfact -> .)
    MORETHAN        reduce using rule 127 (resfact -> .)
    LOWEREQ         reduce using rule 127 (resfact -> .)
    MOREEQ          reduce using rule 127 (resfact -> .)
    SAME            reduce using rule 127 (resfact -> .)
    DIFFERENT       reduce using rule 127 (resfact -> .)
    RBRACE          reduce using rule 127 (resfact -> .)
    OR              reduce using rule 127 (resfact -> .)
    AND             reduce using rule 127 (resfact -> .)
    RPAREN          reduce using rule 127 (resfact -> .)
    COMA            reduce using rule 127 (resfact -> .)
    SEMICOLON       reduce using rule 127 (resfact -> .)

    resfact                        shift and go to state 145

state 107

    (89) fact -> LPAREN . pushop expres RPAREN popop
    (123) pushop -> .

    LPAREN          reduce using rule 123 (pushop -> .)
    PLUS            reduce using rule 123 (pushop -> .)
    MINUS           reduce using rule 123 (pushop -> .)
    ID              reduce using rule 123 (pushop -> .)
    CTE_I           reduce using rule 123 (pushop -> .)
    CTE_F           reduce using rule 123 (pushop -> .)
    CTE_S           reduce using rule 123 (pushop -> .)
    TRUE            reduce using rule 123 (pushop -> .)
    FALSE           reduce using rule 123 (pushop -> .)

    pushop                         shift and go to state 146

state 108

    (90) fact -> var_cte .

    TIMES           reduce using rule 90 (fact -> var_cte .)
    DIVIDE          reduce using rule 90 (fact -> var_cte .)
    PLUS            reduce using rule 90 (fact -> var_cte .)
    MINUS           reduce using rule 90 (fact -> var_cte .)
    LOWERTHAN       reduce using rule 90 (fact -> var_cte .)
    MORETHAN        reduce using rule 90 (fact -> var_cte .)
    LOWEREQ         reduce using rule 90 (fact -> var_cte .)
    MOREEQ          reduce using rule 90 (fact -> var_cte .)
    SAME            reduce using rule 90 (fact -> var_cte .)
    DIFFERENT       reduce using rule 90 (fact -> var_cte .)
    RBRACE          reduce using rule 90 (fact -> var_cte .)
    OR              reduce using rule 90 (fact -> var_cte .)
    AND             reduce using rule 90 (fact -> var_cte .)
    RPAREN          reduce using rule 90 (fact -> var_cte .)
    COMA            reduce using rule 90 (fact -> var_cte .)
    SEMICOLON       reduce using rule 90 (fact -> var_cte .)


state 109

    (102) var_cte -> CTE_I . pushcte
    (121) pushcte -> .

    TIMES           reduce using rule 121 (pushcte -> .)
    DIVIDE          reduce using rule 121 (pushcte -> .)
    PLUS            reduce using rule 121 (pushcte -> .)
    MINUS           reduce using rule 121 (pushcte -> .)
    LOWERTHAN       reduce using rule 121 (pushcte -> .)
    MORETHAN        reduce using rule 121 (pushcte -> .)
    LOWEREQ         reduce using rule 121 (pushcte -> .)
    MOREEQ          reduce using rule 121 (pushcte -> .)
    SAME            reduce using rule 121 (pushcte -> .)
    DIFFERENT       reduce using rule 121 (pushcte -> .)
    RBRACE          reduce using rule 121 (pushcte -> .)
    OR              reduce using rule 121 (pushcte -> .)
    AND             reduce using rule 121 (pushcte -> .)
    RPAREN          reduce using rule 121 (pushcte -> .)
    COMA            reduce using rule 121 (pushcte -> .)
    SEMICOLON       reduce using rule 121 (pushcte -> .)

    pushcte                        shift and go to state 147

state 110

    (103) var_cte -> CTE_F . pushcte
    (121) pushcte -> .

    TIMES           reduce using rule 121 (pushcte -> .)
    DIVIDE          reduce using rule 121 (pushcte -> .)
    PLUS            reduce using rule 121 (pushcte -> .)
    MINUS           reduce using rule 121 (pushcte -> .)
    LOWERTHAN       reduce using rule 121 (pushcte -> .)
    MORETHAN        reduce using rule 121 (pushcte -> .)
    LOWEREQ         reduce using rule 121 (pushcte -> .)
    MOREEQ          reduce using rule 121 (pushcte -> .)
    SAME            reduce using rule 121 (pushcte -> .)
    DIFFERENT       reduce using rule 121 (pushcte -> .)
    RBRACE          reduce using rule 121 (pushcte -> .)
    OR              reduce using rule 121 (pushcte -> .)
    AND             reduce using rule 121 (pushcte -> .)
    RPAREN          reduce using rule 121 (pushcte -> .)
    COMA            reduce using rule 121 (pushcte -> .)
    SEMICOLON       reduce using rule 121 (pushcte -> .)

    pushcte                        shift and go to state 148

state 111

    (104) var_cte -> CTE_S . pushcte
    (121) pushcte -> .

    TIMES           reduce using rule 121 (pushcte -> .)
    DIVIDE          reduce using rule 121 (pushcte -> .)
    PLUS            reduce using rule 121 (pushcte -> .)
    MINUS           reduce using rule 121 (pushcte -> .)
    LOWERTHAN       reduce using rule 121 (pushcte -> .)
    MORETHAN        reduce using rule 121 (pushcte -> .)
    LOWEREQ         reduce using rule 121 (pushcte -> .)
    MOREEQ          reduce using rule 121 (pushcte -> .)
    SAME            reduce using rule 121 (pushcte -> .)
    DIFFERENT       reduce using rule 121 (pushcte -> .)
    RBRACE          reduce using rule 121 (pushcte -> .)
    OR              reduce using rule 121 (pushcte -> .)
    AND             reduce using rule 121 (pushcte -> .)
    RPAREN          reduce using rule 121 (pushcte -> .)
    COMA            reduce using rule 121 (pushcte -> .)
    SEMICOLON       reduce using rule 121 (pushcte -> .)

    pushcte                        shift and go to state 149

state 112

    (105) var_cte -> TRUE . pushcte
    (121) pushcte -> .

    TIMES           reduce using rule 121 (pushcte -> .)
    DIVIDE          reduce using rule 121 (pushcte -> .)
    PLUS            reduce using rule 121 (pushcte -> .)
    MINUS           reduce using rule 121 (pushcte -> .)
    LOWERTHAN       reduce using rule 121 (pushcte -> .)
    MORETHAN        reduce using rule 121 (pushcte -> .)
    LOWEREQ         reduce using rule 121 (pushcte -> .)
    MOREEQ          reduce using rule 121 (pushcte -> .)
    SAME            reduce using rule 121 (pushcte -> .)
    DIFFERENT       reduce using rule 121 (pushcte -> .)
    RBRACE          reduce using rule 121 (pushcte -> .)
    OR              reduce using rule 121 (pushcte -> .)
    AND             reduce using rule 121 (pushcte -> .)
    RPAREN          reduce using rule 121 (pushcte -> .)
    COMA            reduce using rule 121 (pushcte -> .)
    SEMICOLON       reduce using rule 121 (pushcte -> .)

    pushcte                        shift and go to state 150

state 113

    (106) var_cte -> FALSE . pushcte
    (121) pushcte -> .

    TIMES           reduce using rule 121 (pushcte -> .)
    DIVIDE          reduce using rule 121 (pushcte -> .)
    PLUS            reduce using rule 121 (pushcte -> .)
    MINUS           reduce using rule 121 (pushcte -> .)
    LOWERTHAN       reduce using rule 121 (pushcte -> .)
    MORETHAN        reduce using rule 121 (pushcte -> .)
    LOWEREQ         reduce using rule 121 (pushcte -> .)
    MOREEQ          reduce using rule 121 (pushcte -> .)
    SAME            reduce using rule 121 (pushcte -> .)
    DIFFERENT       reduce using rule 121 (pushcte -> .)
    RBRACE          reduce using rule 121 (pushcte -> .)
    OR              reduce using rule 121 (pushcte -> .)
    AND             reduce using rule 121 (pushcte -> .)
    RPAREN          reduce using rule 121 (pushcte -> .)
    COMA            reduce using rule 121 (pushcte -> .)
    SEMICOLON       reduce using rule 121 (pushcte -> .)

    pushcte                        shift and go to state 151

state 114

    (107) var_cte -> asigvector .

    TIMES           reduce using rule 107 (var_cte -> asigvector .)
    DIVIDE          reduce using rule 107 (var_cte -> asigvector .)
    PLUS            reduce using rule 107 (var_cte -> asigvector .)
    MINUS           reduce using rule 107 (var_cte -> asigvector .)
    LOWERTHAN       reduce using rule 107 (var_cte -> asigvector .)
    MORETHAN        reduce using rule 107 (var_cte -> asigvector .)
    LOWEREQ         reduce using rule 107 (var_cte -> asigvector .)
    MOREEQ          reduce using rule 107 (var_cte -> asigvector .)
    SAME            reduce using rule 107 (var_cte -> asigvector .)
    DIFFERENT       reduce using rule 107 (var_cte -> asigvector .)
    RBRACE          reduce using rule 107 (var_cte -> asigvector .)
    OR              reduce using rule 107 (var_cte -> asigvector .)
    AND             reduce using rule 107 (var_cte -> asigvector .)
    RPAREN          reduce using rule 107 (var_cte -> asigvector .)
    COMA            reduce using rule 107 (var_cte -> asigvector .)
    SEMICOLON       reduce using rule 107 (var_cte -> asigvector .)


state 115

    (113) fcallvoid -> ID existfunc LPAREN . startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> ID existfunc LPAREN . startera RPAREN SEMICOLON
    (116) startera -> .

    RPAREN          reduce using rule 116 (startera -> .)
    LPAREN          reduce using rule 116 (startera -> .)
    PLUS            reduce using rule 116 (startera -> .)
    MINUS           reduce using rule 116 (startera -> .)
    ID              reduce using rule 116 (startera -> .)
    CTE_I           reduce using rule 116 (startera -> .)
    CTE_F           reduce using rule 116 (startera -> .)
    CTE_S           reduce using rule 116 (startera -> .)
    TRUE            reduce using rule 116 (startera -> .)
    FALSE           reduce using rule 116 (startera -> .)

    startera                       shift and go to state 152

state 116

    (68) cond -> IF LPAREN expres . RPAREN LKEY resif bloq RKEY finif
    (69) cond -> IF LPAREN expres . RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif

    RPAREN          shift and go to state 153


state 117

    (78) expres -> exr .
    (79) expres -> exr . log expres reslog
    (99) log -> . OR
    (100) log -> . AND

    RPAREN          reduce using rule 78 (expres -> exr .)
    COMA            reduce using rule 78 (expres -> exr .)
    SEMICOLON       reduce using rule 78 (expres -> exr .)
    OR              shift and go to state 155
    AND             shift and go to state 156

    log                            shift and go to state 154

state 118

    (70) escrit -> PRINT pushop LPAREN . escriti RPAREN SEMICOLON
    (71) escriti -> . expres escrit1
    (72) escriti -> . expres escrit2 COMA escriti
    (78) expres -> . exr
    (79) expres -> . exr log expres reslog
    (80) exr -> . ex
    (81) exr -> . ex rel exr resrel
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    escriti                        shift and go to state 157
    expres                         shift and go to state 158
    exr                            shift and go to state 117
    ex                             shift and go to state 102
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 119

    (75) ciclo -> WHILE while1 LPAREN . expres RPAREN while2 LKEY bloq RKEY while3
    (78) expres -> . exr
    (79) expres -> . exr log expres reslog
    (80) exr -> . ex
    (81) exr -> . ex rel exr resrel
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    expres                         shift and go to state 159
    exr                            shift and go to state 117
    ex                             shift and go to state 102
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 120

    (76) leer -> READ pushop LPAREN . ID pushid RPAREN readid SEMICOLON

    ID              shift and go to state 160


state 121

    (108) findvec -> FIND pushop LPAREN . ID LBRACE ex RBRACE RPAREN SEMICOLON

    ID              shift and go to state 161


state 122

    (109) sorti -> SORT pushop LPAREN . ID LBRACE RBRACE RPAREN SEMICOLON

    ID              shift and go to state 162


state 123

    (1) program -> PROGRAM COLON gotomain global program2 finglobal program3 llenarmain MAIN main1 mainc . finmain
    (16) finmain -> .

    $end            reduce using rule 16 (finmain -> .)

    finmain                        shift and go to state 163

state 124

    (2) program -> PROGRAM COLON gotomain global program2 finglobal llenarmain MAIN main1 mainc finmain .

    $end            reduce using rule 2 (program -> PROGRAM COLON gotomain global program2 finglobal llenarmain MAIN main1 mainc finmain .)


state 125

    (3) program -> PROGRAM COLON gotomain global finglobal program3 llenarmain MAIN main1 mainc finmain .

    $end            reduce using rule 3 (program -> PROGRAM COLON gotomain global finglobal program3 llenarmain MAIN main1 mainc finmain .)


state 126

    (24) function -> FUNCTION functype ID addInTable LPAREN funci . RPAREN LKEY localvar bloq return1 RKEY
    (25) function -> FUNCTION functype ID addInTable LPAREN funci . RPAREN LKEY bloq return1 RKEY

    RPAREN          shift and go to state 164


state 127

    (28) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY localvar RKEY
    (30) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY localvar bloq return1 RKEY
    (33) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY bloq return1 RKEY
    (34) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY RKEY

    LKEY            shift and go to state 165


state 128

    (41) funci -> tipo . ID sumparam
    (42) funci -> tipo . ID sumparam COMA funci

    ID              shift and go to state 166


state 129

    (26) function -> FUNCTION pushvoid ID addInTable LPAREN funci . RPAREN LKEY localvar bloq RKEY
    (27) function -> FUNCTION pushvoid ID addInTable LPAREN funci . RPAREN LKEY bloq RKEY

    RPAREN          shift and go to state 167


state 130

    (29) function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN . LKEY localvar RKEY
    (31) function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN . LKEY localvar bloq RKEY
    (32) function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN . LKEY bloq RKEY

    LKEY            shift and go to state 168


state 131

    (22) vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 169


state 132

    (65) asign -> ID pushid EQUAL pushop . fcall SEMICOLON
    (66) asign -> ID pushid EQUAL pushop . expres resolverasignacion SEMICOLON
    (111) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (112) fcall -> . ID existfunc LPAREN startera RPAREN
    (78) expres -> . exr
    (79) expres -> . exr log expres reslog
    (80) exr -> . ex
    (81) exr -> . ex rel exr resrel
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    ID              shift and go to state 170
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    fcall                          shift and go to state 171
    expres                         shift and go to state 172
    exr                            shift and go to state 117
    ex                             shift and go to state 102
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 133

    (101) var_cte -> ID pushid .
    (110) asigvector -> ID pushid . LBRACE ex RBRACE

    TIMES           reduce using rule 101 (var_cte -> ID pushid .)
    DIVIDE          reduce using rule 101 (var_cte -> ID pushid .)
    PLUS            reduce using rule 101 (var_cte -> ID pushid .)
    MINUS           reduce using rule 101 (var_cte -> ID pushid .)
    LOWERTHAN       reduce using rule 101 (var_cte -> ID pushid .)
    MORETHAN        reduce using rule 101 (var_cte -> ID pushid .)
    LOWEREQ         reduce using rule 101 (var_cte -> ID pushid .)
    MOREEQ          reduce using rule 101 (var_cte -> ID pushid .)
    SAME            reduce using rule 101 (var_cte -> ID pushid .)
    DIFFERENT       reduce using rule 101 (var_cte -> ID pushid .)
    RBRACE          reduce using rule 101 (var_cte -> ID pushid .)
    OR              reduce using rule 101 (var_cte -> ID pushid .)
    AND             reduce using rule 101 (var_cte -> ID pushid .)
    RPAREN          reduce using rule 101 (var_cte -> ID pushid .)
    COMA            reduce using rule 101 (var_cte -> ID pushid .)
    SEMICOLON       reduce using rule 101 (var_cte -> ID pushid .)
    LBRACE          shift and go to state 173


state 134

    (67) asign -> ID LBRACE exr RBRACE . EQUAL pushop expres resasignvec SEMICOLON

    EQUAL           shift and go to state 174


state 135

    (81) exr -> ex rel . exr resrel
    (80) exr -> . ex
    (81) exr -> . ex rel exr resrel
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    ex                             shift and go to state 102
    exr                            shift and go to state 175
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 136

    (93) rel -> LOWERTHAN .

    LPAREN          reduce using rule 93 (rel -> LOWERTHAN .)
    PLUS            reduce using rule 93 (rel -> LOWERTHAN .)
    MINUS           reduce using rule 93 (rel -> LOWERTHAN .)
    ID              reduce using rule 93 (rel -> LOWERTHAN .)
    CTE_I           reduce using rule 93 (rel -> LOWERTHAN .)
    CTE_F           reduce using rule 93 (rel -> LOWERTHAN .)
    CTE_S           reduce using rule 93 (rel -> LOWERTHAN .)
    TRUE            reduce using rule 93 (rel -> LOWERTHAN .)
    FALSE           reduce using rule 93 (rel -> LOWERTHAN .)


state 137

    (94) rel -> MORETHAN .

    LPAREN          reduce using rule 94 (rel -> MORETHAN .)
    PLUS            reduce using rule 94 (rel -> MORETHAN .)
    MINUS           reduce using rule 94 (rel -> MORETHAN .)
    ID              reduce using rule 94 (rel -> MORETHAN .)
    CTE_I           reduce using rule 94 (rel -> MORETHAN .)
    CTE_F           reduce using rule 94 (rel -> MORETHAN .)
    CTE_S           reduce using rule 94 (rel -> MORETHAN .)
    TRUE            reduce using rule 94 (rel -> MORETHAN .)
    FALSE           reduce using rule 94 (rel -> MORETHAN .)


state 138

    (95) rel -> LOWEREQ .

    LPAREN          reduce using rule 95 (rel -> LOWEREQ .)
    PLUS            reduce using rule 95 (rel -> LOWEREQ .)
    MINUS           reduce using rule 95 (rel -> LOWEREQ .)
    ID              reduce using rule 95 (rel -> LOWEREQ .)
    CTE_I           reduce using rule 95 (rel -> LOWEREQ .)
    CTE_F           reduce using rule 95 (rel -> LOWEREQ .)
    CTE_S           reduce using rule 95 (rel -> LOWEREQ .)
    TRUE            reduce using rule 95 (rel -> LOWEREQ .)
    FALSE           reduce using rule 95 (rel -> LOWEREQ .)


state 139

    (96) rel -> MOREEQ .

    LPAREN          reduce using rule 96 (rel -> MOREEQ .)
    PLUS            reduce using rule 96 (rel -> MOREEQ .)
    MINUS           reduce using rule 96 (rel -> MOREEQ .)
    ID              reduce using rule 96 (rel -> MOREEQ .)
    CTE_I           reduce using rule 96 (rel -> MOREEQ .)
    CTE_F           reduce using rule 96 (rel -> MOREEQ .)
    CTE_S           reduce using rule 96 (rel -> MOREEQ .)
    TRUE            reduce using rule 96 (rel -> MOREEQ .)
    FALSE           reduce using rule 96 (rel -> MOREEQ .)


state 140

    (97) rel -> SAME .

    LPAREN          reduce using rule 97 (rel -> SAME .)
    PLUS            reduce using rule 97 (rel -> SAME .)
    MINUS           reduce using rule 97 (rel -> SAME .)
    ID              reduce using rule 97 (rel -> SAME .)
    CTE_I           reduce using rule 97 (rel -> SAME .)
    CTE_F           reduce using rule 97 (rel -> SAME .)
    CTE_S           reduce using rule 97 (rel -> SAME .)
    TRUE            reduce using rule 97 (rel -> SAME .)
    FALSE           reduce using rule 97 (rel -> SAME .)


state 141

    (98) rel -> DIFFERENT .

    LPAREN          reduce using rule 98 (rel -> DIFFERENT .)
    PLUS            reduce using rule 98 (rel -> DIFFERENT .)
    MINUS           reduce using rule 98 (rel -> DIFFERENT .)
    ID              reduce using rule 98 (rel -> DIFFERENT .)
    CTE_I           reduce using rule 98 (rel -> DIFFERENT .)
    CTE_F           reduce using rule 98 (rel -> DIFFERENT .)
    CTE_S           reduce using rule 98 (rel -> DIFFERENT .)
    TRUE            reduce using rule 98 (rel -> DIFFERENT .)
    FALSE           reduce using rule 98 (rel -> DIFFERENT .)


state 142

    (83) ex -> term resterm .
    (84) ex -> term resterm . PLUS pushop ex
    (85) ex -> term resterm . MINUS pushop ex

    LOWERTHAN       reduce using rule 83 (ex -> term resterm .)
    MORETHAN        reduce using rule 83 (ex -> term resterm .)
    LOWEREQ         reduce using rule 83 (ex -> term resterm .)
    MOREEQ          reduce using rule 83 (ex -> term resterm .)
    SAME            reduce using rule 83 (ex -> term resterm .)
    DIFFERENT       reduce using rule 83 (ex -> term resterm .)
    RBRACE          reduce using rule 83 (ex -> term resterm .)
    OR              reduce using rule 83 (ex -> term resterm .)
    AND             reduce using rule 83 (ex -> term resterm .)
    RPAREN          reduce using rule 83 (ex -> term resterm .)
    COMA            reduce using rule 83 (ex -> term resterm .)
    SEMICOLON       reduce using rule 83 (ex -> term resterm .)
    PLUS            shift and go to state 176
    MINUS           shift and go to state 177


state 143

    (91) fact -> PLUS pushop . var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    var_cte                        shift and go to state 178
    asigvector                     shift and go to state 114

state 144

    (92) fact -> MINUS pushop . var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    var_cte                        shift and go to state 179
    asigvector                     shift and go to state 114

state 145

    (86) term -> fact resfact .
    (87) term -> fact resfact . TIMES pushop term
    (88) term -> fact resfact . DIVIDE pushop term

    PLUS            reduce using rule 86 (term -> fact resfact .)
    MINUS           reduce using rule 86 (term -> fact resfact .)
    LOWERTHAN       reduce using rule 86 (term -> fact resfact .)
    MORETHAN        reduce using rule 86 (term -> fact resfact .)
    LOWEREQ         reduce using rule 86 (term -> fact resfact .)
    MOREEQ          reduce using rule 86 (term -> fact resfact .)
    SAME            reduce using rule 86 (term -> fact resfact .)
    DIFFERENT       reduce using rule 86 (term -> fact resfact .)
    RBRACE          reduce using rule 86 (term -> fact resfact .)
    OR              reduce using rule 86 (term -> fact resfact .)
    AND             reduce using rule 86 (term -> fact resfact .)
    RPAREN          reduce using rule 86 (term -> fact resfact .)
    COMA            reduce using rule 86 (term -> fact resfact .)
    SEMICOLON       reduce using rule 86 (term -> fact resfact .)
    TIMES           shift and go to state 180
    DIVIDE          shift and go to state 181


state 146

    (89) fact -> LPAREN pushop . expres RPAREN popop
    (78) expres -> . exr
    (79) expres -> . exr log expres reslog
    (80) exr -> . ex
    (81) exr -> . ex rel exr resrel
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    expres                         shift and go to state 182
    exr                            shift and go to state 117
    ex                             shift and go to state 102
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 147

    (102) var_cte -> CTE_I pushcte .

    TIMES           reduce using rule 102 (var_cte -> CTE_I pushcte .)
    DIVIDE          reduce using rule 102 (var_cte -> CTE_I pushcte .)
    PLUS            reduce using rule 102 (var_cte -> CTE_I pushcte .)
    MINUS           reduce using rule 102 (var_cte -> CTE_I pushcte .)
    LOWERTHAN       reduce using rule 102 (var_cte -> CTE_I pushcte .)
    MORETHAN        reduce using rule 102 (var_cte -> CTE_I pushcte .)
    LOWEREQ         reduce using rule 102 (var_cte -> CTE_I pushcte .)
    MOREEQ          reduce using rule 102 (var_cte -> CTE_I pushcte .)
    SAME            reduce using rule 102 (var_cte -> CTE_I pushcte .)
    DIFFERENT       reduce using rule 102 (var_cte -> CTE_I pushcte .)
    RBRACE          reduce using rule 102 (var_cte -> CTE_I pushcte .)
    OR              reduce using rule 102 (var_cte -> CTE_I pushcte .)
    AND             reduce using rule 102 (var_cte -> CTE_I pushcte .)
    RPAREN          reduce using rule 102 (var_cte -> CTE_I pushcte .)
    COMA            reduce using rule 102 (var_cte -> CTE_I pushcte .)
    SEMICOLON       reduce using rule 102 (var_cte -> CTE_I pushcte .)


state 148

    (103) var_cte -> CTE_F pushcte .

    TIMES           reduce using rule 103 (var_cte -> CTE_F pushcte .)
    DIVIDE          reduce using rule 103 (var_cte -> CTE_F pushcte .)
    PLUS            reduce using rule 103 (var_cte -> CTE_F pushcte .)
    MINUS           reduce using rule 103 (var_cte -> CTE_F pushcte .)
    LOWERTHAN       reduce using rule 103 (var_cte -> CTE_F pushcte .)
    MORETHAN        reduce using rule 103 (var_cte -> CTE_F pushcte .)
    LOWEREQ         reduce using rule 103 (var_cte -> CTE_F pushcte .)
    MOREEQ          reduce using rule 103 (var_cte -> CTE_F pushcte .)
    SAME            reduce using rule 103 (var_cte -> CTE_F pushcte .)
    DIFFERENT       reduce using rule 103 (var_cte -> CTE_F pushcte .)
    RBRACE          reduce using rule 103 (var_cte -> CTE_F pushcte .)
    OR              reduce using rule 103 (var_cte -> CTE_F pushcte .)
    AND             reduce using rule 103 (var_cte -> CTE_F pushcte .)
    RPAREN          reduce using rule 103 (var_cte -> CTE_F pushcte .)
    COMA            reduce using rule 103 (var_cte -> CTE_F pushcte .)
    SEMICOLON       reduce using rule 103 (var_cte -> CTE_F pushcte .)


state 149

    (104) var_cte -> CTE_S pushcte .

    TIMES           reduce using rule 104 (var_cte -> CTE_S pushcte .)
    DIVIDE          reduce using rule 104 (var_cte -> CTE_S pushcte .)
    PLUS            reduce using rule 104 (var_cte -> CTE_S pushcte .)
    MINUS           reduce using rule 104 (var_cte -> CTE_S pushcte .)
    LOWERTHAN       reduce using rule 104 (var_cte -> CTE_S pushcte .)
    MORETHAN        reduce using rule 104 (var_cte -> CTE_S pushcte .)
    LOWEREQ         reduce using rule 104 (var_cte -> CTE_S pushcte .)
    MOREEQ          reduce using rule 104 (var_cte -> CTE_S pushcte .)
    SAME            reduce using rule 104 (var_cte -> CTE_S pushcte .)
    DIFFERENT       reduce using rule 104 (var_cte -> CTE_S pushcte .)
    RBRACE          reduce using rule 104 (var_cte -> CTE_S pushcte .)
    OR              reduce using rule 104 (var_cte -> CTE_S pushcte .)
    AND             reduce using rule 104 (var_cte -> CTE_S pushcte .)
    RPAREN          reduce using rule 104 (var_cte -> CTE_S pushcte .)
    COMA            reduce using rule 104 (var_cte -> CTE_S pushcte .)
    SEMICOLON       reduce using rule 104 (var_cte -> CTE_S pushcte .)


state 150

    (105) var_cte -> TRUE pushcte .

    TIMES           reduce using rule 105 (var_cte -> TRUE pushcte .)
    DIVIDE          reduce using rule 105 (var_cte -> TRUE pushcte .)
    PLUS            reduce using rule 105 (var_cte -> TRUE pushcte .)
    MINUS           reduce using rule 105 (var_cte -> TRUE pushcte .)
    LOWERTHAN       reduce using rule 105 (var_cte -> TRUE pushcte .)
    MORETHAN        reduce using rule 105 (var_cte -> TRUE pushcte .)
    LOWEREQ         reduce using rule 105 (var_cte -> TRUE pushcte .)
    MOREEQ          reduce using rule 105 (var_cte -> TRUE pushcte .)
    SAME            reduce using rule 105 (var_cte -> TRUE pushcte .)
    DIFFERENT       reduce using rule 105 (var_cte -> TRUE pushcte .)
    RBRACE          reduce using rule 105 (var_cte -> TRUE pushcte .)
    OR              reduce using rule 105 (var_cte -> TRUE pushcte .)
    AND             reduce using rule 105 (var_cte -> TRUE pushcte .)
    RPAREN          reduce using rule 105 (var_cte -> TRUE pushcte .)
    COMA            reduce using rule 105 (var_cte -> TRUE pushcte .)
    SEMICOLON       reduce using rule 105 (var_cte -> TRUE pushcte .)


state 151

    (106) var_cte -> FALSE pushcte .

    TIMES           reduce using rule 106 (var_cte -> FALSE pushcte .)
    DIVIDE          reduce using rule 106 (var_cte -> FALSE pushcte .)
    PLUS            reduce using rule 106 (var_cte -> FALSE pushcte .)
    MINUS           reduce using rule 106 (var_cte -> FALSE pushcte .)
    LOWERTHAN       reduce using rule 106 (var_cte -> FALSE pushcte .)
    MORETHAN        reduce using rule 106 (var_cte -> FALSE pushcte .)
    LOWEREQ         reduce using rule 106 (var_cte -> FALSE pushcte .)
    MOREEQ          reduce using rule 106 (var_cte -> FALSE pushcte .)
    SAME            reduce using rule 106 (var_cte -> FALSE pushcte .)
    DIFFERENT       reduce using rule 106 (var_cte -> FALSE pushcte .)
    RBRACE          reduce using rule 106 (var_cte -> FALSE pushcte .)
    OR              reduce using rule 106 (var_cte -> FALSE pushcte .)
    AND             reduce using rule 106 (var_cte -> FALSE pushcte .)
    RPAREN          reduce using rule 106 (var_cte -> FALSE pushcte .)
    COMA            reduce using rule 106 (var_cte -> FALSE pushcte .)
    SEMICOLON       reduce using rule 106 (var_cte -> FALSE pushcte .)


state 152

    (113) fcallvoid -> ID existfunc LPAREN startera . fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> ID existfunc LPAREN startera . RPAREN SEMICOLON
    (117) fcall1 -> . expres generateparam
    (118) fcall1 -> . expres generateparam COMA fcall1
    (78) expres -> . exr
    (79) expres -> . exr log expres reslog
    (80) exr -> . ex
    (81) exr -> . ex rel exr resrel
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    RPAREN          shift and go to state 184
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    fcall1                         shift and go to state 183
    expres                         shift and go to state 185
    exr                            shift and go to state 117
    ex                             shift and go to state 102
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 153

    (68) cond -> IF LPAREN expres RPAREN . LKEY resif bloq RKEY finif
    (69) cond -> IF LPAREN expres RPAREN . LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif

    LKEY            shift and go to state 186


state 154

    (79) expres -> exr log . expres reslog
    (78) expres -> . exr
    (79) expres -> . exr log expres reslog
    (80) exr -> . ex
    (81) exr -> . ex rel exr resrel
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    exr                            shift and go to state 117
    expres                         shift and go to state 187
    ex                             shift and go to state 102
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 155

    (99) log -> OR .

    LPAREN          reduce using rule 99 (log -> OR .)
    PLUS            reduce using rule 99 (log -> OR .)
    MINUS           reduce using rule 99 (log -> OR .)
    ID              reduce using rule 99 (log -> OR .)
    CTE_I           reduce using rule 99 (log -> OR .)
    CTE_F           reduce using rule 99 (log -> OR .)
    CTE_S           reduce using rule 99 (log -> OR .)
    TRUE            reduce using rule 99 (log -> OR .)
    FALSE           reduce using rule 99 (log -> OR .)


state 156

    (100) log -> AND .

    LPAREN          reduce using rule 100 (log -> AND .)
    PLUS            reduce using rule 100 (log -> AND .)
    MINUS           reduce using rule 100 (log -> AND .)
    ID              reduce using rule 100 (log -> AND .)
    CTE_I           reduce using rule 100 (log -> AND .)
    CTE_F           reduce using rule 100 (log -> AND .)
    CTE_S           reduce using rule 100 (log -> AND .)
    TRUE            reduce using rule 100 (log -> AND .)
    FALSE           reduce using rule 100 (log -> AND .)


state 157

    (70) escrit -> PRINT pushop LPAREN escriti . RPAREN SEMICOLON

    RPAREN          shift and go to state 188


state 158

    (71) escriti -> expres . escrit1
    (72) escriti -> expres . escrit2 COMA escriti
    (73) escrit1 -> .
    (74) escrit2 -> .

    RPAREN          reduce using rule 73 (escrit1 -> .)
    COMA            reduce using rule 74 (escrit2 -> .)

    escrit1                        shift and go to state 189
    escrit2                        shift and go to state 190

state 159

    (75) ciclo -> WHILE while1 LPAREN expres . RPAREN while2 LKEY bloq RKEY while3

    RPAREN          shift and go to state 191


state 160

    (76) leer -> READ pushop LPAREN ID . pushid RPAREN readid SEMICOLON
    (122) pushid -> .

    RPAREN          reduce using rule 122 (pushid -> .)

    pushid                         shift and go to state 192

state 161

    (108) findvec -> FIND pushop LPAREN ID . LBRACE ex RBRACE RPAREN SEMICOLON

    LBRACE          shift and go to state 193


state 162

    (109) sorti -> SORT pushop LPAREN ID . LBRACE RBRACE RPAREN SEMICOLON

    LBRACE          shift and go to state 194


state 163

    (1) program -> PROGRAM COLON gotomain global program2 finglobal program3 llenarmain MAIN main1 mainc finmain .

    $end            reduce using rule 1 (program -> PROGRAM COLON gotomain global program2 finglobal program3 llenarmain MAIN main1 mainc finmain .)


state 164

    (24) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN . LKEY localvar bloq return1 RKEY
    (25) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN . LKEY bloq return1 RKEY

    LKEY            shift and go to state 195


state 165

    (28) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . localvar RKEY
    (30) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . localvar bloq return1 RKEY
    (33) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . bloq return1 RKEY
    (34) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . RKEY
    (43) localvar -> . var
    (44) localvar -> . vector
    (45) localvar -> . var localvar
    (46) localvar -> . vector localvar
    (55) bloq -> . estat
    (56) bloq -> . estat bloq
    (17) var -> . VAR tipo ID SEMICOLON
    (22) vector -> . VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON
    (57) estat -> . asign
    (58) estat -> . cond
    (59) estat -> . escrit
    (60) estat -> . ciclo
    (61) estat -> . leer
    (62) estat -> . fcallvoid
    (63) estat -> . findvec
    (64) estat -> . sorti
    (65) asign -> . ID pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT pushop LPAREN escriti RPAREN SEMICOLON
    (75) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (76) leer -> . READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (113) fcallvoid -> . ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> . ID existfunc LPAREN startera RPAREN SEMICOLON
    (108) findvec -> . FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (109) sorti -> . SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    RKEY            shift and go to state 197
    VAR             shift and go to state 12
    VECTOR          shift and go to state 13
    ID              shift and go to state 56
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    READ            shift and go to state 68
    FIND            shift and go to state 69
    SORT            shift and go to state 70

    localvar                       shift and go to state 196
    bloq                           shift and go to state 198
    var                            shift and go to state 53
    vector                         shift and go to state 54
    estat                          shift and go to state 55
    asign                          shift and go to state 57
    cond                           shift and go to state 58
    escrit                         shift and go to state 59
    ciclo                          shift and go to state 60
    leer                           shift and go to state 61
    fcallvoid                      shift and go to state 62
    findvec                        shift and go to state 63
    sorti                          shift and go to state 64

state 166

    (41) funci -> tipo ID . sumparam
    (42) funci -> tipo ID . sumparam COMA funci
    (47) sumparam -> .

    COMA            reduce using rule 47 (sumparam -> .)
    RPAREN          reduce using rule 47 (sumparam -> .)

    sumparam                       shift and go to state 199

state 167

    (26) function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN . LKEY localvar bloq RKEY
    (27) function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN . LKEY bloq RKEY

    LKEY            shift and go to state 200


state 168

    (29) function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY . localvar RKEY
    (31) function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY . localvar bloq RKEY
    (32) function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY . bloq RKEY
    (43) localvar -> . var
    (44) localvar -> . vector
    (45) localvar -> . var localvar
    (46) localvar -> . vector localvar
    (55) bloq -> . estat
    (56) bloq -> . estat bloq
    (17) var -> . VAR tipo ID SEMICOLON
    (22) vector -> . VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON
    (57) estat -> . asign
    (58) estat -> . cond
    (59) estat -> . escrit
    (60) estat -> . ciclo
    (61) estat -> . leer
    (62) estat -> . fcallvoid
    (63) estat -> . findvec
    (64) estat -> . sorti
    (65) asign -> . ID pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT pushop LPAREN escriti RPAREN SEMICOLON
    (75) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (76) leer -> . READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (113) fcallvoid -> . ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> . ID existfunc LPAREN startera RPAREN SEMICOLON
    (108) findvec -> . FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (109) sorti -> . SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    VAR             shift and go to state 12
    VECTOR          shift and go to state 13
    ID              shift and go to state 56
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    READ            shift and go to state 68
    FIND            shift and go to state 69
    SORT            shift and go to state 70

    localvar                       shift and go to state 201
    bloq                           shift and go to state 202
    var                            shift and go to state 53
    vector                         shift and go to state 54
    estat                          shift and go to state 55
    asign                          shift and go to state 57
    cond                           shift and go to state 58
    escrit                         shift and go to state 59
    ciclo                          shift and go to state 60
    leer                           shift and go to state 61
    fcallvoid                      shift and go to state 62
    findvec                        shift and go to state 63
    sorti                          shift and go to state 64

state 169

    (22) vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON .

    VAR             reduce using rule 22 (vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON .)
    VECTOR          reduce using rule 22 (vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON .)
    FUNCTION        reduce using rule 22 (vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON .)
    MAIN            reduce using rule 22 (vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON .)
    RKEY            reduce using rule 22 (vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON .)
    ID              reduce using rule 22 (vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON .)
    IF              reduce using rule 22 (vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON .)
    PRINT           reduce using rule 22 (vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON .)
    WHILE           reduce using rule 22 (vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON .)
    READ            reduce using rule 22 (vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON .)
    FIND            reduce using rule 22 (vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON .)
    SORT            reduce using rule 22 (vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON .)


state 170

    (111) fcall -> ID . existfunc LPAREN startera fcall1 RPAREN
    (112) fcall -> ID . existfunc LPAREN startera RPAREN
    (101) var_cte -> ID . pushid
    (110) asigvector -> ID . pushid LBRACE ex RBRACE
    (115) existfunc -> .
    (122) pushid -> .

    LPAREN          reduce using rule 115 (existfunc -> .)
    LBRACE          reduce using rule 122 (pushid -> .)
    TIMES           reduce using rule 122 (pushid -> .)
    DIVIDE          reduce using rule 122 (pushid -> .)
    PLUS            reduce using rule 122 (pushid -> .)
    MINUS           reduce using rule 122 (pushid -> .)
    LOWERTHAN       reduce using rule 122 (pushid -> .)
    MORETHAN        reduce using rule 122 (pushid -> .)
    LOWEREQ         reduce using rule 122 (pushid -> .)
    MOREEQ          reduce using rule 122 (pushid -> .)
    SAME            reduce using rule 122 (pushid -> .)
    DIFFERENT       reduce using rule 122 (pushid -> .)
    OR              reduce using rule 122 (pushid -> .)
    AND             reduce using rule 122 (pushid -> .)
    SEMICOLON       reduce using rule 122 (pushid -> .)

    existfunc                      shift and go to state 203
    pushid                         shift and go to state 133

state 171

    (65) asign -> ID pushid EQUAL pushop fcall . SEMICOLON

    SEMICOLON       shift and go to state 204


state 172

    (66) asign -> ID pushid EQUAL pushop expres . resolverasignacion SEMICOLON
    (125) resolverasignacion -> .

    SEMICOLON       reduce using rule 125 (resolverasignacion -> .)

    resolverasignacion             shift and go to state 205

state 173

    (110) asigvector -> ID pushid LBRACE . ex RBRACE
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    ex                             shift and go to state 206
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 174

    (67) asign -> ID LBRACE exr RBRACE EQUAL . pushop expres resasignvec SEMICOLON
    (123) pushop -> .

    LPAREN          reduce using rule 123 (pushop -> .)
    PLUS            reduce using rule 123 (pushop -> .)
    MINUS           reduce using rule 123 (pushop -> .)
    ID              reduce using rule 123 (pushop -> .)
    CTE_I           reduce using rule 123 (pushop -> .)
    CTE_F           reduce using rule 123 (pushop -> .)
    CTE_S           reduce using rule 123 (pushop -> .)
    TRUE            reduce using rule 123 (pushop -> .)
    FALSE           reduce using rule 123 (pushop -> .)

    pushop                         shift and go to state 207

state 175

    (81) exr -> ex rel exr . resrel
    (129) resrel -> .

    RBRACE          reduce using rule 129 (resrel -> .)
    OR              reduce using rule 129 (resrel -> .)
    AND             reduce using rule 129 (resrel -> .)
    RPAREN          reduce using rule 129 (resrel -> .)
    COMA            reduce using rule 129 (resrel -> .)
    SEMICOLON       reduce using rule 129 (resrel -> .)

    resrel                         shift and go to state 208

state 176

    (84) ex -> term resterm PLUS . pushop ex
    (123) pushop -> .

    LPAREN          reduce using rule 123 (pushop -> .)
    PLUS            reduce using rule 123 (pushop -> .)
    MINUS           reduce using rule 123 (pushop -> .)
    ID              reduce using rule 123 (pushop -> .)
    CTE_I           reduce using rule 123 (pushop -> .)
    CTE_F           reduce using rule 123 (pushop -> .)
    CTE_S           reduce using rule 123 (pushop -> .)
    TRUE            reduce using rule 123 (pushop -> .)
    FALSE           reduce using rule 123 (pushop -> .)

    pushop                         shift and go to state 209

state 177

    (85) ex -> term resterm MINUS . pushop ex
    (123) pushop -> .

    LPAREN          reduce using rule 123 (pushop -> .)
    PLUS            reduce using rule 123 (pushop -> .)
    MINUS           reduce using rule 123 (pushop -> .)
    ID              reduce using rule 123 (pushop -> .)
    CTE_I           reduce using rule 123 (pushop -> .)
    CTE_F           reduce using rule 123 (pushop -> .)
    CTE_S           reduce using rule 123 (pushop -> .)
    TRUE            reduce using rule 123 (pushop -> .)
    FALSE           reduce using rule 123 (pushop -> .)

    pushop                         shift and go to state 210

state 178

    (91) fact -> PLUS pushop var_cte .

    TIMES           reduce using rule 91 (fact -> PLUS pushop var_cte .)
    DIVIDE          reduce using rule 91 (fact -> PLUS pushop var_cte .)
    PLUS            reduce using rule 91 (fact -> PLUS pushop var_cte .)
    MINUS           reduce using rule 91 (fact -> PLUS pushop var_cte .)
    LOWERTHAN       reduce using rule 91 (fact -> PLUS pushop var_cte .)
    MORETHAN        reduce using rule 91 (fact -> PLUS pushop var_cte .)
    LOWEREQ         reduce using rule 91 (fact -> PLUS pushop var_cte .)
    MOREEQ          reduce using rule 91 (fact -> PLUS pushop var_cte .)
    SAME            reduce using rule 91 (fact -> PLUS pushop var_cte .)
    DIFFERENT       reduce using rule 91 (fact -> PLUS pushop var_cte .)
    RBRACE          reduce using rule 91 (fact -> PLUS pushop var_cte .)
    OR              reduce using rule 91 (fact -> PLUS pushop var_cte .)
    AND             reduce using rule 91 (fact -> PLUS pushop var_cte .)
    RPAREN          reduce using rule 91 (fact -> PLUS pushop var_cte .)
    COMA            reduce using rule 91 (fact -> PLUS pushop var_cte .)
    SEMICOLON       reduce using rule 91 (fact -> PLUS pushop var_cte .)


state 179

    (92) fact -> MINUS pushop var_cte .

    TIMES           reduce using rule 92 (fact -> MINUS pushop var_cte .)
    DIVIDE          reduce using rule 92 (fact -> MINUS pushop var_cte .)
    PLUS            reduce using rule 92 (fact -> MINUS pushop var_cte .)
    MINUS           reduce using rule 92 (fact -> MINUS pushop var_cte .)
    LOWERTHAN       reduce using rule 92 (fact -> MINUS pushop var_cte .)
    MORETHAN        reduce using rule 92 (fact -> MINUS pushop var_cte .)
    LOWEREQ         reduce using rule 92 (fact -> MINUS pushop var_cte .)
    MOREEQ          reduce using rule 92 (fact -> MINUS pushop var_cte .)
    SAME            reduce using rule 92 (fact -> MINUS pushop var_cte .)
    DIFFERENT       reduce using rule 92 (fact -> MINUS pushop var_cte .)
    RBRACE          reduce using rule 92 (fact -> MINUS pushop var_cte .)
    OR              reduce using rule 92 (fact -> MINUS pushop var_cte .)
    AND             reduce using rule 92 (fact -> MINUS pushop var_cte .)
    RPAREN          reduce using rule 92 (fact -> MINUS pushop var_cte .)
    COMA            reduce using rule 92 (fact -> MINUS pushop var_cte .)
    SEMICOLON       reduce using rule 92 (fact -> MINUS pushop var_cte .)


state 180

    (87) term -> fact resfact TIMES . pushop term
    (123) pushop -> .

    LPAREN          reduce using rule 123 (pushop -> .)
    PLUS            reduce using rule 123 (pushop -> .)
    MINUS           reduce using rule 123 (pushop -> .)
    ID              reduce using rule 123 (pushop -> .)
    CTE_I           reduce using rule 123 (pushop -> .)
    CTE_F           reduce using rule 123 (pushop -> .)
    CTE_S           reduce using rule 123 (pushop -> .)
    TRUE            reduce using rule 123 (pushop -> .)
    FALSE           reduce using rule 123 (pushop -> .)

    pushop                         shift and go to state 211

state 181

    (88) term -> fact resfact DIVIDE . pushop term
    (123) pushop -> .

    LPAREN          reduce using rule 123 (pushop -> .)
    PLUS            reduce using rule 123 (pushop -> .)
    MINUS           reduce using rule 123 (pushop -> .)
    ID              reduce using rule 123 (pushop -> .)
    CTE_I           reduce using rule 123 (pushop -> .)
    CTE_F           reduce using rule 123 (pushop -> .)
    CTE_S           reduce using rule 123 (pushop -> .)
    TRUE            reduce using rule 123 (pushop -> .)
    FALSE           reduce using rule 123 (pushop -> .)

    pushop                         shift and go to state 212

state 182

    (89) fact -> LPAREN pushop expres . RPAREN popop

    RPAREN          shift and go to state 213


state 183

    (113) fcallvoid -> ID existfunc LPAREN startera fcall1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 214


state 184

    (114) fcallvoid -> ID existfunc LPAREN startera RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 215


state 185

    (117) fcall1 -> expres . generateparam
    (118) fcall1 -> expres . generateparam COMA fcall1
    (119) generateparam -> .

    COMA            reduce using rule 119 (generateparam -> .)
    RPAREN          reduce using rule 119 (generateparam -> .)

    generateparam                  shift and go to state 216

state 186

    (68) cond -> IF LPAREN expres RPAREN LKEY . resif bloq RKEY finif
    (69) cond -> IF LPAREN expres RPAREN LKEY . resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (130) resif -> .

    ID              reduce using rule 130 (resif -> .)
    IF              reduce using rule 130 (resif -> .)
    PRINT           reduce using rule 130 (resif -> .)
    WHILE           reduce using rule 130 (resif -> .)
    READ            reduce using rule 130 (resif -> .)
    FIND            reduce using rule 130 (resif -> .)
    SORT            reduce using rule 130 (resif -> .)

    resif                          shift and go to state 217

state 187

    (79) expres -> exr log expres . reslog
    (82) reslog -> .

    RPAREN          reduce using rule 82 (reslog -> .)
    COMA            reduce using rule 82 (reslog -> .)
    SEMICOLON       reduce using rule 82 (reslog -> .)

    reslog                         shift and go to state 218

state 188

    (70) escrit -> PRINT pushop LPAREN escriti RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 219


state 189

    (71) escriti -> expres escrit1 .

    RPAREN          reduce using rule 71 (escriti -> expres escrit1 .)


state 190

    (72) escriti -> expres escrit2 . COMA escriti

    COMA            shift and go to state 220


state 191

    (75) ciclo -> WHILE while1 LPAREN expres RPAREN . while2 LKEY bloq RKEY while3
    (134) while2 -> .

    LKEY            reduce using rule 134 (while2 -> .)

    while2                         shift and go to state 221

state 192

    (76) leer -> READ pushop LPAREN ID pushid . RPAREN readid SEMICOLON

    RPAREN          shift and go to state 222


state 193

    (108) findvec -> FIND pushop LPAREN ID LBRACE . ex RBRACE RPAREN SEMICOLON
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    ex                             shift and go to state 223
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 194

    (109) sorti -> SORT pushop LPAREN ID LBRACE . RBRACE RPAREN SEMICOLON

    RBRACE          shift and go to state 224


state 195

    (24) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY . localvar bloq return1 RKEY
    (25) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY . bloq return1 RKEY
    (43) localvar -> . var
    (44) localvar -> . vector
    (45) localvar -> . var localvar
    (46) localvar -> . vector localvar
    (55) bloq -> . estat
    (56) bloq -> . estat bloq
    (17) var -> . VAR tipo ID SEMICOLON
    (22) vector -> . VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON
    (57) estat -> . asign
    (58) estat -> . cond
    (59) estat -> . escrit
    (60) estat -> . ciclo
    (61) estat -> . leer
    (62) estat -> . fcallvoid
    (63) estat -> . findvec
    (64) estat -> . sorti
    (65) asign -> . ID pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT pushop LPAREN escriti RPAREN SEMICOLON
    (75) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (76) leer -> . READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (113) fcallvoid -> . ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> . ID existfunc LPAREN startera RPAREN SEMICOLON
    (108) findvec -> . FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (109) sorti -> . SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    VAR             shift and go to state 12
    VECTOR          shift and go to state 13
    ID              shift and go to state 56
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    READ            shift and go to state 68
    FIND            shift and go to state 69
    SORT            shift and go to state 70

    localvar                       shift and go to state 225
    bloq                           shift and go to state 226
    var                            shift and go to state 53
    vector                         shift and go to state 54
    estat                          shift and go to state 55
    asign                          shift and go to state 57
    cond                           shift and go to state 58
    escrit                         shift and go to state 59
    ciclo                          shift and go to state 60
    leer                           shift and go to state 61
    fcallvoid                      shift and go to state 62
    findvec                        shift and go to state 63
    sorti                          shift and go to state 64

state 196

    (28) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar . RKEY
    (30) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar . bloq return1 RKEY
    (55) bloq -> . estat
    (56) bloq -> . estat bloq
    (57) estat -> . asign
    (58) estat -> . cond
    (59) estat -> . escrit
    (60) estat -> . ciclo
    (61) estat -> . leer
    (62) estat -> . fcallvoid
    (63) estat -> . findvec
    (64) estat -> . sorti
    (65) asign -> . ID pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT pushop LPAREN escriti RPAREN SEMICOLON
    (75) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (76) leer -> . READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (113) fcallvoid -> . ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> . ID existfunc LPAREN startera RPAREN SEMICOLON
    (108) findvec -> . FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (109) sorti -> . SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    RKEY            shift and go to state 227
    ID              shift and go to state 56
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    READ            shift and go to state 68
    FIND            shift and go to state 69
    SORT            shift and go to state 70

    bloq                           shift and go to state 228
    estat                          shift and go to state 55
    asign                          shift and go to state 57
    cond                           shift and go to state 58
    escrit                         shift and go to state 59
    ciclo                          shift and go to state 60
    leer                           shift and go to state 61
    fcallvoid                      shift and go to state 62
    findvec                        shift and go to state 63
    sorti                          shift and go to state 64

state 197

    (34) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY .

    FUNCTION        reduce using rule 34 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY .)
    MAIN            reduce using rule 34 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY .)


state 198

    (33) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY bloq . return1 RKEY
    (48) return1 -> . RETURN pushop expres resreturn SEMICOLON
    (49) return1 -> . empty
    (120) empty -> .

    RETURN          shift and go to state 230
    RKEY            reduce using rule 120 (empty -> .)

    return1                        shift and go to state 229
    empty                          shift and go to state 231

state 199

    (41) funci -> tipo ID sumparam .
    (42) funci -> tipo ID sumparam . COMA funci

    RPAREN          reduce using rule 41 (funci -> tipo ID sumparam .)
    COMA            shift and go to state 232


state 200

    (26) function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY . localvar bloq RKEY
    (27) function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY . bloq RKEY
    (43) localvar -> . var
    (44) localvar -> . vector
    (45) localvar -> . var localvar
    (46) localvar -> . vector localvar
    (55) bloq -> . estat
    (56) bloq -> . estat bloq
    (17) var -> . VAR tipo ID SEMICOLON
    (22) vector -> . VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON
    (57) estat -> . asign
    (58) estat -> . cond
    (59) estat -> . escrit
    (60) estat -> . ciclo
    (61) estat -> . leer
    (62) estat -> . fcallvoid
    (63) estat -> . findvec
    (64) estat -> . sorti
    (65) asign -> . ID pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT pushop LPAREN escriti RPAREN SEMICOLON
    (75) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (76) leer -> . READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (113) fcallvoid -> . ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> . ID existfunc LPAREN startera RPAREN SEMICOLON
    (108) findvec -> . FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (109) sorti -> . SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    VAR             shift and go to state 12
    VECTOR          shift and go to state 13
    ID              shift and go to state 56
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    READ            shift and go to state 68
    FIND            shift and go to state 69
    SORT            shift and go to state 70

    localvar                       shift and go to state 233
    bloq                           shift and go to state 234
    var                            shift and go to state 53
    vector                         shift and go to state 54
    estat                          shift and go to state 55
    asign                          shift and go to state 57
    cond                           shift and go to state 58
    escrit                         shift and go to state 59
    ciclo                          shift and go to state 60
    leer                           shift and go to state 61
    fcallvoid                      shift and go to state 62
    findvec                        shift and go to state 63
    sorti                          shift and go to state 64

state 201

    (29) function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar . RKEY
    (31) function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar . bloq RKEY
    (55) bloq -> . estat
    (56) bloq -> . estat bloq
    (57) estat -> . asign
    (58) estat -> . cond
    (59) estat -> . escrit
    (60) estat -> . ciclo
    (61) estat -> . leer
    (62) estat -> . fcallvoid
    (63) estat -> . findvec
    (64) estat -> . sorti
    (65) asign -> . ID pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT pushop LPAREN escriti RPAREN SEMICOLON
    (75) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (76) leer -> . READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (113) fcallvoid -> . ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> . ID existfunc LPAREN startera RPAREN SEMICOLON
    (108) findvec -> . FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (109) sorti -> . SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    RKEY            shift and go to state 235
    ID              shift and go to state 56
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    READ            shift and go to state 68
    FIND            shift and go to state 69
    SORT            shift and go to state 70

    bloq                           shift and go to state 236
    estat                          shift and go to state 55
    asign                          shift and go to state 57
    cond                           shift and go to state 58
    escrit                         shift and go to state 59
    ciclo                          shift and go to state 60
    leer                           shift and go to state 61
    fcallvoid                      shift and go to state 62
    findvec                        shift and go to state 63
    sorti                          shift and go to state 64

state 202

    (32) function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY bloq . RKEY

    RKEY            shift and go to state 237


state 203

    (111) fcall -> ID existfunc . LPAREN startera fcall1 RPAREN
    (112) fcall -> ID existfunc . LPAREN startera RPAREN

    LPAREN          shift and go to state 238


state 204

    (65) asign -> ID pushid EQUAL pushop fcall SEMICOLON .

    ID              reduce using rule 65 (asign -> ID pushid EQUAL pushop fcall SEMICOLON .)
    IF              reduce using rule 65 (asign -> ID pushid EQUAL pushop fcall SEMICOLON .)
    PRINT           reduce using rule 65 (asign -> ID pushid EQUAL pushop fcall SEMICOLON .)
    WHILE           reduce using rule 65 (asign -> ID pushid EQUAL pushop fcall SEMICOLON .)
    READ            reduce using rule 65 (asign -> ID pushid EQUAL pushop fcall SEMICOLON .)
    FIND            reduce using rule 65 (asign -> ID pushid EQUAL pushop fcall SEMICOLON .)
    SORT            reduce using rule 65 (asign -> ID pushid EQUAL pushop fcall SEMICOLON .)
    RKEY            reduce using rule 65 (asign -> ID pushid EQUAL pushop fcall SEMICOLON .)
    RETURN          reduce using rule 65 (asign -> ID pushid EQUAL pushop fcall SEMICOLON .)


state 205

    (66) asign -> ID pushid EQUAL pushop expres resolverasignacion . SEMICOLON

    SEMICOLON       shift and go to state 239


state 206

    (110) asigvector -> ID pushid LBRACE ex . RBRACE

    RBRACE          shift and go to state 240


state 207

    (67) asign -> ID LBRACE exr RBRACE EQUAL pushop . expres resasignvec SEMICOLON
    (78) expres -> . exr
    (79) expres -> . exr log expres reslog
    (80) exr -> . ex
    (81) exr -> . ex rel exr resrel
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    exr                            shift and go to state 117
    expres                         shift and go to state 241
    ex                             shift and go to state 102
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 208

    (81) exr -> ex rel exr resrel .

    RBRACE          reduce using rule 81 (exr -> ex rel exr resrel .)
    OR              reduce using rule 81 (exr -> ex rel exr resrel .)
    AND             reduce using rule 81 (exr -> ex rel exr resrel .)
    RPAREN          reduce using rule 81 (exr -> ex rel exr resrel .)
    COMA            reduce using rule 81 (exr -> ex rel exr resrel .)
    SEMICOLON       reduce using rule 81 (exr -> ex rel exr resrel .)


state 209

    (84) ex -> term resterm PLUS pushop . ex
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    term                           shift and go to state 103
    ex                             shift and go to state 242
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 210

    (85) ex -> term resterm MINUS pushop . ex
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    term                           shift and go to state 103
    ex                             shift and go to state 243
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 211

    (87) term -> fact resfact TIMES pushop . term
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    fact                           shift and go to state 106
    term                           shift and go to state 244
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 212

    (88) term -> fact resfact DIVIDE pushop . term
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    fact                           shift and go to state 106
    term                           shift and go to state 245
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 213

    (89) fact -> LPAREN pushop expres RPAREN . popop
    (124) popop -> .

    TIMES           reduce using rule 124 (popop -> .)
    DIVIDE          reduce using rule 124 (popop -> .)
    PLUS            reduce using rule 124 (popop -> .)
    MINUS           reduce using rule 124 (popop -> .)
    LOWERTHAN       reduce using rule 124 (popop -> .)
    MORETHAN        reduce using rule 124 (popop -> .)
    LOWEREQ         reduce using rule 124 (popop -> .)
    MOREEQ          reduce using rule 124 (popop -> .)
    SAME            reduce using rule 124 (popop -> .)
    DIFFERENT       reduce using rule 124 (popop -> .)
    RBRACE          reduce using rule 124 (popop -> .)
    OR              reduce using rule 124 (popop -> .)
    AND             reduce using rule 124 (popop -> .)
    RPAREN          reduce using rule 124 (popop -> .)
    COMA            reduce using rule 124 (popop -> .)
    SEMICOLON       reduce using rule 124 (popop -> .)

    popop                          shift and go to state 246

state 214

    (113) fcallvoid -> ID existfunc LPAREN startera fcall1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 247


state 215

    (114) fcallvoid -> ID existfunc LPAREN startera RPAREN SEMICOLON .

    ID              reduce using rule 114 (fcallvoid -> ID existfunc LPAREN startera RPAREN SEMICOLON .)
    IF              reduce using rule 114 (fcallvoid -> ID existfunc LPAREN startera RPAREN SEMICOLON .)
    PRINT           reduce using rule 114 (fcallvoid -> ID existfunc LPAREN startera RPAREN SEMICOLON .)
    WHILE           reduce using rule 114 (fcallvoid -> ID existfunc LPAREN startera RPAREN SEMICOLON .)
    READ            reduce using rule 114 (fcallvoid -> ID existfunc LPAREN startera RPAREN SEMICOLON .)
    FIND            reduce using rule 114 (fcallvoid -> ID existfunc LPAREN startera RPAREN SEMICOLON .)
    SORT            reduce using rule 114 (fcallvoid -> ID existfunc LPAREN startera RPAREN SEMICOLON .)
    RKEY            reduce using rule 114 (fcallvoid -> ID existfunc LPAREN startera RPAREN SEMICOLON .)
    RETURN          reduce using rule 114 (fcallvoid -> ID existfunc LPAREN startera RPAREN SEMICOLON .)


state 216

    (117) fcall1 -> expres generateparam .
    (118) fcall1 -> expres generateparam . COMA fcall1

    RPAREN          reduce using rule 117 (fcall1 -> expres generateparam .)
    COMA            shift and go to state 248


state 217

    (68) cond -> IF LPAREN expres RPAREN LKEY resif . bloq RKEY finif
    (69) cond -> IF LPAREN expres RPAREN LKEY resif . bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (55) bloq -> . estat
    (56) bloq -> . estat bloq
    (57) estat -> . asign
    (58) estat -> . cond
    (59) estat -> . escrit
    (60) estat -> . ciclo
    (61) estat -> . leer
    (62) estat -> . fcallvoid
    (63) estat -> . findvec
    (64) estat -> . sorti
    (65) asign -> . ID pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT pushop LPAREN escriti RPAREN SEMICOLON
    (75) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (76) leer -> . READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (113) fcallvoid -> . ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> . ID existfunc LPAREN startera RPAREN SEMICOLON
    (108) findvec -> . FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (109) sorti -> . SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    ID              shift and go to state 56
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    READ            shift and go to state 68
    FIND            shift and go to state 69
    SORT            shift and go to state 70

    bloq                           shift and go to state 249
    estat                          shift and go to state 55
    asign                          shift and go to state 57
    cond                           shift and go to state 58
    escrit                         shift and go to state 59
    ciclo                          shift and go to state 60
    leer                           shift and go to state 61
    fcallvoid                      shift and go to state 62
    findvec                        shift and go to state 63
    sorti                          shift and go to state 64

state 218

    (79) expres -> exr log expres reslog .

    RPAREN          reduce using rule 79 (expres -> exr log expres reslog .)
    COMA            reduce using rule 79 (expres -> exr log expres reslog .)
    SEMICOLON       reduce using rule 79 (expres -> exr log expres reslog .)


state 219

    (70) escrit -> PRINT pushop LPAREN escriti RPAREN SEMICOLON .

    ID              reduce using rule 70 (escrit -> PRINT pushop LPAREN escriti RPAREN SEMICOLON .)
    IF              reduce using rule 70 (escrit -> PRINT pushop LPAREN escriti RPAREN SEMICOLON .)
    PRINT           reduce using rule 70 (escrit -> PRINT pushop LPAREN escriti RPAREN SEMICOLON .)
    WHILE           reduce using rule 70 (escrit -> PRINT pushop LPAREN escriti RPAREN SEMICOLON .)
    READ            reduce using rule 70 (escrit -> PRINT pushop LPAREN escriti RPAREN SEMICOLON .)
    FIND            reduce using rule 70 (escrit -> PRINT pushop LPAREN escriti RPAREN SEMICOLON .)
    SORT            reduce using rule 70 (escrit -> PRINT pushop LPAREN escriti RPAREN SEMICOLON .)
    RKEY            reduce using rule 70 (escrit -> PRINT pushop LPAREN escriti RPAREN SEMICOLON .)
    RETURN          reduce using rule 70 (escrit -> PRINT pushop LPAREN escriti RPAREN SEMICOLON .)


state 220

    (72) escriti -> expres escrit2 COMA . escriti
    (71) escriti -> . expres escrit1
    (72) escriti -> . expres escrit2 COMA escriti
    (78) expres -> . exr
    (79) expres -> . exr log expres reslog
    (80) exr -> . ex
    (81) exr -> . ex rel exr resrel
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    expres                         shift and go to state 158
    escriti                        shift and go to state 250
    exr                            shift and go to state 117
    ex                             shift and go to state 102
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 221

    (75) ciclo -> WHILE while1 LPAREN expres RPAREN while2 . LKEY bloq RKEY while3

    LKEY            shift and go to state 251


state 222

    (76) leer -> READ pushop LPAREN ID pushid RPAREN . readid SEMICOLON
    (77) readid -> .

    SEMICOLON       reduce using rule 77 (readid -> .)

    readid                         shift and go to state 252

state 223

    (108) findvec -> FIND pushop LPAREN ID LBRACE ex . RBRACE RPAREN SEMICOLON

    RBRACE          shift and go to state 253


state 224

    (109) sorti -> SORT pushop LPAREN ID LBRACE RBRACE . RPAREN SEMICOLON

    RPAREN          shift and go to state 254


state 225

    (24) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar . bloq return1 RKEY
    (55) bloq -> . estat
    (56) bloq -> . estat bloq
    (57) estat -> . asign
    (58) estat -> . cond
    (59) estat -> . escrit
    (60) estat -> . ciclo
    (61) estat -> . leer
    (62) estat -> . fcallvoid
    (63) estat -> . findvec
    (64) estat -> . sorti
    (65) asign -> . ID pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT pushop LPAREN escriti RPAREN SEMICOLON
    (75) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (76) leer -> . READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (113) fcallvoid -> . ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> . ID existfunc LPAREN startera RPAREN SEMICOLON
    (108) findvec -> . FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (109) sorti -> . SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    ID              shift and go to state 56
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    READ            shift and go to state 68
    FIND            shift and go to state 69
    SORT            shift and go to state 70

    bloq                           shift and go to state 255
    estat                          shift and go to state 55
    asign                          shift and go to state 57
    cond                           shift and go to state 58
    escrit                         shift and go to state 59
    ciclo                          shift and go to state 60
    leer                           shift and go to state 61
    fcallvoid                      shift and go to state 62
    findvec                        shift and go to state 63
    sorti                          shift and go to state 64

state 226

    (25) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY bloq . return1 RKEY
    (48) return1 -> . RETURN pushop expres resreturn SEMICOLON
    (49) return1 -> . empty
    (120) empty -> .

    RETURN          shift and go to state 230
    RKEY            reduce using rule 120 (empty -> .)

    return1                        shift and go to state 256
    empty                          shift and go to state 231

state 227

    (28) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY .

    FUNCTION        reduce using rule 28 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY .)
    MAIN            reduce using rule 28 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY .)


state 228

    (30) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq . return1 RKEY
    (48) return1 -> . RETURN pushop expres resreturn SEMICOLON
    (49) return1 -> . empty
    (120) empty -> .

    RETURN          shift and go to state 230
    RKEY            reduce using rule 120 (empty -> .)

    return1                        shift and go to state 257
    empty                          shift and go to state 231

state 229

    (33) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY bloq return1 . RKEY

    RKEY            shift and go to state 258


state 230

    (48) return1 -> RETURN . pushop expres resreturn SEMICOLON
    (123) pushop -> .

    LPAREN          reduce using rule 123 (pushop -> .)
    PLUS            reduce using rule 123 (pushop -> .)
    MINUS           reduce using rule 123 (pushop -> .)
    ID              reduce using rule 123 (pushop -> .)
    CTE_I           reduce using rule 123 (pushop -> .)
    CTE_F           reduce using rule 123 (pushop -> .)
    CTE_S           reduce using rule 123 (pushop -> .)
    TRUE            reduce using rule 123 (pushop -> .)
    FALSE           reduce using rule 123 (pushop -> .)

    pushop                         shift and go to state 259

state 231

    (49) return1 -> empty .

    RKEY            reduce using rule 49 (return1 -> empty .)


state 232

    (42) funci -> tipo ID sumparam COMA . funci
    (41) funci -> . tipo ID sumparam
    (42) funci -> . tipo ID sumparam COMA funci
    (18) tipo -> . INT
    (19) tipo -> . FLOAT
    (20) tipo -> . STRING
    (21) tipo -> . BOOL

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    STRING          shift and go to state 23
    BOOL            shift and go to state 24

    tipo                           shift and go to state 128
    funci                          shift and go to state 260

state 233

    (26) function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY localvar . bloq RKEY
    (55) bloq -> . estat
    (56) bloq -> . estat bloq
    (57) estat -> . asign
    (58) estat -> . cond
    (59) estat -> . escrit
    (60) estat -> . ciclo
    (61) estat -> . leer
    (62) estat -> . fcallvoid
    (63) estat -> . findvec
    (64) estat -> . sorti
    (65) asign -> . ID pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT pushop LPAREN escriti RPAREN SEMICOLON
    (75) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (76) leer -> . READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (113) fcallvoid -> . ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> . ID existfunc LPAREN startera RPAREN SEMICOLON
    (108) findvec -> . FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (109) sorti -> . SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    ID              shift and go to state 56
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    READ            shift and go to state 68
    FIND            shift and go to state 69
    SORT            shift and go to state 70

    bloq                           shift and go to state 261
    estat                          shift and go to state 55
    asign                          shift and go to state 57
    cond                           shift and go to state 58
    escrit                         shift and go to state 59
    ciclo                          shift and go to state 60
    leer                           shift and go to state 61
    fcallvoid                      shift and go to state 62
    findvec                        shift and go to state 63
    sorti                          shift and go to state 64

state 234

    (27) function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY bloq . RKEY

    RKEY            shift and go to state 262


state 235

    (29) function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar RKEY .

    FUNCTION        reduce using rule 29 (function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar RKEY .)
    MAIN            reduce using rule 29 (function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar RKEY .)


state 236

    (31) function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar bloq . RKEY

    RKEY            shift and go to state 263


state 237

    (32) function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY bloq RKEY .

    FUNCTION        reduce using rule 32 (function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY bloq RKEY .)
    MAIN            reduce using rule 32 (function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY bloq RKEY .)


state 238

    (111) fcall -> ID existfunc LPAREN . startera fcall1 RPAREN
    (112) fcall -> ID existfunc LPAREN . startera RPAREN
    (116) startera -> .

    RPAREN          reduce using rule 116 (startera -> .)
    LPAREN          reduce using rule 116 (startera -> .)
    PLUS            reduce using rule 116 (startera -> .)
    MINUS           reduce using rule 116 (startera -> .)
    ID              reduce using rule 116 (startera -> .)
    CTE_I           reduce using rule 116 (startera -> .)
    CTE_F           reduce using rule 116 (startera -> .)
    CTE_S           reduce using rule 116 (startera -> .)
    TRUE            reduce using rule 116 (startera -> .)
    FALSE           reduce using rule 116 (startera -> .)

    startera                       shift and go to state 264

state 239

    (66) asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .

    ID              reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    IF              reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    PRINT           reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    WHILE           reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    READ            reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    FIND            reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    SORT            reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    RKEY            reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    RETURN          reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)


state 240

    (110) asigvector -> ID pushid LBRACE ex RBRACE .

    TIMES           reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    DIVIDE          reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    PLUS            reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    MINUS           reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    LOWERTHAN       reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    MORETHAN        reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    LOWEREQ         reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    MOREEQ          reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    SAME            reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    DIFFERENT       reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    RBRACE          reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    OR              reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    AND             reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    RPAREN          reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    COMA            reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)
    SEMICOLON       reduce using rule 110 (asigvector -> ID pushid LBRACE ex RBRACE .)


state 241

    (67) asign -> ID LBRACE exr RBRACE EQUAL pushop expres . resasignvec SEMICOLON
    (126) resasignvec -> .

    SEMICOLON       reduce using rule 126 (resasignvec -> .)

    resasignvec                    shift and go to state 265

state 242

    (84) ex -> term resterm PLUS pushop ex .

    LOWERTHAN       reduce using rule 84 (ex -> term resterm PLUS pushop ex .)
    MORETHAN        reduce using rule 84 (ex -> term resterm PLUS pushop ex .)
    LOWEREQ         reduce using rule 84 (ex -> term resterm PLUS pushop ex .)
    MOREEQ          reduce using rule 84 (ex -> term resterm PLUS pushop ex .)
    SAME            reduce using rule 84 (ex -> term resterm PLUS pushop ex .)
    DIFFERENT       reduce using rule 84 (ex -> term resterm PLUS pushop ex .)
    RBRACE          reduce using rule 84 (ex -> term resterm PLUS pushop ex .)
    OR              reduce using rule 84 (ex -> term resterm PLUS pushop ex .)
    AND             reduce using rule 84 (ex -> term resterm PLUS pushop ex .)
    RPAREN          reduce using rule 84 (ex -> term resterm PLUS pushop ex .)
    COMA            reduce using rule 84 (ex -> term resterm PLUS pushop ex .)
    SEMICOLON       reduce using rule 84 (ex -> term resterm PLUS pushop ex .)


state 243

    (85) ex -> term resterm MINUS pushop ex .

    LOWERTHAN       reduce using rule 85 (ex -> term resterm MINUS pushop ex .)
    MORETHAN        reduce using rule 85 (ex -> term resterm MINUS pushop ex .)
    LOWEREQ         reduce using rule 85 (ex -> term resterm MINUS pushop ex .)
    MOREEQ          reduce using rule 85 (ex -> term resterm MINUS pushop ex .)
    SAME            reduce using rule 85 (ex -> term resterm MINUS pushop ex .)
    DIFFERENT       reduce using rule 85 (ex -> term resterm MINUS pushop ex .)
    RBRACE          reduce using rule 85 (ex -> term resterm MINUS pushop ex .)
    OR              reduce using rule 85 (ex -> term resterm MINUS pushop ex .)
    AND             reduce using rule 85 (ex -> term resterm MINUS pushop ex .)
    RPAREN          reduce using rule 85 (ex -> term resterm MINUS pushop ex .)
    COMA            reduce using rule 85 (ex -> term resterm MINUS pushop ex .)
    SEMICOLON       reduce using rule 85 (ex -> term resterm MINUS pushop ex .)


state 244

    (87) term -> fact resfact TIMES pushop term .

    PLUS            reduce using rule 87 (term -> fact resfact TIMES pushop term .)
    MINUS           reduce using rule 87 (term -> fact resfact TIMES pushop term .)
    LOWERTHAN       reduce using rule 87 (term -> fact resfact TIMES pushop term .)
    MORETHAN        reduce using rule 87 (term -> fact resfact TIMES pushop term .)
    LOWEREQ         reduce using rule 87 (term -> fact resfact TIMES pushop term .)
    MOREEQ          reduce using rule 87 (term -> fact resfact TIMES pushop term .)
    SAME            reduce using rule 87 (term -> fact resfact TIMES pushop term .)
    DIFFERENT       reduce using rule 87 (term -> fact resfact TIMES pushop term .)
    RBRACE          reduce using rule 87 (term -> fact resfact TIMES pushop term .)
    OR              reduce using rule 87 (term -> fact resfact TIMES pushop term .)
    AND             reduce using rule 87 (term -> fact resfact TIMES pushop term .)
    RPAREN          reduce using rule 87 (term -> fact resfact TIMES pushop term .)
    COMA            reduce using rule 87 (term -> fact resfact TIMES pushop term .)
    SEMICOLON       reduce using rule 87 (term -> fact resfact TIMES pushop term .)


state 245

    (88) term -> fact resfact DIVIDE pushop term .

    PLUS            reduce using rule 88 (term -> fact resfact DIVIDE pushop term .)
    MINUS           reduce using rule 88 (term -> fact resfact DIVIDE pushop term .)
    LOWERTHAN       reduce using rule 88 (term -> fact resfact DIVIDE pushop term .)
    MORETHAN        reduce using rule 88 (term -> fact resfact DIVIDE pushop term .)
    LOWEREQ         reduce using rule 88 (term -> fact resfact DIVIDE pushop term .)
    MOREEQ          reduce using rule 88 (term -> fact resfact DIVIDE pushop term .)
    SAME            reduce using rule 88 (term -> fact resfact DIVIDE pushop term .)
    DIFFERENT       reduce using rule 88 (term -> fact resfact DIVIDE pushop term .)
    RBRACE          reduce using rule 88 (term -> fact resfact DIVIDE pushop term .)
    OR              reduce using rule 88 (term -> fact resfact DIVIDE pushop term .)
    AND             reduce using rule 88 (term -> fact resfact DIVIDE pushop term .)
    RPAREN          reduce using rule 88 (term -> fact resfact DIVIDE pushop term .)
    COMA            reduce using rule 88 (term -> fact resfact DIVIDE pushop term .)
    SEMICOLON       reduce using rule 88 (term -> fact resfact DIVIDE pushop term .)


state 246

    (89) fact -> LPAREN pushop expres RPAREN popop .

    TIMES           reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    DIVIDE          reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    PLUS            reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    MINUS           reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    LOWERTHAN       reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    MORETHAN        reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    LOWEREQ         reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    MOREEQ          reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    SAME            reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    DIFFERENT       reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    RBRACE          reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    OR              reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    AND             reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    RPAREN          reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    COMA            reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)
    SEMICOLON       reduce using rule 89 (fact -> LPAREN pushop expres RPAREN popop .)


state 247

    (113) fcallvoid -> ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON .

    ID              reduce using rule 113 (fcallvoid -> ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON .)
    IF              reduce using rule 113 (fcallvoid -> ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON .)
    PRINT           reduce using rule 113 (fcallvoid -> ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 113 (fcallvoid -> ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON .)
    READ            reduce using rule 113 (fcallvoid -> ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON .)
    FIND            reduce using rule 113 (fcallvoid -> ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON .)
    SORT            reduce using rule 113 (fcallvoid -> ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON .)
    RKEY            reduce using rule 113 (fcallvoid -> ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 113 (fcallvoid -> ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON .)


state 248

    (118) fcall1 -> expres generateparam COMA . fcall1
    (117) fcall1 -> . expres generateparam
    (118) fcall1 -> . expres generateparam COMA fcall1
    (78) expres -> . exr
    (79) expres -> . exr log expres reslog
    (80) exr -> . ex
    (81) exr -> . ex rel exr resrel
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    expres                         shift and go to state 185
    fcall1                         shift and go to state 266
    exr                            shift and go to state 117
    ex                             shift and go to state 102
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 249

    (68) cond -> IF LPAREN expres RPAREN LKEY resif bloq . RKEY finif
    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq . RKEY ELSE LKEY reselse bloq RKEY finif

    RKEY            shift and go to state 267


state 250

    (72) escriti -> expres escrit2 COMA escriti .

    RPAREN          reduce using rule 72 (escriti -> expres escrit2 COMA escriti .)


state 251

    (75) ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY . bloq RKEY while3
    (55) bloq -> . estat
    (56) bloq -> . estat bloq
    (57) estat -> . asign
    (58) estat -> . cond
    (59) estat -> . escrit
    (60) estat -> . ciclo
    (61) estat -> . leer
    (62) estat -> . fcallvoid
    (63) estat -> . findvec
    (64) estat -> . sorti
    (65) asign -> . ID pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT pushop LPAREN escriti RPAREN SEMICOLON
    (75) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (76) leer -> . READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (113) fcallvoid -> . ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> . ID existfunc LPAREN startera RPAREN SEMICOLON
    (108) findvec -> . FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (109) sorti -> . SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    ID              shift and go to state 56
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    READ            shift and go to state 68
    FIND            shift and go to state 69
    SORT            shift and go to state 70

    bloq                           shift and go to state 268
    estat                          shift and go to state 55
    asign                          shift and go to state 57
    cond                           shift and go to state 58
    escrit                         shift and go to state 59
    ciclo                          shift and go to state 60
    leer                           shift and go to state 61
    fcallvoid                      shift and go to state 62
    findvec                        shift and go to state 63
    sorti                          shift and go to state 64

state 252

    (76) leer -> READ pushop LPAREN ID pushid RPAREN readid . SEMICOLON

    SEMICOLON       shift and go to state 269


state 253

    (108) findvec -> FIND pushop LPAREN ID LBRACE ex RBRACE . RPAREN SEMICOLON

    RPAREN          shift and go to state 270


state 254

    (109) sorti -> SORT pushop LPAREN ID LBRACE RBRACE RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 271


state 255

    (24) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq . return1 RKEY
    (48) return1 -> . RETURN pushop expres resreturn SEMICOLON
    (49) return1 -> . empty
    (120) empty -> .

    RETURN          shift and go to state 230
    RKEY            reduce using rule 120 (empty -> .)

    return1                        shift and go to state 272
    empty                          shift and go to state 231

state 256

    (25) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY bloq return1 . RKEY

    RKEY            shift and go to state 273


state 257

    (30) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return1 . RKEY

    RKEY            shift and go to state 274


state 258

    (33) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY bloq return1 RKEY .

    FUNCTION        reduce using rule 33 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY bloq return1 RKEY .)
    MAIN            reduce using rule 33 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY bloq return1 RKEY .)


state 259

    (48) return1 -> RETURN pushop . expres resreturn SEMICOLON
    (78) expres -> . exr
    (79) expres -> . exr log expres reslog
    (80) exr -> . ex
    (81) exr -> . ex rel exr resrel
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    expres                         shift and go to state 275
    exr                            shift and go to state 117
    ex                             shift and go to state 102
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 260

    (42) funci -> tipo ID sumparam COMA funci .

    RPAREN          reduce using rule 42 (funci -> tipo ID sumparam COMA funci .)


state 261

    (26) function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY localvar bloq . RKEY

    RKEY            shift and go to state 276


state 262

    (27) function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY bloq RKEY .

    FUNCTION        reduce using rule 27 (function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY bloq RKEY .)
    MAIN            reduce using rule 27 (function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY bloq RKEY .)


state 263

    (31) function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY .

    FUNCTION        reduce using rule 31 (function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY .)
    MAIN            reduce using rule 31 (function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY .)


state 264

    (111) fcall -> ID existfunc LPAREN startera . fcall1 RPAREN
    (112) fcall -> ID existfunc LPAREN startera . RPAREN
    (117) fcall1 -> . expres generateparam
    (118) fcall1 -> . expres generateparam COMA fcall1
    (78) expres -> . exr
    (79) expres -> . exr log expres reslog
    (80) exr -> . ex
    (81) exr -> . ex rel exr resrel
    (83) ex -> . term resterm
    (84) ex -> . term resterm PLUS pushop ex
    (85) ex -> . term resterm MINUS pushop ex
    (86) term -> . fact resfact
    (87) term -> . fact resfact TIMES pushop term
    (88) term -> . fact resfact DIVIDE pushop term
    (89) fact -> . LPAREN pushop expres RPAREN popop
    (90) fact -> . var_cte
    (91) fact -> . PLUS pushop var_cte
    (92) fact -> . MINUS pushop var_cte
    (101) var_cte -> . ID pushid
    (102) var_cte -> . CTE_I pushcte
    (103) var_cte -> . CTE_F pushcte
    (104) var_cte -> . CTE_S pushcte
    (105) var_cte -> . TRUE pushcte
    (106) var_cte -> . FALSE pushcte
    (107) var_cte -> . asigvector
    (110) asigvector -> . ID pushid LBRACE ex RBRACE

    RPAREN          shift and go to state 278
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 104
    MINUS           shift and go to state 105
    ID              shift and go to state 100
    CTE_I           shift and go to state 109
    CTE_F           shift and go to state 110
    CTE_S           shift and go to state 111
    TRUE            shift and go to state 112
    FALSE           shift and go to state 113

    fcall1                         shift and go to state 277
    expres                         shift and go to state 185
    exr                            shift and go to state 117
    ex                             shift and go to state 102
    term                           shift and go to state 103
    fact                           shift and go to state 106
    var_cte                        shift and go to state 108
    asigvector                     shift and go to state 114

state 265

    (67) asign -> ID LBRACE exr RBRACE EQUAL pushop expres resasignvec . SEMICOLON

    SEMICOLON       shift and go to state 279


state 266

    (118) fcall1 -> expres generateparam COMA fcall1 .

    RPAREN          reduce using rule 118 (fcall1 -> expres generateparam COMA fcall1 .)


state 267

    (68) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY . finif
    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY . ELSE LKEY reselse bloq RKEY finif
    (132) finif -> .

    ELSE            shift and go to state 281
    ID              reduce using rule 132 (finif -> .)
    IF              reduce using rule 132 (finif -> .)
    PRINT           reduce using rule 132 (finif -> .)
    WHILE           reduce using rule 132 (finif -> .)
    READ            reduce using rule 132 (finif -> .)
    FIND            reduce using rule 132 (finif -> .)
    SORT            reduce using rule 132 (finif -> .)
    RKEY            reduce using rule 132 (finif -> .)
    RETURN          reduce using rule 132 (finif -> .)

    finif                          shift and go to state 280

state 268

    (75) ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq . RKEY while3

    RKEY            shift and go to state 282


state 269

    (76) leer -> READ pushop LPAREN ID pushid RPAREN readid SEMICOLON .

    ID              reduce using rule 76 (leer -> READ pushop LPAREN ID pushid RPAREN readid SEMICOLON .)
    IF              reduce using rule 76 (leer -> READ pushop LPAREN ID pushid RPAREN readid SEMICOLON .)
    PRINT           reduce using rule 76 (leer -> READ pushop LPAREN ID pushid RPAREN readid SEMICOLON .)
    WHILE           reduce using rule 76 (leer -> READ pushop LPAREN ID pushid RPAREN readid SEMICOLON .)
    READ            reduce using rule 76 (leer -> READ pushop LPAREN ID pushid RPAREN readid SEMICOLON .)
    FIND            reduce using rule 76 (leer -> READ pushop LPAREN ID pushid RPAREN readid SEMICOLON .)
    SORT            reduce using rule 76 (leer -> READ pushop LPAREN ID pushid RPAREN readid SEMICOLON .)
    RKEY            reduce using rule 76 (leer -> READ pushop LPAREN ID pushid RPAREN readid SEMICOLON .)
    RETURN          reduce using rule 76 (leer -> READ pushop LPAREN ID pushid RPAREN readid SEMICOLON .)


state 270

    (108) findvec -> FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 283


state 271

    (109) sorti -> SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON .

    ID              reduce using rule 109 (sorti -> SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON .)
    IF              reduce using rule 109 (sorti -> SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON .)
    PRINT           reduce using rule 109 (sorti -> SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON .)
    WHILE           reduce using rule 109 (sorti -> SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON .)
    READ            reduce using rule 109 (sorti -> SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON .)
    FIND            reduce using rule 109 (sorti -> SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON .)
    SORT            reduce using rule 109 (sorti -> SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON .)
    RKEY            reduce using rule 109 (sorti -> SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON .)
    RETURN          reduce using rule 109 (sorti -> SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON .)


state 272

    (24) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return1 . RKEY

    RKEY            shift and go to state 284


state 273

    (25) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY bloq return1 RKEY .

    FUNCTION        reduce using rule 25 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY bloq return1 RKEY .)
    MAIN            reduce using rule 25 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY bloq return1 RKEY .)


state 274

    (30) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return1 RKEY .

    FUNCTION        reduce using rule 30 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return1 RKEY .)
    MAIN            reduce using rule 30 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return1 RKEY .)


state 275

    (48) return1 -> RETURN pushop expres . resreturn SEMICOLON
    (50) resreturn -> .

    SEMICOLON       reduce using rule 50 (resreturn -> .)

    resreturn                      shift and go to state 285

state 276

    (26) function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY .

    FUNCTION        reduce using rule 26 (function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY .)
    MAIN            reduce using rule 26 (function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY .)


state 277

    (111) fcall -> ID existfunc LPAREN startera fcall1 . RPAREN

    RPAREN          shift and go to state 286


state 278

    (112) fcall -> ID existfunc LPAREN startera RPAREN .

    SEMICOLON       reduce using rule 112 (fcall -> ID existfunc LPAREN startera RPAREN .)


state 279

    (67) asign -> ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON .

    ID              reduce using rule 67 (asign -> ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON .)
    IF              reduce using rule 67 (asign -> ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON .)
    PRINT           reduce using rule 67 (asign -> ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON .)
    WHILE           reduce using rule 67 (asign -> ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON .)
    READ            reduce using rule 67 (asign -> ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON .)
    FIND            reduce using rule 67 (asign -> ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON .)
    SORT            reduce using rule 67 (asign -> ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON .)
    RKEY            reduce using rule 67 (asign -> ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON .)
    RETURN          reduce using rule 67 (asign -> ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON .)


state 280

    (68) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .

    ID              reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    IF              reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    PRINT           reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    WHILE           reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    READ            reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    FIND            reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    SORT            reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    RKEY            reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    RETURN          reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)


state 281

    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE . LKEY reselse bloq RKEY finif

    LKEY            shift and go to state 287


state 282

    (75) ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY . while3
    (135) while3 -> .

    ID              reduce using rule 135 (while3 -> .)
    IF              reduce using rule 135 (while3 -> .)
    PRINT           reduce using rule 135 (while3 -> .)
    WHILE           reduce using rule 135 (while3 -> .)
    READ            reduce using rule 135 (while3 -> .)
    FIND            reduce using rule 135 (while3 -> .)
    SORT            reduce using rule 135 (while3 -> .)
    RKEY            reduce using rule 135 (while3 -> .)
    RETURN          reduce using rule 135 (while3 -> .)

    while3                         shift and go to state 288

state 283

    (108) findvec -> FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON .

    ID              reduce using rule 108 (findvec -> FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON .)
    IF              reduce using rule 108 (findvec -> FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON .)
    PRINT           reduce using rule 108 (findvec -> FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON .)
    WHILE           reduce using rule 108 (findvec -> FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON .)
    READ            reduce using rule 108 (findvec -> FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON .)
    FIND            reduce using rule 108 (findvec -> FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON .)
    SORT            reduce using rule 108 (findvec -> FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON .)
    RKEY            reduce using rule 108 (findvec -> FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON .)
    RETURN          reduce using rule 108 (findvec -> FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON .)


state 284

    (24) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return1 RKEY .

    FUNCTION        reduce using rule 24 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return1 RKEY .)
    MAIN            reduce using rule 24 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return1 RKEY .)


state 285

    (48) return1 -> RETURN pushop expres resreturn . SEMICOLON

    SEMICOLON       shift and go to state 289


state 286

    (111) fcall -> ID existfunc LPAREN startera fcall1 RPAREN .

    SEMICOLON       reduce using rule 111 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)


state 287

    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY . reselse bloq RKEY finif
    (131) reselse -> .

    ID              reduce using rule 131 (reselse -> .)
    IF              reduce using rule 131 (reselse -> .)
    PRINT           reduce using rule 131 (reselse -> .)
    WHILE           reduce using rule 131 (reselse -> .)
    READ            reduce using rule 131 (reselse -> .)
    FIND            reduce using rule 131 (reselse -> .)
    SORT            reduce using rule 131 (reselse -> .)

    reselse                        shift and go to state 290

state 288

    (75) ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .

    ID              reduce using rule 75 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    IF              reduce using rule 75 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    PRINT           reduce using rule 75 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    WHILE           reduce using rule 75 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    READ            reduce using rule 75 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    FIND            reduce using rule 75 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    SORT            reduce using rule 75 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    RKEY            reduce using rule 75 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    RETURN          reduce using rule 75 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)


state 289

    (48) return1 -> RETURN pushop expres resreturn SEMICOLON .

    RKEY            reduce using rule 48 (return1 -> RETURN pushop expres resreturn SEMICOLON .)


state 290

    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse . bloq RKEY finif
    (55) bloq -> . estat
    (56) bloq -> . estat bloq
    (57) estat -> . asign
    (58) estat -> . cond
    (59) estat -> . escrit
    (60) estat -> . ciclo
    (61) estat -> . leer
    (62) estat -> . fcallvoid
    (63) estat -> . findvec
    (64) estat -> . sorti
    (65) asign -> . ID pushid EQUAL pushop fcall SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT pushop LPAREN escriti RPAREN SEMICOLON
    (75) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (76) leer -> . READ pushop LPAREN ID pushid RPAREN readid SEMICOLON
    (113) fcallvoid -> . ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON
    (114) fcallvoid -> . ID existfunc LPAREN startera RPAREN SEMICOLON
    (108) findvec -> . FIND pushop LPAREN ID LBRACE ex RBRACE RPAREN SEMICOLON
    (109) sorti -> . SORT pushop LPAREN ID LBRACE RBRACE RPAREN SEMICOLON

    ID              shift and go to state 56
    IF              shift and go to state 65
    PRINT           shift and go to state 66
    WHILE           shift and go to state 67
    READ            shift and go to state 68
    FIND            shift and go to state 69
    SORT            shift and go to state 70

    bloq                           shift and go to state 291
    estat                          shift and go to state 55
    asign                          shift and go to state 57
    cond                           shift and go to state 58
    escrit                         shift and go to state 59
    ciclo                          shift and go to state 60
    leer                           shift and go to state 61
    fcallvoid                      shift and go to state 62
    findvec                        shift and go to state 63
    sorti                          shift and go to state 64

state 291

    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq . RKEY finif

    RKEY            shift and go to state 292


state 292

    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY . finif
    (132) finif -> .

    ID              reduce using rule 132 (finif -> .)
    IF              reduce using rule 132 (finif -> .)
    PRINT           reduce using rule 132 (finif -> .)
    WHILE           reduce using rule 132 (finif -> .)
    READ            reduce using rule 132 (finif -> .)
    FIND            reduce using rule 132 (finif -> .)
    SORT            reduce using rule 132 (finif -> .)
    RKEY            reduce using rule 132 (finif -> .)
    RETURN          reduce using rule 132 (finif -> .)

    finif                          shift and go to state 293

state 293

    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .

    ID              reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    IF              reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    PRINT           reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    WHILE           reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    READ            reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    FIND            reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    SORT            reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    RKEY            reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    RETURN          reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)

