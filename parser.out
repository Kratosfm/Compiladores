Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc finmain
Rule 2     program -> PROGRAM COLON global program2 finglobal MAIN main1 mainc finmain
Rule 3     program -> PROGRAM COLON MAIN main1 mainc finmain
Rule 4     program2 -> crear program2
Rule 5     program2 -> crear
Rule 6     program3 -> function program3
Rule 7     program3 -> function
Rule 8     crear -> var
Rule 9     crear -> vector
Rule 10    global -> <empty>
Rule 11    finglobal -> <empty>
Rule 12    main1 -> <empty>
Rule 13    finmain -> <empty>
Rule 14    var -> VAR tipo ID SEMICOLON
Rule 15    tipo -> INT
Rule 16    tipo -> FLOAT
Rule 17    tipo -> STRING
Rule 18    tipo -> BOOL
Rule 19    vector -> VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON
Rule 20    vector -> VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON
Rule 21    vector -> VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON
Rule 22    vector -> VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON
Rule 23    initvector -> <empty>
Rule 24    function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
Rule 25    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
Rule 26    function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
Rule 27    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
Rule 28    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
Rule 29    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY
Rule 30    functype -> INT
Rule 31    functype -> FLOAT
Rule 32    functype -> STRING
Rule 33    functype -> BOOL
Rule 34    functype -> VOID
Rule 35    addInTable -> <empty>
Rule 36    funci -> INT ID
Rule 37    funci -> INT ID COMA funci
Rule 38    funci -> FLOAT ID
Rule 39    funci -> FLOAT ID COMA funci
Rule 40    funci -> STRING ID
Rule 41    funci -> STRING ID COMA funci
Rule 42    funci -> BOOL ID
Rule 43    funci -> BOOL ID COMA funci
Rule 44    funci -> empty
Rule 45    localvar -> var
Rule 46    localvar -> vector
Rule 47    localvar -> var localvar
Rule 48    localvar -> vector localvar
Rule 49    return -> RETURN expres
Rule 50    return -> empty
Rule 51    mainc -> LKEY RKEY
Rule 52    mainc -> LKEY bloq RKEY
Rule 53    mainc -> LKEY mainc2 bloq RKEY
Rule 54    mainc -> LKEY mainc2 RKEY
Rule 55    mainc2 -> var
Rule 56    mainc2 -> var mainc2
Rule 57    mainc2 -> vector
Rule 58    mainc2 -> vector mainc2
Rule 59    bloq -> estat
Rule 60    bloq -> estat bloq
Rule 61    estat -> asign
Rule 62    estat -> cond
Rule 63    estat -> escrit
Rule 64    estat -> ciclo
Rule 65    estat -> leer
Rule 66    asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
Rule 67    asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
Rule 68    cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
Rule 69    cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
Rule 70    escrit -> PRINT LPAREN escriti RPAREN SEMICOLON
Rule 71    escriti -> expres
Rule 72    escriti -> expres COMA escriti
Rule 73    ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
Rule 74    leer -> READ LPAREN ID RPAREN SEMICOLON
Rule 75    expres -> exr
Rule 76    expres -> exr log expres
Rule 77    exr -> ex
Rule 78    exr -> ex rel exr resrel
Rule 79    ex -> term resterm
Rule 80    ex -> term resterm PLUS pushop ex
Rule 81    ex -> term resterm MINUS pushop ex
Rule 82    term -> fact resfact
Rule 83    term -> fact resfact TIMES pushop term
Rule 84    term -> fact resfact DIVIDE pushop term
Rule 85    fact -> LPAREN pushop expres RPAREN popop
Rule 86    fact -> var_cte
Rule 87    fact -> PLUS var_cte
Rule 88    fact -> MINUS var_cte
Rule 89    rel -> LOWERTHAN
Rule 90    rel -> MORETHAN
Rule 91    rel -> LOWEREQ
Rule 92    rel -> MOREEQ
Rule 93    rel -> SAME
Rule 94    rel -> DIFFERENT
Rule 95    log -> OR
Rule 96    log -> AND
Rule 97    var_cte -> ID pushid
Rule 98    var_cte -> CTE_I pushcte
Rule 99    var_cte -> CTE_F pushcte
Rule 100   var_cte -> CTE_S pushcte
Rule 101   var_cte -> TRUE pushcte
Rule 102   var_cte -> FALSE pushcte
Rule 103   var_cte -> fcall
Rule 104   var_cte -> vcall
Rule 105   var_cte -> asigvector
Rule 106   asigvector -> ID LBRACE ex RBRACE
Rule 107   fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
Rule 108   fcall -> ID existfunc LPAREN RPAREN
Rule 109   existfunc -> <empty>
Rule 110   startera -> <empty>
Rule 111   fcall1 -> expres generateparam
Rule 112   fcall1 -> expres generateparam COMA fcall1
Rule 113   generateparam -> <empty>
Rule 114   generateGoSub -> <empty>
Rule 115   vcall -> ID LBRACE expres RBRACE
Rule 116   empty -> <empty>
Rule 117   pushcte -> <empty>
Rule 118   pushid -> <empty>
Rule 119   pushop -> <empty>
Rule 120   popop -> <empty>
Rule 121   resolverasignacion -> <empty>
Rule 122   resfact -> <empty>
Rule 123   resterm -> <empty>
Rule 124   resrel -> <empty>
Rule 125   resif -> <empty>
Rule 126   reselse -> <empty>
Rule 127   finif -> <empty>
Rule 128   while1 -> <empty>
Rule 129   while2 -> <empty>
Rule 130   while3 -> <empty>

Terminals, with rules where they appear

AND                  : 96
BOOL                 : 18 22 33 42 43
COLON                : 1 2 3
COMA                 : 37 39 41 43 72 112
CTE_F                : 99
CTE_I                : 19 20 21 22 98
CTE_S                : 100
DIFFERENT            : 94
DIVIDE               : 84
ELSE                 : 69
EQUAL                : 66 67
FALSE                : 102
FLOAT                : 16 20 31 38 39
FUNCTION             : 24 25 26 27 28 29
ID                   : 14 19 20 21 22 24 25 26 27 28 29 36 37 38 39 40 41 42 43 66 67 74 97 106 107 108 115
IF                   : 68 69
INT                  : 15 19 30 36 37
LBRACE               : 19 20 21 22 67 106 115
LKEY                 : 24 25 26 27 28 29 51 52 53 54 68 69 69 73
LOWEREQ              : 91
LOWERTHAN            : 89
LPAREN               : 24 25 26 27 28 29 68 69 70 73 74 85 107 108
MAIN                 : 1 2 3
MINUS                : 81 88
MOREEQ               : 92
MORETHAN             : 90
OR                   : 95
PLUS                 : 80 87
PRINT                : 70
PROGRAM              : 1 2 3
RBRACE               : 19 20 21 22 67 106 115
READ                 : 74
RETURN               : 49
RKEY                 : 24 25 26 27 28 29 51 52 53 54 68 69 69 73
RPAREN               : 24 25 26 27 28 29 68 69 70 73 74 85 107 108
SAME                 : 93
SEMICOLON            : 14 19 20 21 22 66 67 70 74
STRING               : 17 21 32 40 41
TIMES                : 83
TRUE                 : 101
VAR                  : 14
VECTOR               : 19 20 21 22
VOID                 : 34
WHILE                : 73
error                : 

Nonterminals, with rules where they appear

addInTable           : 24 25 26 27 28 29
asign                : 61
asigvector           : 105
bloq                 : 24 26 27 28 52 53 60 68 69 69 73
ciclo                : 64
cond                 : 62
crear                : 4 5
empty                : 44 50
escrit               : 63
escriti              : 70 72
estat                : 59 60
ex                   : 77 78 80 81 106
existfunc            : 107 108
expres               : 24 27 49 66 67 68 69 71 72 73 76 85 111 112 115
exr                  : 67 75 76 78
fact                 : 82 83 84
fcall                : 103
fcall1               : 107 112
finglobal            : 1 2
finif                : 68 69
finmain              : 1 2 3
funci                : 24 26 37 39 41 43
function             : 6 7
functype             : 24 25 26 27 28 29
generateGoSub        : 107
generateparam        : 111 112
global               : 1 2
initvector           : 19 20 21 22
leer                 : 65
localvar             : 24 25 26 27 28 47 48
log                  : 76
main1                : 1 2 3
mainc                : 1 2 3
mainc2               : 53 54 56 58
popop                : 85
program              : 0
program2             : 1 2 4
program3             : 1 6
pushcte              : 98 99 100 101 102
pushid               : 66 67 97
pushop               : 66 67 80 81 83 84 85
rel                  : 78
reselse              : 69
resfact              : 82 83 84
resif                : 68 69
resolverasignacion   : 66
resrel               : 78
resterm              : 79 80 81
return               : 24 27
startera             : 107
term                 : 79 80 81 83 84
tipo                 : 14
var                  : 8 45 47 55 56
var_cte              : 86 87 88
vcall                : 104
vector               : 9 46 48 57 58
while1               : 73
while2               : 73
while3               : 73

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc finmain
    (2) program -> . PROGRAM COLON global program2 finglobal MAIN main1 mainc finmain
    (3) program -> . PROGRAM COLON MAIN main1 mainc finmain

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . COLON global program2 finglobal program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM . COLON global program2 finglobal MAIN main1 mainc finmain
    (3) program -> PROGRAM . COLON MAIN main1 mainc finmain

    COLON           shift and go to state 3


state 3

    (1) program -> PROGRAM COLON . global program2 finglobal program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON . global program2 finglobal MAIN main1 mainc finmain
    (3) program -> PROGRAM COLON . MAIN main1 mainc finmain
    (10) global -> .

    MAIN            shift and go to state 5
    VAR             reduce using rule 10 (global -> .)
    VECTOR          reduce using rule 10 (global -> .)

    global                         shift and go to state 4

state 4

    (1) program -> PROGRAM COLON global . program2 finglobal program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON global . program2 finglobal MAIN main1 mainc finmain
    (4) program2 -> . crear program2
    (5) program2 -> . crear
    (8) crear -> . var
    (9) crear -> . vector
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON
    (20) vector -> . VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON
    (21) vector -> . VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON
    (22) vector -> . VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON

    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    program2                       shift and go to state 6
    crear                          shift and go to state 7
    var                            shift and go to state 8
    vector                         shift and go to state 9

state 5

    (3) program -> PROGRAM COLON MAIN . main1 mainc finmain
    (12) main1 -> .

    LKEY            reduce using rule 12 (main1 -> .)

    main1                          shift and go to state 12

state 6

    (1) program -> PROGRAM COLON global program2 . finglobal program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON global program2 . finglobal MAIN main1 mainc finmain
    (11) finglobal -> .

    MAIN            reduce using rule 11 (finglobal -> .)
    FUNCTION        reduce using rule 11 (finglobal -> .)

    finglobal                      shift and go to state 13

state 7

    (4) program2 -> crear . program2
    (5) program2 -> crear .
    (4) program2 -> . crear program2
    (5) program2 -> . crear
    (8) crear -> . var
    (9) crear -> . vector
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON
    (20) vector -> . VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON
    (21) vector -> . VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON
    (22) vector -> . VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON

    MAIN            reduce using rule 5 (program2 -> crear .)
    FUNCTION        reduce using rule 5 (program2 -> crear .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    crear                          shift and go to state 7
    program2                       shift and go to state 14
    var                            shift and go to state 8
    vector                         shift and go to state 9

state 8

    (8) crear -> var .

    VAR             reduce using rule 8 (crear -> var .)
    VECTOR          reduce using rule 8 (crear -> var .)
    MAIN            reduce using rule 8 (crear -> var .)
    FUNCTION        reduce using rule 8 (crear -> var .)


state 9

    (9) crear -> vector .

    VAR             reduce using rule 9 (crear -> vector .)
    VECTOR          reduce using rule 9 (crear -> vector .)
    MAIN            reduce using rule 9 (crear -> vector .)
    FUNCTION        reduce using rule 9 (crear -> vector .)


state 10

    (14) var -> VAR . tipo ID SEMICOLON
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . STRING
    (18) tipo -> . BOOL

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING          shift and go to state 18
    BOOL            shift and go to state 19

    tipo                           shift and go to state 15

state 11

    (19) vector -> VECTOR . initvector INT ID LBRACE CTE_I RBRACE SEMICOLON
    (20) vector -> VECTOR . initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON
    (21) vector -> VECTOR . initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON
    (22) vector -> VECTOR . initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON
    (23) initvector -> .

    INT             reduce using rule 23 (initvector -> .)
    FLOAT           reduce using rule 23 (initvector -> .)
    STRING          reduce using rule 23 (initvector -> .)
    BOOL            reduce using rule 23 (initvector -> .)

    initvector                     shift and go to state 20

state 12

    (3) program -> PROGRAM COLON MAIN main1 . mainc finmain
    (51) mainc -> . LKEY RKEY
    (52) mainc -> . LKEY bloq RKEY
    (53) mainc -> . LKEY mainc2 bloq RKEY
    (54) mainc -> . LKEY mainc2 RKEY

    LKEY            shift and go to state 22

    mainc                          shift and go to state 21

state 13

    (1) program -> PROGRAM COLON global program2 finglobal . program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON global program2 finglobal . MAIN main1 mainc finmain
    (6) program3 -> . function program3
    (7) program3 -> . function
    (24) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (25) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (26) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (27) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (28) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (29) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY

    MAIN            shift and go to state 24
    FUNCTION        shift and go to state 26

    program3                       shift and go to state 23
    function                       shift and go to state 25

state 14

    (4) program2 -> crear program2 .

    MAIN            reduce using rule 4 (program2 -> crear program2 .)
    FUNCTION        reduce using rule 4 (program2 -> crear program2 .)


state 15

    (14) var -> VAR tipo . ID SEMICOLON

    ID              shift and go to state 27


state 16

    (15) tipo -> INT .

    ID              reduce using rule 15 (tipo -> INT .)


state 17

    (16) tipo -> FLOAT .

    ID              reduce using rule 16 (tipo -> FLOAT .)


state 18

    (17) tipo -> STRING .

    ID              reduce using rule 17 (tipo -> STRING .)


state 19

    (18) tipo -> BOOL .

    ID              reduce using rule 18 (tipo -> BOOL .)


state 20

    (19) vector -> VECTOR initvector . INT ID LBRACE CTE_I RBRACE SEMICOLON
    (20) vector -> VECTOR initvector . FLOAT ID LBRACE CTE_I RBRACE SEMICOLON
    (21) vector -> VECTOR initvector . STRING ID LBRACE CTE_I RBRACE SEMICOLON
    (22) vector -> VECTOR initvector . BOOL ID LBRACE CTE_I RBRACE SEMICOLON

    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    STRING          shift and go to state 30
    BOOL            shift and go to state 31


state 21

    (3) program -> PROGRAM COLON MAIN main1 mainc . finmain
    (13) finmain -> .

    $end            reduce using rule 13 (finmain -> .)

    finmain                        shift and go to state 32

state 22

    (51) mainc -> LKEY . RKEY
    (52) mainc -> LKEY . bloq RKEY
    (53) mainc -> LKEY . mainc2 bloq RKEY
    (54) mainc -> LKEY . mainc2 RKEY
    (59) bloq -> . estat
    (60) bloq -> . estat bloq
    (55) mainc2 -> . var
    (56) mainc2 -> . var mainc2
    (57) mainc2 -> . vector
    (58) mainc2 -> . vector mainc2
    (61) estat -> . asign
    (62) estat -> . cond
    (63) estat -> . escrit
    (64) estat -> . ciclo
    (65) estat -> . leer
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON
    (20) vector -> . VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON
    (21) vector -> . VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON
    (22) vector -> . VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (73) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (74) leer -> . READ LPAREN ID RPAREN SEMICOLON

    RKEY            shift and go to state 33
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11
    ID              shift and go to state 44
    IF              shift and go to state 45
    PRINT           shift and go to state 46
    WHILE           shift and go to state 47
    READ            shift and go to state 48

    bloq                           shift and go to state 34
    mainc2                         shift and go to state 35
    estat                          shift and go to state 36
    var                            shift and go to state 37
    vector                         shift and go to state 38
    asign                          shift and go to state 39
    cond                           shift and go to state 40
    escrit                         shift and go to state 41
    ciclo                          shift and go to state 42
    leer                           shift and go to state 43

state 23

    (1) program -> PROGRAM COLON global program2 finglobal program3 . MAIN main1 mainc finmain

    MAIN            shift and go to state 49


state 24

    (2) program -> PROGRAM COLON global program2 finglobal MAIN . main1 mainc finmain
    (12) main1 -> .

    LKEY            reduce using rule 12 (main1 -> .)

    main1                          shift and go to state 50

state 25

    (6) program3 -> function . program3
    (7) program3 -> function .
    (6) program3 -> . function program3
    (7) program3 -> . function
    (24) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (25) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (26) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (27) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (28) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (29) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY

    MAIN            reduce using rule 7 (program3 -> function .)
    FUNCTION        shift and go to state 26

    function                       shift and go to state 25
    program3                       shift and go to state 51

state 26

    (24) function -> FUNCTION . functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (25) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (26) function -> FUNCTION . functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (27) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (28) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (29) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY RKEY
    (30) functype -> . INT
    (31) functype -> . FLOAT
    (32) functype -> . STRING
    (33) functype -> . BOOL
    (34) functype -> . VOID

    INT             shift and go to state 53
    FLOAT           shift and go to state 54
    STRING          shift and go to state 55
    BOOL            shift and go to state 56
    VOID            shift and go to state 57

    functype                       shift and go to state 52

state 27

    (14) var -> VAR tipo ID . SEMICOLON

    SEMICOLON       shift and go to state 58


state 28

    (19) vector -> VECTOR initvector INT . ID LBRACE CTE_I RBRACE SEMICOLON

    ID              shift and go to state 59


state 29

    (20) vector -> VECTOR initvector FLOAT . ID LBRACE CTE_I RBRACE SEMICOLON

    ID              shift and go to state 60


state 30

    (21) vector -> VECTOR initvector STRING . ID LBRACE CTE_I RBRACE SEMICOLON

    ID              shift and go to state 61


state 31

    (22) vector -> VECTOR initvector BOOL . ID LBRACE CTE_I RBRACE SEMICOLON

    ID              shift and go to state 62


state 32

    (3) program -> PROGRAM COLON MAIN main1 mainc finmain .

    $end            reduce using rule 3 (program -> PROGRAM COLON MAIN main1 mainc finmain .)


state 33

    (51) mainc -> LKEY RKEY .

    $end            reduce using rule 51 (mainc -> LKEY RKEY .)


state 34

    (52) mainc -> LKEY bloq . RKEY

    RKEY            shift and go to state 63


state 35

    (53) mainc -> LKEY mainc2 . bloq RKEY
    (54) mainc -> LKEY mainc2 . RKEY
    (59) bloq -> . estat
    (60) bloq -> . estat bloq
    (61) estat -> . asign
    (62) estat -> . cond
    (63) estat -> . escrit
    (64) estat -> . ciclo
    (65) estat -> . leer
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (73) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (74) leer -> . READ LPAREN ID RPAREN SEMICOLON

    RKEY            shift and go to state 65
    ID              shift and go to state 44
    IF              shift and go to state 45
    PRINT           shift and go to state 46
    WHILE           shift and go to state 47
    READ            shift and go to state 48

    bloq                           shift and go to state 64
    estat                          shift and go to state 36
    asign                          shift and go to state 39
    cond                           shift and go to state 40
    escrit                         shift and go to state 41
    ciclo                          shift and go to state 42
    leer                           shift and go to state 43

state 36

    (59) bloq -> estat .
    (60) bloq -> estat . bloq
    (59) bloq -> . estat
    (60) bloq -> . estat bloq
    (61) estat -> . asign
    (62) estat -> . cond
    (63) estat -> . escrit
    (64) estat -> . ciclo
    (65) estat -> . leer
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (73) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (74) leer -> . READ LPAREN ID RPAREN SEMICOLON

  ! shift/reduce conflict for ID resolved as shift
    RKEY            reduce using rule 59 (bloq -> estat .)
    RETURN          reduce using rule 59 (bloq -> estat .)
    LPAREN          reduce using rule 59 (bloq -> estat .)
    PLUS            reduce using rule 59 (bloq -> estat .)
    MINUS           reduce using rule 59 (bloq -> estat .)
    CTE_I           reduce using rule 59 (bloq -> estat .)
    CTE_F           reduce using rule 59 (bloq -> estat .)
    CTE_S           reduce using rule 59 (bloq -> estat .)
    TRUE            reduce using rule 59 (bloq -> estat .)
    FALSE           reduce using rule 59 (bloq -> estat .)
    ID              shift and go to state 44
    IF              shift and go to state 45
    PRINT           shift and go to state 46
    WHILE           shift and go to state 47
    READ            shift and go to state 48

  ! ID              [ reduce using rule 59 (bloq -> estat .) ]

    estat                          shift and go to state 36
    bloq                           shift and go to state 66
    asign                          shift and go to state 39
    cond                           shift and go to state 40
    escrit                         shift and go to state 41
    ciclo                          shift and go to state 42
    leer                           shift and go to state 43

state 37

    (55) mainc2 -> var .
    (56) mainc2 -> var . mainc2
    (55) mainc2 -> . var
    (56) mainc2 -> . var mainc2
    (57) mainc2 -> . vector
    (58) mainc2 -> . vector mainc2
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON
    (20) vector -> . VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON
    (21) vector -> . VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON
    (22) vector -> . VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            reduce using rule 55 (mainc2 -> var .)
    ID              reduce using rule 55 (mainc2 -> var .)
    IF              reduce using rule 55 (mainc2 -> var .)
    PRINT           reduce using rule 55 (mainc2 -> var .)
    WHILE           reduce using rule 55 (mainc2 -> var .)
    READ            reduce using rule 55 (mainc2 -> var .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    var                            shift and go to state 37
    mainc2                         shift and go to state 67
    vector                         shift and go to state 38

state 38

    (57) mainc2 -> vector .
    (58) mainc2 -> vector . mainc2
    (55) mainc2 -> . var
    (56) mainc2 -> . var mainc2
    (57) mainc2 -> . vector
    (58) mainc2 -> . vector mainc2
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON
    (20) vector -> . VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON
    (21) vector -> . VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON
    (22) vector -> . VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            reduce using rule 57 (mainc2 -> vector .)
    ID              reduce using rule 57 (mainc2 -> vector .)
    IF              reduce using rule 57 (mainc2 -> vector .)
    PRINT           reduce using rule 57 (mainc2 -> vector .)
    WHILE           reduce using rule 57 (mainc2 -> vector .)
    READ            reduce using rule 57 (mainc2 -> vector .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    vector                         shift and go to state 38
    mainc2                         shift and go to state 68
    var                            shift and go to state 37

state 39

    (61) estat -> asign .

    ID              reduce using rule 61 (estat -> asign .)
    IF              reduce using rule 61 (estat -> asign .)
    PRINT           reduce using rule 61 (estat -> asign .)
    WHILE           reduce using rule 61 (estat -> asign .)
    READ            reduce using rule 61 (estat -> asign .)
    RKEY            reduce using rule 61 (estat -> asign .)
    RETURN          reduce using rule 61 (estat -> asign .)
    LPAREN          reduce using rule 61 (estat -> asign .)
    PLUS            reduce using rule 61 (estat -> asign .)
    MINUS           reduce using rule 61 (estat -> asign .)
    CTE_I           reduce using rule 61 (estat -> asign .)
    CTE_F           reduce using rule 61 (estat -> asign .)
    CTE_S           reduce using rule 61 (estat -> asign .)
    TRUE            reduce using rule 61 (estat -> asign .)
    FALSE           reduce using rule 61 (estat -> asign .)


state 40

    (62) estat -> cond .

    ID              reduce using rule 62 (estat -> cond .)
    IF              reduce using rule 62 (estat -> cond .)
    PRINT           reduce using rule 62 (estat -> cond .)
    WHILE           reduce using rule 62 (estat -> cond .)
    READ            reduce using rule 62 (estat -> cond .)
    RKEY            reduce using rule 62 (estat -> cond .)
    RETURN          reduce using rule 62 (estat -> cond .)
    LPAREN          reduce using rule 62 (estat -> cond .)
    PLUS            reduce using rule 62 (estat -> cond .)
    MINUS           reduce using rule 62 (estat -> cond .)
    CTE_I           reduce using rule 62 (estat -> cond .)
    CTE_F           reduce using rule 62 (estat -> cond .)
    CTE_S           reduce using rule 62 (estat -> cond .)
    TRUE            reduce using rule 62 (estat -> cond .)
    FALSE           reduce using rule 62 (estat -> cond .)


state 41

    (63) estat -> escrit .

    ID              reduce using rule 63 (estat -> escrit .)
    IF              reduce using rule 63 (estat -> escrit .)
    PRINT           reduce using rule 63 (estat -> escrit .)
    WHILE           reduce using rule 63 (estat -> escrit .)
    READ            reduce using rule 63 (estat -> escrit .)
    RKEY            reduce using rule 63 (estat -> escrit .)
    RETURN          reduce using rule 63 (estat -> escrit .)
    LPAREN          reduce using rule 63 (estat -> escrit .)
    PLUS            reduce using rule 63 (estat -> escrit .)
    MINUS           reduce using rule 63 (estat -> escrit .)
    CTE_I           reduce using rule 63 (estat -> escrit .)
    CTE_F           reduce using rule 63 (estat -> escrit .)
    CTE_S           reduce using rule 63 (estat -> escrit .)
    TRUE            reduce using rule 63 (estat -> escrit .)
    FALSE           reduce using rule 63 (estat -> escrit .)


state 42

    (64) estat -> ciclo .

    ID              reduce using rule 64 (estat -> ciclo .)
    IF              reduce using rule 64 (estat -> ciclo .)
    PRINT           reduce using rule 64 (estat -> ciclo .)
    WHILE           reduce using rule 64 (estat -> ciclo .)
    READ            reduce using rule 64 (estat -> ciclo .)
    RKEY            reduce using rule 64 (estat -> ciclo .)
    RETURN          reduce using rule 64 (estat -> ciclo .)
    LPAREN          reduce using rule 64 (estat -> ciclo .)
    PLUS            reduce using rule 64 (estat -> ciclo .)
    MINUS           reduce using rule 64 (estat -> ciclo .)
    CTE_I           reduce using rule 64 (estat -> ciclo .)
    CTE_F           reduce using rule 64 (estat -> ciclo .)
    CTE_S           reduce using rule 64 (estat -> ciclo .)
    TRUE            reduce using rule 64 (estat -> ciclo .)
    FALSE           reduce using rule 64 (estat -> ciclo .)


state 43

    (65) estat -> leer .

    ID              reduce using rule 65 (estat -> leer .)
    IF              reduce using rule 65 (estat -> leer .)
    PRINT           reduce using rule 65 (estat -> leer .)
    WHILE           reduce using rule 65 (estat -> leer .)
    READ            reduce using rule 65 (estat -> leer .)
    RKEY            reduce using rule 65 (estat -> leer .)
    RETURN          reduce using rule 65 (estat -> leer .)
    LPAREN          reduce using rule 65 (estat -> leer .)
    PLUS            reduce using rule 65 (estat -> leer .)
    MINUS           reduce using rule 65 (estat -> leer .)
    CTE_I           reduce using rule 65 (estat -> leer .)
    CTE_F           reduce using rule 65 (estat -> leer .)
    CTE_S           reduce using rule 65 (estat -> leer .)
    TRUE            reduce using rule 65 (estat -> leer .)
    FALSE           reduce using rule 65 (estat -> leer .)


state 44

    (66) asign -> ID . pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> ID . pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (118) pushid -> .

    EQUAL           reduce using rule 118 (pushid -> .)
    LBRACE          reduce using rule 118 (pushid -> .)

    pushid                         shift and go to state 69

state 45

    (68) cond -> IF . LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> IF . LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif

    LPAREN          shift and go to state 70


state 46

    (70) escrit -> PRINT . LPAREN escriti RPAREN SEMICOLON

    LPAREN          shift and go to state 71


state 47

    (73) ciclo -> WHILE . while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (128) while1 -> .

    LPAREN          reduce using rule 128 (while1 -> .)

    while1                         shift and go to state 72

state 48

    (74) leer -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 73


state 49

    (1) program -> PROGRAM COLON global program2 finglobal program3 MAIN . main1 mainc finmain
    (12) main1 -> .

    LKEY            reduce using rule 12 (main1 -> .)

    main1                          shift and go to state 74

state 50

    (2) program -> PROGRAM COLON global program2 finglobal MAIN main1 . mainc finmain
    (51) mainc -> . LKEY RKEY
    (52) mainc -> . LKEY bloq RKEY
    (53) mainc -> . LKEY mainc2 bloq RKEY
    (54) mainc -> . LKEY mainc2 RKEY

    LKEY            shift and go to state 22

    mainc                          shift and go to state 75

state 51

    (6) program3 -> function program3 .

    MAIN            reduce using rule 6 (program3 -> function program3 .)


state 52

    (24) function -> FUNCTION functype . ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (25) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (26) function -> FUNCTION functype . ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (27) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (28) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (29) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY RKEY

    ID              shift and go to state 76


state 53

    (30) functype -> INT .

    ID              reduce using rule 30 (functype -> INT .)


state 54

    (31) functype -> FLOAT .

    ID              reduce using rule 31 (functype -> FLOAT .)


state 55

    (32) functype -> STRING .

    ID              reduce using rule 32 (functype -> STRING .)


state 56

    (33) functype -> BOOL .

    ID              reduce using rule 33 (functype -> BOOL .)


state 57

    (34) functype -> VOID .

    ID              reduce using rule 34 (functype -> VOID .)


state 58

    (14) var -> VAR tipo ID SEMICOLON .

    VAR             reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    VECTOR          reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    MAIN            reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    FUNCTION        reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    RKEY            reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    ID              reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    IF              reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    PRINT           reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    WHILE           reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    READ            reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)


state 59

    (19) vector -> VECTOR initvector INT ID . LBRACE CTE_I RBRACE SEMICOLON

    LBRACE          shift and go to state 77


state 60

    (20) vector -> VECTOR initvector FLOAT ID . LBRACE CTE_I RBRACE SEMICOLON

    LBRACE          shift and go to state 78


state 61

    (21) vector -> VECTOR initvector STRING ID . LBRACE CTE_I RBRACE SEMICOLON

    LBRACE          shift and go to state 79


state 62

    (22) vector -> VECTOR initvector BOOL ID . LBRACE CTE_I RBRACE SEMICOLON

    LBRACE          shift and go to state 80


state 63

    (52) mainc -> LKEY bloq RKEY .

    $end            reduce using rule 52 (mainc -> LKEY bloq RKEY .)


state 64

    (53) mainc -> LKEY mainc2 bloq . RKEY

    RKEY            shift and go to state 81


state 65

    (54) mainc -> LKEY mainc2 RKEY .

    $end            reduce using rule 54 (mainc -> LKEY mainc2 RKEY .)


state 66

    (60) bloq -> estat bloq .

    RKEY            reduce using rule 60 (bloq -> estat bloq .)
    RETURN          reduce using rule 60 (bloq -> estat bloq .)
    LPAREN          reduce using rule 60 (bloq -> estat bloq .)
    PLUS            reduce using rule 60 (bloq -> estat bloq .)
    MINUS           reduce using rule 60 (bloq -> estat bloq .)
    ID              reduce using rule 60 (bloq -> estat bloq .)
    CTE_I           reduce using rule 60 (bloq -> estat bloq .)
    CTE_F           reduce using rule 60 (bloq -> estat bloq .)
    CTE_S           reduce using rule 60 (bloq -> estat bloq .)
    TRUE            reduce using rule 60 (bloq -> estat bloq .)
    FALSE           reduce using rule 60 (bloq -> estat bloq .)


state 67

    (56) mainc2 -> var mainc2 .

    RKEY            reduce using rule 56 (mainc2 -> var mainc2 .)
    ID              reduce using rule 56 (mainc2 -> var mainc2 .)
    IF              reduce using rule 56 (mainc2 -> var mainc2 .)
    PRINT           reduce using rule 56 (mainc2 -> var mainc2 .)
    WHILE           reduce using rule 56 (mainc2 -> var mainc2 .)
    READ            reduce using rule 56 (mainc2 -> var mainc2 .)


state 68

    (58) mainc2 -> vector mainc2 .

    RKEY            reduce using rule 58 (mainc2 -> vector mainc2 .)
    ID              reduce using rule 58 (mainc2 -> vector mainc2 .)
    IF              reduce using rule 58 (mainc2 -> vector mainc2 .)
    PRINT           reduce using rule 58 (mainc2 -> vector mainc2 .)
    WHILE           reduce using rule 58 (mainc2 -> vector mainc2 .)
    READ            reduce using rule 58 (mainc2 -> vector mainc2 .)


state 69

    (66) asign -> ID pushid . EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> ID pushid . LBRACE exr RBRACE EQUAL pushop expres SEMICOLON

    EQUAL           shift and go to state 82
    LBRACE          shift and go to state 83


state 70

    (68) cond -> IF LPAREN . expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> IF LPAREN . expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (75) expres -> . exr
    (76) expres -> . exr log expres
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expres                         shift and go to state 85
    exr                            shift and go to state 86
    ex                             shift and go to state 87
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 71

    (70) escrit -> PRINT LPAREN . escriti RPAREN SEMICOLON
    (71) escriti -> . expres
    (72) escriti -> . expres COMA escriti
    (75) expres -> . exr
    (76) expres -> . exr log expres
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    escriti                        shift and go to state 102
    expres                         shift and go to state 103
    exr                            shift and go to state 86
    ex                             shift and go to state 87
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 72

    (73) ciclo -> WHILE while1 . LPAREN expres RPAREN while2 LKEY bloq RKEY while3

    LPAREN          shift and go to state 104


state 73

    (74) leer -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 105


state 74

    (1) program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 . mainc finmain
    (51) mainc -> . LKEY RKEY
    (52) mainc -> . LKEY bloq RKEY
    (53) mainc -> . LKEY mainc2 bloq RKEY
    (54) mainc -> . LKEY mainc2 RKEY

    LKEY            shift and go to state 22

    mainc                          shift and go to state 106

state 75

    (2) program -> PROGRAM COLON global program2 finglobal MAIN main1 mainc . finmain
    (13) finmain -> .

    $end            reduce using rule 13 (finmain -> .)

    finmain                        shift and go to state 107

state 76

    (24) function -> FUNCTION functype ID . addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (25) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY localvar RKEY
    (26) function -> FUNCTION functype ID . addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (27) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (28) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (29) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY RKEY
    (35) addInTable -> .

    LPAREN          reduce using rule 35 (addInTable -> .)

    addInTable                     shift and go to state 108

state 77

    (19) vector -> VECTOR initvector INT ID LBRACE . CTE_I RBRACE SEMICOLON

    CTE_I           shift and go to state 109


state 78

    (20) vector -> VECTOR initvector FLOAT ID LBRACE . CTE_I RBRACE SEMICOLON

    CTE_I           shift and go to state 110


state 79

    (21) vector -> VECTOR initvector STRING ID LBRACE . CTE_I RBRACE SEMICOLON

    CTE_I           shift and go to state 111


state 80

    (22) vector -> VECTOR initvector BOOL ID LBRACE . CTE_I RBRACE SEMICOLON

    CTE_I           shift and go to state 112


state 81

    (53) mainc -> LKEY mainc2 bloq RKEY .

    $end            reduce using rule 53 (mainc -> LKEY mainc2 bloq RKEY .)


state 82

    (66) asign -> ID pushid EQUAL . pushop expres resolverasignacion SEMICOLON
    (119) pushop -> .

    LPAREN          reduce using rule 119 (pushop -> .)
    PLUS            reduce using rule 119 (pushop -> .)
    MINUS           reduce using rule 119 (pushop -> .)
    ID              reduce using rule 119 (pushop -> .)
    CTE_I           reduce using rule 119 (pushop -> .)
    CTE_F           reduce using rule 119 (pushop -> .)
    CTE_S           reduce using rule 119 (pushop -> .)
    TRUE            reduce using rule 119 (pushop -> .)
    FALSE           reduce using rule 119 (pushop -> .)

    pushop                         shift and go to state 113

state 83

    (67) asign -> ID pushid LBRACE . exr RBRACE EQUAL pushop expres SEMICOLON
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exr                            shift and go to state 114
    ex                             shift and go to state 87
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 84

    (85) fact -> LPAREN . pushop expres RPAREN popop
    (119) pushop -> .

    LPAREN          reduce using rule 119 (pushop -> .)
    PLUS            reduce using rule 119 (pushop -> .)
    MINUS           reduce using rule 119 (pushop -> .)
    ID              reduce using rule 119 (pushop -> .)
    CTE_I           reduce using rule 119 (pushop -> .)
    CTE_F           reduce using rule 119 (pushop -> .)
    CTE_S           reduce using rule 119 (pushop -> .)
    TRUE            reduce using rule 119 (pushop -> .)
    FALSE           reduce using rule 119 (pushop -> .)

    pushop                         shift and go to state 115

state 85

    (68) cond -> IF LPAREN expres . RPAREN LKEY resif bloq RKEY finif
    (69) cond -> IF LPAREN expres . RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif

    RPAREN          shift and go to state 116


state 86

    (75) expres -> exr .
    (76) expres -> exr . log expres
    (95) log -> . OR
    (96) log -> . AND

    RPAREN          reduce using rule 75 (expres -> exr .)
    COMA            reduce using rule 75 (expres -> exr .)
    SEMICOLON       reduce using rule 75 (expres -> exr .)
    RBRACE          reduce using rule 75 (expres -> exr .)
    RKEY            reduce using rule 75 (expres -> exr .)
    LPAREN          reduce using rule 75 (expres -> exr .)
    PLUS            reduce using rule 75 (expres -> exr .)
    MINUS           reduce using rule 75 (expres -> exr .)
    ID              reduce using rule 75 (expres -> exr .)
    CTE_I           reduce using rule 75 (expres -> exr .)
    CTE_F           reduce using rule 75 (expres -> exr .)
    CTE_S           reduce using rule 75 (expres -> exr .)
    TRUE            reduce using rule 75 (expres -> exr .)
    FALSE           reduce using rule 75 (expres -> exr .)
    OR              shift and go to state 118
    AND             shift and go to state 119

    log                            shift and go to state 117

state 87

    (77) exr -> ex .
    (78) exr -> ex . rel exr resrel
    (89) rel -> . LOWERTHAN
    (90) rel -> . MORETHAN
    (91) rel -> . LOWEREQ
    (92) rel -> . MOREEQ
    (93) rel -> . SAME
    (94) rel -> . DIFFERENT

    OR              reduce using rule 77 (exr -> ex .)
    AND             reduce using rule 77 (exr -> ex .)
    RPAREN          reduce using rule 77 (exr -> ex .)
    COMA            reduce using rule 77 (exr -> ex .)
    RBRACE          reduce using rule 77 (exr -> ex .)
    SEMICOLON       reduce using rule 77 (exr -> ex .)
    RKEY            reduce using rule 77 (exr -> ex .)
    LPAREN          reduce using rule 77 (exr -> ex .)
    PLUS            reduce using rule 77 (exr -> ex .)
    MINUS           reduce using rule 77 (exr -> ex .)
    ID              reduce using rule 77 (exr -> ex .)
    CTE_I           reduce using rule 77 (exr -> ex .)
    CTE_F           reduce using rule 77 (exr -> ex .)
    CTE_S           reduce using rule 77 (exr -> ex .)
    TRUE            reduce using rule 77 (exr -> ex .)
    FALSE           reduce using rule 77 (exr -> ex .)
    LOWERTHAN       shift and go to state 121
    MORETHAN        shift and go to state 122
    LOWEREQ         shift and go to state 123
    MOREEQ          shift and go to state 124
    SAME            shift and go to state 125
    DIFFERENT       shift and go to state 126

    rel                            shift and go to state 120

state 88

    (79) ex -> term . resterm
    (80) ex -> term . resterm PLUS pushop ex
    (81) ex -> term . resterm MINUS pushop ex
    (123) resterm -> .

    PLUS            reduce using rule 123 (resterm -> .)
    MINUS           reduce using rule 123 (resterm -> .)
    LOWERTHAN       reduce using rule 123 (resterm -> .)
    MORETHAN        reduce using rule 123 (resterm -> .)
    LOWEREQ         reduce using rule 123 (resterm -> .)
    MOREEQ          reduce using rule 123 (resterm -> .)
    SAME            reduce using rule 123 (resterm -> .)
    DIFFERENT       reduce using rule 123 (resterm -> .)
    OR              reduce using rule 123 (resterm -> .)
    AND             reduce using rule 123 (resterm -> .)
    RPAREN          reduce using rule 123 (resterm -> .)
    COMA            reduce using rule 123 (resterm -> .)
    RBRACE          reduce using rule 123 (resterm -> .)
    SEMICOLON       reduce using rule 123 (resterm -> .)
    RKEY            reduce using rule 123 (resterm -> .)
    LPAREN          reduce using rule 123 (resterm -> .)
    ID              reduce using rule 123 (resterm -> .)
    CTE_I           reduce using rule 123 (resterm -> .)
    CTE_F           reduce using rule 123 (resterm -> .)
    CTE_S           reduce using rule 123 (resterm -> .)
    TRUE            reduce using rule 123 (resterm -> .)
    FALSE           reduce using rule 123 (resterm -> .)

    resterm                        shift and go to state 127

state 89

    (87) fact -> PLUS . var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    var_cte                        shift and go to state 128
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 90

    (88) fact -> MINUS . var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    var_cte                        shift and go to state 129
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 91

    (82) term -> fact . resfact
    (83) term -> fact . resfact TIMES pushop term
    (84) term -> fact . resfact DIVIDE pushop term
    (122) resfact -> .

    TIMES           reduce using rule 122 (resfact -> .)
    DIVIDE          reduce using rule 122 (resfact -> .)
    PLUS            reduce using rule 122 (resfact -> .)
    MINUS           reduce using rule 122 (resfact -> .)
    LOWERTHAN       reduce using rule 122 (resfact -> .)
    MORETHAN        reduce using rule 122 (resfact -> .)
    LOWEREQ         reduce using rule 122 (resfact -> .)
    MOREEQ          reduce using rule 122 (resfact -> .)
    SAME            reduce using rule 122 (resfact -> .)
    DIFFERENT       reduce using rule 122 (resfact -> .)
    OR              reduce using rule 122 (resfact -> .)
    AND             reduce using rule 122 (resfact -> .)
    RPAREN          reduce using rule 122 (resfact -> .)
    COMA            reduce using rule 122 (resfact -> .)
    RBRACE          reduce using rule 122 (resfact -> .)
    SEMICOLON       reduce using rule 122 (resfact -> .)
    RKEY            reduce using rule 122 (resfact -> .)
    LPAREN          reduce using rule 122 (resfact -> .)
    ID              reduce using rule 122 (resfact -> .)
    CTE_I           reduce using rule 122 (resfact -> .)
    CTE_F           reduce using rule 122 (resfact -> .)
    CTE_S           reduce using rule 122 (resfact -> .)
    TRUE            reduce using rule 122 (resfact -> .)
    FALSE           reduce using rule 122 (resfact -> .)

    resfact                        shift and go to state 130

state 92

    (86) fact -> var_cte .

    TIMES           reduce using rule 86 (fact -> var_cte .)
    DIVIDE          reduce using rule 86 (fact -> var_cte .)
    PLUS            reduce using rule 86 (fact -> var_cte .)
    MINUS           reduce using rule 86 (fact -> var_cte .)
    LOWERTHAN       reduce using rule 86 (fact -> var_cte .)
    MORETHAN        reduce using rule 86 (fact -> var_cte .)
    LOWEREQ         reduce using rule 86 (fact -> var_cte .)
    MOREEQ          reduce using rule 86 (fact -> var_cte .)
    SAME            reduce using rule 86 (fact -> var_cte .)
    DIFFERENT       reduce using rule 86 (fact -> var_cte .)
    OR              reduce using rule 86 (fact -> var_cte .)
    AND             reduce using rule 86 (fact -> var_cte .)
    RPAREN          reduce using rule 86 (fact -> var_cte .)
    COMA            reduce using rule 86 (fact -> var_cte .)
    RBRACE          reduce using rule 86 (fact -> var_cte .)
    SEMICOLON       reduce using rule 86 (fact -> var_cte .)
    RKEY            reduce using rule 86 (fact -> var_cte .)
    LPAREN          reduce using rule 86 (fact -> var_cte .)
    ID              reduce using rule 86 (fact -> var_cte .)
    CTE_I           reduce using rule 86 (fact -> var_cte .)
    CTE_F           reduce using rule 86 (fact -> var_cte .)
    CTE_S           reduce using rule 86 (fact -> var_cte .)
    TRUE            reduce using rule 86 (fact -> var_cte .)
    FALSE           reduce using rule 86 (fact -> var_cte .)


state 93

    (97) var_cte -> ID . pushid
    (107) fcall -> ID . existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> ID . existfunc LPAREN RPAREN
    (115) vcall -> ID . LBRACE expres RBRACE
    (106) asigvector -> ID . LBRACE ex RBRACE
    (118) pushid -> .
    (109) existfunc -> .

  ! reduce/reduce conflict for LPAREN resolved using rule 109 (existfunc -> .)
    LBRACE          shift and go to state 133
    TIMES           reduce using rule 118 (pushid -> .)
    DIVIDE          reduce using rule 118 (pushid -> .)
    PLUS            reduce using rule 118 (pushid -> .)
    MINUS           reduce using rule 118 (pushid -> .)
    LOWERTHAN       reduce using rule 118 (pushid -> .)
    MORETHAN        reduce using rule 118 (pushid -> .)
    LOWEREQ         reduce using rule 118 (pushid -> .)
    MOREEQ          reduce using rule 118 (pushid -> .)
    SAME            reduce using rule 118 (pushid -> .)
    DIFFERENT       reduce using rule 118 (pushid -> .)
    OR              reduce using rule 118 (pushid -> .)
    AND             reduce using rule 118 (pushid -> .)
    RPAREN          reduce using rule 118 (pushid -> .)
    COMA            reduce using rule 118 (pushid -> .)
    RBRACE          reduce using rule 118 (pushid -> .)
    SEMICOLON       reduce using rule 118 (pushid -> .)
    RKEY            reduce using rule 118 (pushid -> .)
    ID              reduce using rule 118 (pushid -> .)
    CTE_I           reduce using rule 118 (pushid -> .)
    CTE_F           reduce using rule 118 (pushid -> .)
    CTE_S           reduce using rule 118 (pushid -> .)
    TRUE            reduce using rule 118 (pushid -> .)
    FALSE           reduce using rule 118 (pushid -> .)
    LPAREN          reduce using rule 109 (existfunc -> .)

  ! LPAREN          [ reduce using rule 118 (pushid -> .) ]

    pushid                         shift and go to state 131
    existfunc                      shift and go to state 132

state 94

    (98) var_cte -> CTE_I . pushcte
    (117) pushcte -> .

    TIMES           reduce using rule 117 (pushcte -> .)
    DIVIDE          reduce using rule 117 (pushcte -> .)
    PLUS            reduce using rule 117 (pushcte -> .)
    MINUS           reduce using rule 117 (pushcte -> .)
    LOWERTHAN       reduce using rule 117 (pushcte -> .)
    MORETHAN        reduce using rule 117 (pushcte -> .)
    LOWEREQ         reduce using rule 117 (pushcte -> .)
    MOREEQ          reduce using rule 117 (pushcte -> .)
    SAME            reduce using rule 117 (pushcte -> .)
    DIFFERENT       reduce using rule 117 (pushcte -> .)
    OR              reduce using rule 117 (pushcte -> .)
    AND             reduce using rule 117 (pushcte -> .)
    RPAREN          reduce using rule 117 (pushcte -> .)
    COMA            reduce using rule 117 (pushcte -> .)
    RBRACE          reduce using rule 117 (pushcte -> .)
    SEMICOLON       reduce using rule 117 (pushcte -> .)
    RKEY            reduce using rule 117 (pushcte -> .)
    LPAREN          reduce using rule 117 (pushcte -> .)
    ID              reduce using rule 117 (pushcte -> .)
    CTE_I           reduce using rule 117 (pushcte -> .)
    CTE_F           reduce using rule 117 (pushcte -> .)
    CTE_S           reduce using rule 117 (pushcte -> .)
    TRUE            reduce using rule 117 (pushcte -> .)
    FALSE           reduce using rule 117 (pushcte -> .)

    pushcte                        shift and go to state 134

state 95

    (99) var_cte -> CTE_F . pushcte
    (117) pushcte -> .

    TIMES           reduce using rule 117 (pushcte -> .)
    DIVIDE          reduce using rule 117 (pushcte -> .)
    PLUS            reduce using rule 117 (pushcte -> .)
    MINUS           reduce using rule 117 (pushcte -> .)
    LOWERTHAN       reduce using rule 117 (pushcte -> .)
    MORETHAN        reduce using rule 117 (pushcte -> .)
    LOWEREQ         reduce using rule 117 (pushcte -> .)
    MOREEQ          reduce using rule 117 (pushcte -> .)
    SAME            reduce using rule 117 (pushcte -> .)
    DIFFERENT       reduce using rule 117 (pushcte -> .)
    OR              reduce using rule 117 (pushcte -> .)
    AND             reduce using rule 117 (pushcte -> .)
    RPAREN          reduce using rule 117 (pushcte -> .)
    COMA            reduce using rule 117 (pushcte -> .)
    RBRACE          reduce using rule 117 (pushcte -> .)
    SEMICOLON       reduce using rule 117 (pushcte -> .)
    RKEY            reduce using rule 117 (pushcte -> .)
    LPAREN          reduce using rule 117 (pushcte -> .)
    ID              reduce using rule 117 (pushcte -> .)
    CTE_I           reduce using rule 117 (pushcte -> .)
    CTE_F           reduce using rule 117 (pushcte -> .)
    CTE_S           reduce using rule 117 (pushcte -> .)
    TRUE            reduce using rule 117 (pushcte -> .)
    FALSE           reduce using rule 117 (pushcte -> .)

    pushcte                        shift and go to state 135

state 96

    (100) var_cte -> CTE_S . pushcte
    (117) pushcte -> .

    TIMES           reduce using rule 117 (pushcte -> .)
    DIVIDE          reduce using rule 117 (pushcte -> .)
    PLUS            reduce using rule 117 (pushcte -> .)
    MINUS           reduce using rule 117 (pushcte -> .)
    LOWERTHAN       reduce using rule 117 (pushcte -> .)
    MORETHAN        reduce using rule 117 (pushcte -> .)
    LOWEREQ         reduce using rule 117 (pushcte -> .)
    MOREEQ          reduce using rule 117 (pushcte -> .)
    SAME            reduce using rule 117 (pushcte -> .)
    DIFFERENT       reduce using rule 117 (pushcte -> .)
    OR              reduce using rule 117 (pushcte -> .)
    AND             reduce using rule 117 (pushcte -> .)
    RPAREN          reduce using rule 117 (pushcte -> .)
    COMA            reduce using rule 117 (pushcte -> .)
    RBRACE          reduce using rule 117 (pushcte -> .)
    SEMICOLON       reduce using rule 117 (pushcte -> .)
    RKEY            reduce using rule 117 (pushcte -> .)
    LPAREN          reduce using rule 117 (pushcte -> .)
    ID              reduce using rule 117 (pushcte -> .)
    CTE_I           reduce using rule 117 (pushcte -> .)
    CTE_F           reduce using rule 117 (pushcte -> .)
    CTE_S           reduce using rule 117 (pushcte -> .)
    TRUE            reduce using rule 117 (pushcte -> .)
    FALSE           reduce using rule 117 (pushcte -> .)

    pushcte                        shift and go to state 136

state 97

    (101) var_cte -> TRUE . pushcte
    (117) pushcte -> .

    TIMES           reduce using rule 117 (pushcte -> .)
    DIVIDE          reduce using rule 117 (pushcte -> .)
    PLUS            reduce using rule 117 (pushcte -> .)
    MINUS           reduce using rule 117 (pushcte -> .)
    LOWERTHAN       reduce using rule 117 (pushcte -> .)
    MORETHAN        reduce using rule 117 (pushcte -> .)
    LOWEREQ         reduce using rule 117 (pushcte -> .)
    MOREEQ          reduce using rule 117 (pushcte -> .)
    SAME            reduce using rule 117 (pushcte -> .)
    DIFFERENT       reduce using rule 117 (pushcte -> .)
    OR              reduce using rule 117 (pushcte -> .)
    AND             reduce using rule 117 (pushcte -> .)
    RPAREN          reduce using rule 117 (pushcte -> .)
    COMA            reduce using rule 117 (pushcte -> .)
    RBRACE          reduce using rule 117 (pushcte -> .)
    SEMICOLON       reduce using rule 117 (pushcte -> .)
    RKEY            reduce using rule 117 (pushcte -> .)
    LPAREN          reduce using rule 117 (pushcte -> .)
    ID              reduce using rule 117 (pushcte -> .)
    CTE_I           reduce using rule 117 (pushcte -> .)
    CTE_F           reduce using rule 117 (pushcte -> .)
    CTE_S           reduce using rule 117 (pushcte -> .)
    TRUE            reduce using rule 117 (pushcte -> .)
    FALSE           reduce using rule 117 (pushcte -> .)

    pushcte                        shift and go to state 137

state 98

    (102) var_cte -> FALSE . pushcte
    (117) pushcte -> .

    TIMES           reduce using rule 117 (pushcte -> .)
    DIVIDE          reduce using rule 117 (pushcte -> .)
    PLUS            reduce using rule 117 (pushcte -> .)
    MINUS           reduce using rule 117 (pushcte -> .)
    LOWERTHAN       reduce using rule 117 (pushcte -> .)
    MORETHAN        reduce using rule 117 (pushcte -> .)
    LOWEREQ         reduce using rule 117 (pushcte -> .)
    MOREEQ          reduce using rule 117 (pushcte -> .)
    SAME            reduce using rule 117 (pushcte -> .)
    DIFFERENT       reduce using rule 117 (pushcte -> .)
    OR              reduce using rule 117 (pushcte -> .)
    AND             reduce using rule 117 (pushcte -> .)
    RPAREN          reduce using rule 117 (pushcte -> .)
    COMA            reduce using rule 117 (pushcte -> .)
    RBRACE          reduce using rule 117 (pushcte -> .)
    SEMICOLON       reduce using rule 117 (pushcte -> .)
    RKEY            reduce using rule 117 (pushcte -> .)
    LPAREN          reduce using rule 117 (pushcte -> .)
    ID              reduce using rule 117 (pushcte -> .)
    CTE_I           reduce using rule 117 (pushcte -> .)
    CTE_F           reduce using rule 117 (pushcte -> .)
    CTE_S           reduce using rule 117 (pushcte -> .)
    TRUE            reduce using rule 117 (pushcte -> .)
    FALSE           reduce using rule 117 (pushcte -> .)

    pushcte                        shift and go to state 138

state 99

    (103) var_cte -> fcall .

    TIMES           reduce using rule 103 (var_cte -> fcall .)
    DIVIDE          reduce using rule 103 (var_cte -> fcall .)
    PLUS            reduce using rule 103 (var_cte -> fcall .)
    MINUS           reduce using rule 103 (var_cte -> fcall .)
    LOWERTHAN       reduce using rule 103 (var_cte -> fcall .)
    MORETHAN        reduce using rule 103 (var_cte -> fcall .)
    LOWEREQ         reduce using rule 103 (var_cte -> fcall .)
    MOREEQ          reduce using rule 103 (var_cte -> fcall .)
    SAME            reduce using rule 103 (var_cte -> fcall .)
    DIFFERENT       reduce using rule 103 (var_cte -> fcall .)
    OR              reduce using rule 103 (var_cte -> fcall .)
    AND             reduce using rule 103 (var_cte -> fcall .)
    RPAREN          reduce using rule 103 (var_cte -> fcall .)
    COMA            reduce using rule 103 (var_cte -> fcall .)
    RBRACE          reduce using rule 103 (var_cte -> fcall .)
    SEMICOLON       reduce using rule 103 (var_cte -> fcall .)
    RKEY            reduce using rule 103 (var_cte -> fcall .)
    LPAREN          reduce using rule 103 (var_cte -> fcall .)
    ID              reduce using rule 103 (var_cte -> fcall .)
    CTE_I           reduce using rule 103 (var_cte -> fcall .)
    CTE_F           reduce using rule 103 (var_cte -> fcall .)
    CTE_S           reduce using rule 103 (var_cte -> fcall .)
    TRUE            reduce using rule 103 (var_cte -> fcall .)
    FALSE           reduce using rule 103 (var_cte -> fcall .)


state 100

    (104) var_cte -> vcall .

    TIMES           reduce using rule 104 (var_cte -> vcall .)
    DIVIDE          reduce using rule 104 (var_cte -> vcall .)
    PLUS            reduce using rule 104 (var_cte -> vcall .)
    MINUS           reduce using rule 104 (var_cte -> vcall .)
    LOWERTHAN       reduce using rule 104 (var_cte -> vcall .)
    MORETHAN        reduce using rule 104 (var_cte -> vcall .)
    LOWEREQ         reduce using rule 104 (var_cte -> vcall .)
    MOREEQ          reduce using rule 104 (var_cte -> vcall .)
    SAME            reduce using rule 104 (var_cte -> vcall .)
    DIFFERENT       reduce using rule 104 (var_cte -> vcall .)
    OR              reduce using rule 104 (var_cte -> vcall .)
    AND             reduce using rule 104 (var_cte -> vcall .)
    RPAREN          reduce using rule 104 (var_cte -> vcall .)
    COMA            reduce using rule 104 (var_cte -> vcall .)
    RBRACE          reduce using rule 104 (var_cte -> vcall .)
    SEMICOLON       reduce using rule 104 (var_cte -> vcall .)
    RKEY            reduce using rule 104 (var_cte -> vcall .)
    LPAREN          reduce using rule 104 (var_cte -> vcall .)
    ID              reduce using rule 104 (var_cte -> vcall .)
    CTE_I           reduce using rule 104 (var_cte -> vcall .)
    CTE_F           reduce using rule 104 (var_cte -> vcall .)
    CTE_S           reduce using rule 104 (var_cte -> vcall .)
    TRUE            reduce using rule 104 (var_cte -> vcall .)
    FALSE           reduce using rule 104 (var_cte -> vcall .)


state 101

    (105) var_cte -> asigvector .

    TIMES           reduce using rule 105 (var_cte -> asigvector .)
    DIVIDE          reduce using rule 105 (var_cte -> asigvector .)
    PLUS            reduce using rule 105 (var_cte -> asigvector .)
    MINUS           reduce using rule 105 (var_cte -> asigvector .)
    LOWERTHAN       reduce using rule 105 (var_cte -> asigvector .)
    MORETHAN        reduce using rule 105 (var_cte -> asigvector .)
    LOWEREQ         reduce using rule 105 (var_cte -> asigvector .)
    MOREEQ          reduce using rule 105 (var_cte -> asigvector .)
    SAME            reduce using rule 105 (var_cte -> asigvector .)
    DIFFERENT       reduce using rule 105 (var_cte -> asigvector .)
    OR              reduce using rule 105 (var_cte -> asigvector .)
    AND             reduce using rule 105 (var_cte -> asigvector .)
    RPAREN          reduce using rule 105 (var_cte -> asigvector .)
    COMA            reduce using rule 105 (var_cte -> asigvector .)
    RBRACE          reduce using rule 105 (var_cte -> asigvector .)
    SEMICOLON       reduce using rule 105 (var_cte -> asigvector .)
    RKEY            reduce using rule 105 (var_cte -> asigvector .)
    LPAREN          reduce using rule 105 (var_cte -> asigvector .)
    ID              reduce using rule 105 (var_cte -> asigvector .)
    CTE_I           reduce using rule 105 (var_cte -> asigvector .)
    CTE_F           reduce using rule 105 (var_cte -> asigvector .)
    CTE_S           reduce using rule 105 (var_cte -> asigvector .)
    TRUE            reduce using rule 105 (var_cte -> asigvector .)
    FALSE           reduce using rule 105 (var_cte -> asigvector .)


state 102

    (70) escrit -> PRINT LPAREN escriti . RPAREN SEMICOLON

    RPAREN          shift and go to state 139


state 103

    (71) escriti -> expres .
    (72) escriti -> expres . COMA escriti

    RPAREN          reduce using rule 71 (escriti -> expres .)
    COMA            shift and go to state 140


state 104

    (73) ciclo -> WHILE while1 LPAREN . expres RPAREN while2 LKEY bloq RKEY while3
    (75) expres -> . exr
    (76) expres -> . exr log expres
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expres                         shift and go to state 141
    exr                            shift and go to state 86
    ex                             shift and go to state 87
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 105

    (74) leer -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 142


state 106

    (1) program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc . finmain
    (13) finmain -> .

    $end            reduce using rule 13 (finmain -> .)

    finmain                        shift and go to state 143

state 107

    (2) program -> PROGRAM COLON global program2 finglobal MAIN main1 mainc finmain .

    $end            reduce using rule 2 (program -> PROGRAM COLON global program2 finglobal MAIN main1 mainc finmain .)


state 108

    (24) function -> FUNCTION functype ID addInTable . LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (25) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY localvar RKEY
    (26) function -> FUNCTION functype ID addInTable . LPAREN funci RPAREN LKEY localvar bloq RKEY
    (27) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (28) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY localvar bloq RKEY
    (29) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY RKEY

    LPAREN          shift and go to state 144


state 109

    (19) vector -> VECTOR initvector INT ID LBRACE CTE_I . RBRACE SEMICOLON

    RBRACE          shift and go to state 145


state 110

    (20) vector -> VECTOR initvector FLOAT ID LBRACE CTE_I . RBRACE SEMICOLON

    RBRACE          shift and go to state 146


state 111

    (21) vector -> VECTOR initvector STRING ID LBRACE CTE_I . RBRACE SEMICOLON

    RBRACE          shift and go to state 147


state 112

    (22) vector -> VECTOR initvector BOOL ID LBRACE CTE_I . RBRACE SEMICOLON

    RBRACE          shift and go to state 148


state 113

    (66) asign -> ID pushid EQUAL pushop . expres resolverasignacion SEMICOLON
    (75) expres -> . exr
    (76) expres -> . exr log expres
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expres                         shift and go to state 149
    exr                            shift and go to state 86
    ex                             shift and go to state 87
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 114

    (67) asign -> ID pushid LBRACE exr . RBRACE EQUAL pushop expres SEMICOLON

    RBRACE          shift and go to state 150


state 115

    (85) fact -> LPAREN pushop . expres RPAREN popop
    (75) expres -> . exr
    (76) expres -> . exr log expres
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expres                         shift and go to state 151
    exr                            shift and go to state 86
    ex                             shift and go to state 87
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 116

    (68) cond -> IF LPAREN expres RPAREN . LKEY resif bloq RKEY finif
    (69) cond -> IF LPAREN expres RPAREN . LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif

    LKEY            shift and go to state 152


state 117

    (76) expres -> exr log . expres
    (75) expres -> . exr
    (76) expres -> . exr log expres
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exr                            shift and go to state 86
    expres                         shift and go to state 153
    ex                             shift and go to state 87
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 118

    (95) log -> OR .

    LPAREN          reduce using rule 95 (log -> OR .)
    PLUS            reduce using rule 95 (log -> OR .)
    MINUS           reduce using rule 95 (log -> OR .)
    ID              reduce using rule 95 (log -> OR .)
    CTE_I           reduce using rule 95 (log -> OR .)
    CTE_F           reduce using rule 95 (log -> OR .)
    CTE_S           reduce using rule 95 (log -> OR .)
    TRUE            reduce using rule 95 (log -> OR .)
    FALSE           reduce using rule 95 (log -> OR .)


state 119

    (96) log -> AND .

    LPAREN          reduce using rule 96 (log -> AND .)
    PLUS            reduce using rule 96 (log -> AND .)
    MINUS           reduce using rule 96 (log -> AND .)
    ID              reduce using rule 96 (log -> AND .)
    CTE_I           reduce using rule 96 (log -> AND .)
    CTE_F           reduce using rule 96 (log -> AND .)
    CTE_S           reduce using rule 96 (log -> AND .)
    TRUE            reduce using rule 96 (log -> AND .)
    FALSE           reduce using rule 96 (log -> AND .)


state 120

    (78) exr -> ex rel . exr resrel
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    ex                             shift and go to state 87
    exr                            shift and go to state 154
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 121

    (89) rel -> LOWERTHAN .

    LPAREN          reduce using rule 89 (rel -> LOWERTHAN .)
    PLUS            reduce using rule 89 (rel -> LOWERTHAN .)
    MINUS           reduce using rule 89 (rel -> LOWERTHAN .)
    ID              reduce using rule 89 (rel -> LOWERTHAN .)
    CTE_I           reduce using rule 89 (rel -> LOWERTHAN .)
    CTE_F           reduce using rule 89 (rel -> LOWERTHAN .)
    CTE_S           reduce using rule 89 (rel -> LOWERTHAN .)
    TRUE            reduce using rule 89 (rel -> LOWERTHAN .)
    FALSE           reduce using rule 89 (rel -> LOWERTHAN .)


state 122

    (90) rel -> MORETHAN .

    LPAREN          reduce using rule 90 (rel -> MORETHAN .)
    PLUS            reduce using rule 90 (rel -> MORETHAN .)
    MINUS           reduce using rule 90 (rel -> MORETHAN .)
    ID              reduce using rule 90 (rel -> MORETHAN .)
    CTE_I           reduce using rule 90 (rel -> MORETHAN .)
    CTE_F           reduce using rule 90 (rel -> MORETHAN .)
    CTE_S           reduce using rule 90 (rel -> MORETHAN .)
    TRUE            reduce using rule 90 (rel -> MORETHAN .)
    FALSE           reduce using rule 90 (rel -> MORETHAN .)


state 123

    (91) rel -> LOWEREQ .

    LPAREN          reduce using rule 91 (rel -> LOWEREQ .)
    PLUS            reduce using rule 91 (rel -> LOWEREQ .)
    MINUS           reduce using rule 91 (rel -> LOWEREQ .)
    ID              reduce using rule 91 (rel -> LOWEREQ .)
    CTE_I           reduce using rule 91 (rel -> LOWEREQ .)
    CTE_F           reduce using rule 91 (rel -> LOWEREQ .)
    CTE_S           reduce using rule 91 (rel -> LOWEREQ .)
    TRUE            reduce using rule 91 (rel -> LOWEREQ .)
    FALSE           reduce using rule 91 (rel -> LOWEREQ .)


state 124

    (92) rel -> MOREEQ .

    LPAREN          reduce using rule 92 (rel -> MOREEQ .)
    PLUS            reduce using rule 92 (rel -> MOREEQ .)
    MINUS           reduce using rule 92 (rel -> MOREEQ .)
    ID              reduce using rule 92 (rel -> MOREEQ .)
    CTE_I           reduce using rule 92 (rel -> MOREEQ .)
    CTE_F           reduce using rule 92 (rel -> MOREEQ .)
    CTE_S           reduce using rule 92 (rel -> MOREEQ .)
    TRUE            reduce using rule 92 (rel -> MOREEQ .)
    FALSE           reduce using rule 92 (rel -> MOREEQ .)


state 125

    (93) rel -> SAME .

    LPAREN          reduce using rule 93 (rel -> SAME .)
    PLUS            reduce using rule 93 (rel -> SAME .)
    MINUS           reduce using rule 93 (rel -> SAME .)
    ID              reduce using rule 93 (rel -> SAME .)
    CTE_I           reduce using rule 93 (rel -> SAME .)
    CTE_F           reduce using rule 93 (rel -> SAME .)
    CTE_S           reduce using rule 93 (rel -> SAME .)
    TRUE            reduce using rule 93 (rel -> SAME .)
    FALSE           reduce using rule 93 (rel -> SAME .)


state 126

    (94) rel -> DIFFERENT .

    LPAREN          reduce using rule 94 (rel -> DIFFERENT .)
    PLUS            reduce using rule 94 (rel -> DIFFERENT .)
    MINUS           reduce using rule 94 (rel -> DIFFERENT .)
    ID              reduce using rule 94 (rel -> DIFFERENT .)
    CTE_I           reduce using rule 94 (rel -> DIFFERENT .)
    CTE_F           reduce using rule 94 (rel -> DIFFERENT .)
    CTE_S           reduce using rule 94 (rel -> DIFFERENT .)
    TRUE            reduce using rule 94 (rel -> DIFFERENT .)
    FALSE           reduce using rule 94 (rel -> DIFFERENT .)


state 127

    (79) ex -> term resterm .
    (80) ex -> term resterm . PLUS pushop ex
    (81) ex -> term resterm . MINUS pushop ex

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LOWERTHAN       reduce using rule 79 (ex -> term resterm .)
    MORETHAN        reduce using rule 79 (ex -> term resterm .)
    LOWEREQ         reduce using rule 79 (ex -> term resterm .)
    MOREEQ          reduce using rule 79 (ex -> term resterm .)
    SAME            reduce using rule 79 (ex -> term resterm .)
    DIFFERENT       reduce using rule 79 (ex -> term resterm .)
    OR              reduce using rule 79 (ex -> term resterm .)
    AND             reduce using rule 79 (ex -> term resterm .)
    RPAREN          reduce using rule 79 (ex -> term resterm .)
    COMA            reduce using rule 79 (ex -> term resterm .)
    RBRACE          reduce using rule 79 (ex -> term resterm .)
    SEMICOLON       reduce using rule 79 (ex -> term resterm .)
    RKEY            reduce using rule 79 (ex -> term resterm .)
    LPAREN          reduce using rule 79 (ex -> term resterm .)
    ID              reduce using rule 79 (ex -> term resterm .)
    CTE_I           reduce using rule 79 (ex -> term resterm .)
    CTE_F           reduce using rule 79 (ex -> term resterm .)
    CTE_S           reduce using rule 79 (ex -> term resterm .)
    TRUE            reduce using rule 79 (ex -> term resterm .)
    FALSE           reduce using rule 79 (ex -> term resterm .)
    PLUS            shift and go to state 155
    MINUS           shift and go to state 156

  ! PLUS            [ reduce using rule 79 (ex -> term resterm .) ]
  ! MINUS           [ reduce using rule 79 (ex -> term resterm .) ]


state 128

    (87) fact -> PLUS var_cte .

    TIMES           reduce using rule 87 (fact -> PLUS var_cte .)
    DIVIDE          reduce using rule 87 (fact -> PLUS var_cte .)
    PLUS            reduce using rule 87 (fact -> PLUS var_cte .)
    MINUS           reduce using rule 87 (fact -> PLUS var_cte .)
    LOWERTHAN       reduce using rule 87 (fact -> PLUS var_cte .)
    MORETHAN        reduce using rule 87 (fact -> PLUS var_cte .)
    LOWEREQ         reduce using rule 87 (fact -> PLUS var_cte .)
    MOREEQ          reduce using rule 87 (fact -> PLUS var_cte .)
    SAME            reduce using rule 87 (fact -> PLUS var_cte .)
    DIFFERENT       reduce using rule 87 (fact -> PLUS var_cte .)
    OR              reduce using rule 87 (fact -> PLUS var_cte .)
    AND             reduce using rule 87 (fact -> PLUS var_cte .)
    RPAREN          reduce using rule 87 (fact -> PLUS var_cte .)
    COMA            reduce using rule 87 (fact -> PLUS var_cte .)
    RBRACE          reduce using rule 87 (fact -> PLUS var_cte .)
    SEMICOLON       reduce using rule 87 (fact -> PLUS var_cte .)
    RKEY            reduce using rule 87 (fact -> PLUS var_cte .)
    LPAREN          reduce using rule 87 (fact -> PLUS var_cte .)
    ID              reduce using rule 87 (fact -> PLUS var_cte .)
    CTE_I           reduce using rule 87 (fact -> PLUS var_cte .)
    CTE_F           reduce using rule 87 (fact -> PLUS var_cte .)
    CTE_S           reduce using rule 87 (fact -> PLUS var_cte .)
    TRUE            reduce using rule 87 (fact -> PLUS var_cte .)
    FALSE           reduce using rule 87 (fact -> PLUS var_cte .)


state 129

    (88) fact -> MINUS var_cte .

    TIMES           reduce using rule 88 (fact -> MINUS var_cte .)
    DIVIDE          reduce using rule 88 (fact -> MINUS var_cte .)
    PLUS            reduce using rule 88 (fact -> MINUS var_cte .)
    MINUS           reduce using rule 88 (fact -> MINUS var_cte .)
    LOWERTHAN       reduce using rule 88 (fact -> MINUS var_cte .)
    MORETHAN        reduce using rule 88 (fact -> MINUS var_cte .)
    LOWEREQ         reduce using rule 88 (fact -> MINUS var_cte .)
    MOREEQ          reduce using rule 88 (fact -> MINUS var_cte .)
    SAME            reduce using rule 88 (fact -> MINUS var_cte .)
    DIFFERENT       reduce using rule 88 (fact -> MINUS var_cte .)
    OR              reduce using rule 88 (fact -> MINUS var_cte .)
    AND             reduce using rule 88 (fact -> MINUS var_cte .)
    RPAREN          reduce using rule 88 (fact -> MINUS var_cte .)
    COMA            reduce using rule 88 (fact -> MINUS var_cte .)
    RBRACE          reduce using rule 88 (fact -> MINUS var_cte .)
    SEMICOLON       reduce using rule 88 (fact -> MINUS var_cte .)
    RKEY            reduce using rule 88 (fact -> MINUS var_cte .)
    LPAREN          reduce using rule 88 (fact -> MINUS var_cte .)
    ID              reduce using rule 88 (fact -> MINUS var_cte .)
    CTE_I           reduce using rule 88 (fact -> MINUS var_cte .)
    CTE_F           reduce using rule 88 (fact -> MINUS var_cte .)
    CTE_S           reduce using rule 88 (fact -> MINUS var_cte .)
    TRUE            reduce using rule 88 (fact -> MINUS var_cte .)
    FALSE           reduce using rule 88 (fact -> MINUS var_cte .)


state 130

    (82) term -> fact resfact .
    (83) term -> fact resfact . TIMES pushop term
    (84) term -> fact resfact . DIVIDE pushop term

    PLUS            reduce using rule 82 (term -> fact resfact .)
    MINUS           reduce using rule 82 (term -> fact resfact .)
    LOWERTHAN       reduce using rule 82 (term -> fact resfact .)
    MORETHAN        reduce using rule 82 (term -> fact resfact .)
    LOWEREQ         reduce using rule 82 (term -> fact resfact .)
    MOREEQ          reduce using rule 82 (term -> fact resfact .)
    SAME            reduce using rule 82 (term -> fact resfact .)
    DIFFERENT       reduce using rule 82 (term -> fact resfact .)
    OR              reduce using rule 82 (term -> fact resfact .)
    AND             reduce using rule 82 (term -> fact resfact .)
    RPAREN          reduce using rule 82 (term -> fact resfact .)
    COMA            reduce using rule 82 (term -> fact resfact .)
    RBRACE          reduce using rule 82 (term -> fact resfact .)
    SEMICOLON       reduce using rule 82 (term -> fact resfact .)
    RKEY            reduce using rule 82 (term -> fact resfact .)
    LPAREN          reduce using rule 82 (term -> fact resfact .)
    ID              reduce using rule 82 (term -> fact resfact .)
    CTE_I           reduce using rule 82 (term -> fact resfact .)
    CTE_F           reduce using rule 82 (term -> fact resfact .)
    CTE_S           reduce using rule 82 (term -> fact resfact .)
    TRUE            reduce using rule 82 (term -> fact resfact .)
    FALSE           reduce using rule 82 (term -> fact resfact .)
    TIMES           shift and go to state 157
    DIVIDE          shift and go to state 158


state 131

    (97) var_cte -> ID pushid .

    TIMES           reduce using rule 97 (var_cte -> ID pushid .)
    DIVIDE          reduce using rule 97 (var_cte -> ID pushid .)
    PLUS            reduce using rule 97 (var_cte -> ID pushid .)
    MINUS           reduce using rule 97 (var_cte -> ID pushid .)
    LOWERTHAN       reduce using rule 97 (var_cte -> ID pushid .)
    MORETHAN        reduce using rule 97 (var_cte -> ID pushid .)
    LOWEREQ         reduce using rule 97 (var_cte -> ID pushid .)
    MOREEQ          reduce using rule 97 (var_cte -> ID pushid .)
    SAME            reduce using rule 97 (var_cte -> ID pushid .)
    DIFFERENT       reduce using rule 97 (var_cte -> ID pushid .)
    OR              reduce using rule 97 (var_cte -> ID pushid .)
    AND             reduce using rule 97 (var_cte -> ID pushid .)
    RPAREN          reduce using rule 97 (var_cte -> ID pushid .)
    COMA            reduce using rule 97 (var_cte -> ID pushid .)
    RBRACE          reduce using rule 97 (var_cte -> ID pushid .)
    SEMICOLON       reduce using rule 97 (var_cte -> ID pushid .)
    RKEY            reduce using rule 97 (var_cte -> ID pushid .)
    LPAREN          reduce using rule 97 (var_cte -> ID pushid .)
    ID              reduce using rule 97 (var_cte -> ID pushid .)
    CTE_I           reduce using rule 97 (var_cte -> ID pushid .)
    CTE_F           reduce using rule 97 (var_cte -> ID pushid .)
    CTE_S           reduce using rule 97 (var_cte -> ID pushid .)
    TRUE            reduce using rule 97 (var_cte -> ID pushid .)
    FALSE           reduce using rule 97 (var_cte -> ID pushid .)


state 132

    (107) fcall -> ID existfunc . LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> ID existfunc . LPAREN RPAREN

    LPAREN          shift and go to state 159


state 133

    (115) vcall -> ID LBRACE . expres RBRACE
    (106) asigvector -> ID LBRACE . ex RBRACE
    (75) expres -> . exr
    (76) expres -> . exr log expres
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expres                         shift and go to state 160
    ex                             shift and go to state 161
    exr                            shift and go to state 86
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 134

    (98) var_cte -> CTE_I pushcte .

    TIMES           reduce using rule 98 (var_cte -> CTE_I pushcte .)
    DIVIDE          reduce using rule 98 (var_cte -> CTE_I pushcte .)
    PLUS            reduce using rule 98 (var_cte -> CTE_I pushcte .)
    MINUS           reduce using rule 98 (var_cte -> CTE_I pushcte .)
    LOWERTHAN       reduce using rule 98 (var_cte -> CTE_I pushcte .)
    MORETHAN        reduce using rule 98 (var_cte -> CTE_I pushcte .)
    LOWEREQ         reduce using rule 98 (var_cte -> CTE_I pushcte .)
    MOREEQ          reduce using rule 98 (var_cte -> CTE_I pushcte .)
    SAME            reduce using rule 98 (var_cte -> CTE_I pushcte .)
    DIFFERENT       reduce using rule 98 (var_cte -> CTE_I pushcte .)
    OR              reduce using rule 98 (var_cte -> CTE_I pushcte .)
    AND             reduce using rule 98 (var_cte -> CTE_I pushcte .)
    RPAREN          reduce using rule 98 (var_cte -> CTE_I pushcte .)
    COMA            reduce using rule 98 (var_cte -> CTE_I pushcte .)
    RBRACE          reduce using rule 98 (var_cte -> CTE_I pushcte .)
    SEMICOLON       reduce using rule 98 (var_cte -> CTE_I pushcte .)
    RKEY            reduce using rule 98 (var_cte -> CTE_I pushcte .)
    LPAREN          reduce using rule 98 (var_cte -> CTE_I pushcte .)
    ID              reduce using rule 98 (var_cte -> CTE_I pushcte .)
    CTE_I           reduce using rule 98 (var_cte -> CTE_I pushcte .)
    CTE_F           reduce using rule 98 (var_cte -> CTE_I pushcte .)
    CTE_S           reduce using rule 98 (var_cte -> CTE_I pushcte .)
    TRUE            reduce using rule 98 (var_cte -> CTE_I pushcte .)
    FALSE           reduce using rule 98 (var_cte -> CTE_I pushcte .)


state 135

    (99) var_cte -> CTE_F pushcte .

    TIMES           reduce using rule 99 (var_cte -> CTE_F pushcte .)
    DIVIDE          reduce using rule 99 (var_cte -> CTE_F pushcte .)
    PLUS            reduce using rule 99 (var_cte -> CTE_F pushcte .)
    MINUS           reduce using rule 99 (var_cte -> CTE_F pushcte .)
    LOWERTHAN       reduce using rule 99 (var_cte -> CTE_F pushcte .)
    MORETHAN        reduce using rule 99 (var_cte -> CTE_F pushcte .)
    LOWEREQ         reduce using rule 99 (var_cte -> CTE_F pushcte .)
    MOREEQ          reduce using rule 99 (var_cte -> CTE_F pushcte .)
    SAME            reduce using rule 99 (var_cte -> CTE_F pushcte .)
    DIFFERENT       reduce using rule 99 (var_cte -> CTE_F pushcte .)
    OR              reduce using rule 99 (var_cte -> CTE_F pushcte .)
    AND             reduce using rule 99 (var_cte -> CTE_F pushcte .)
    RPAREN          reduce using rule 99 (var_cte -> CTE_F pushcte .)
    COMA            reduce using rule 99 (var_cte -> CTE_F pushcte .)
    RBRACE          reduce using rule 99 (var_cte -> CTE_F pushcte .)
    SEMICOLON       reduce using rule 99 (var_cte -> CTE_F pushcte .)
    RKEY            reduce using rule 99 (var_cte -> CTE_F pushcte .)
    LPAREN          reduce using rule 99 (var_cte -> CTE_F pushcte .)
    ID              reduce using rule 99 (var_cte -> CTE_F pushcte .)
    CTE_I           reduce using rule 99 (var_cte -> CTE_F pushcte .)
    CTE_F           reduce using rule 99 (var_cte -> CTE_F pushcte .)
    CTE_S           reduce using rule 99 (var_cte -> CTE_F pushcte .)
    TRUE            reduce using rule 99 (var_cte -> CTE_F pushcte .)
    FALSE           reduce using rule 99 (var_cte -> CTE_F pushcte .)


state 136

    (100) var_cte -> CTE_S pushcte .

    TIMES           reduce using rule 100 (var_cte -> CTE_S pushcte .)
    DIVIDE          reduce using rule 100 (var_cte -> CTE_S pushcte .)
    PLUS            reduce using rule 100 (var_cte -> CTE_S pushcte .)
    MINUS           reduce using rule 100 (var_cte -> CTE_S pushcte .)
    LOWERTHAN       reduce using rule 100 (var_cte -> CTE_S pushcte .)
    MORETHAN        reduce using rule 100 (var_cte -> CTE_S pushcte .)
    LOWEREQ         reduce using rule 100 (var_cte -> CTE_S pushcte .)
    MOREEQ          reduce using rule 100 (var_cte -> CTE_S pushcte .)
    SAME            reduce using rule 100 (var_cte -> CTE_S pushcte .)
    DIFFERENT       reduce using rule 100 (var_cte -> CTE_S pushcte .)
    OR              reduce using rule 100 (var_cte -> CTE_S pushcte .)
    AND             reduce using rule 100 (var_cte -> CTE_S pushcte .)
    RPAREN          reduce using rule 100 (var_cte -> CTE_S pushcte .)
    COMA            reduce using rule 100 (var_cte -> CTE_S pushcte .)
    RBRACE          reduce using rule 100 (var_cte -> CTE_S pushcte .)
    SEMICOLON       reduce using rule 100 (var_cte -> CTE_S pushcte .)
    RKEY            reduce using rule 100 (var_cte -> CTE_S pushcte .)
    LPAREN          reduce using rule 100 (var_cte -> CTE_S pushcte .)
    ID              reduce using rule 100 (var_cte -> CTE_S pushcte .)
    CTE_I           reduce using rule 100 (var_cte -> CTE_S pushcte .)
    CTE_F           reduce using rule 100 (var_cte -> CTE_S pushcte .)
    CTE_S           reduce using rule 100 (var_cte -> CTE_S pushcte .)
    TRUE            reduce using rule 100 (var_cte -> CTE_S pushcte .)
    FALSE           reduce using rule 100 (var_cte -> CTE_S pushcte .)


state 137

    (101) var_cte -> TRUE pushcte .

    TIMES           reduce using rule 101 (var_cte -> TRUE pushcte .)
    DIVIDE          reduce using rule 101 (var_cte -> TRUE pushcte .)
    PLUS            reduce using rule 101 (var_cte -> TRUE pushcte .)
    MINUS           reduce using rule 101 (var_cte -> TRUE pushcte .)
    LOWERTHAN       reduce using rule 101 (var_cte -> TRUE pushcte .)
    MORETHAN        reduce using rule 101 (var_cte -> TRUE pushcte .)
    LOWEREQ         reduce using rule 101 (var_cte -> TRUE pushcte .)
    MOREEQ          reduce using rule 101 (var_cte -> TRUE pushcte .)
    SAME            reduce using rule 101 (var_cte -> TRUE pushcte .)
    DIFFERENT       reduce using rule 101 (var_cte -> TRUE pushcte .)
    OR              reduce using rule 101 (var_cte -> TRUE pushcte .)
    AND             reduce using rule 101 (var_cte -> TRUE pushcte .)
    RPAREN          reduce using rule 101 (var_cte -> TRUE pushcte .)
    COMA            reduce using rule 101 (var_cte -> TRUE pushcte .)
    RBRACE          reduce using rule 101 (var_cte -> TRUE pushcte .)
    SEMICOLON       reduce using rule 101 (var_cte -> TRUE pushcte .)
    RKEY            reduce using rule 101 (var_cte -> TRUE pushcte .)
    LPAREN          reduce using rule 101 (var_cte -> TRUE pushcte .)
    ID              reduce using rule 101 (var_cte -> TRUE pushcte .)
    CTE_I           reduce using rule 101 (var_cte -> TRUE pushcte .)
    CTE_F           reduce using rule 101 (var_cte -> TRUE pushcte .)
    CTE_S           reduce using rule 101 (var_cte -> TRUE pushcte .)
    TRUE            reduce using rule 101 (var_cte -> TRUE pushcte .)
    FALSE           reduce using rule 101 (var_cte -> TRUE pushcte .)


state 138

    (102) var_cte -> FALSE pushcte .

    TIMES           reduce using rule 102 (var_cte -> FALSE pushcte .)
    DIVIDE          reduce using rule 102 (var_cte -> FALSE pushcte .)
    PLUS            reduce using rule 102 (var_cte -> FALSE pushcte .)
    MINUS           reduce using rule 102 (var_cte -> FALSE pushcte .)
    LOWERTHAN       reduce using rule 102 (var_cte -> FALSE pushcte .)
    MORETHAN        reduce using rule 102 (var_cte -> FALSE pushcte .)
    LOWEREQ         reduce using rule 102 (var_cte -> FALSE pushcte .)
    MOREEQ          reduce using rule 102 (var_cte -> FALSE pushcte .)
    SAME            reduce using rule 102 (var_cte -> FALSE pushcte .)
    DIFFERENT       reduce using rule 102 (var_cte -> FALSE pushcte .)
    OR              reduce using rule 102 (var_cte -> FALSE pushcte .)
    AND             reduce using rule 102 (var_cte -> FALSE pushcte .)
    RPAREN          reduce using rule 102 (var_cte -> FALSE pushcte .)
    COMA            reduce using rule 102 (var_cte -> FALSE pushcte .)
    RBRACE          reduce using rule 102 (var_cte -> FALSE pushcte .)
    SEMICOLON       reduce using rule 102 (var_cte -> FALSE pushcte .)
    RKEY            reduce using rule 102 (var_cte -> FALSE pushcte .)
    LPAREN          reduce using rule 102 (var_cte -> FALSE pushcte .)
    ID              reduce using rule 102 (var_cte -> FALSE pushcte .)
    CTE_I           reduce using rule 102 (var_cte -> FALSE pushcte .)
    CTE_F           reduce using rule 102 (var_cte -> FALSE pushcte .)
    CTE_S           reduce using rule 102 (var_cte -> FALSE pushcte .)
    TRUE            reduce using rule 102 (var_cte -> FALSE pushcte .)
    FALSE           reduce using rule 102 (var_cte -> FALSE pushcte .)


state 139

    (70) escrit -> PRINT LPAREN escriti RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 162


state 140

    (72) escriti -> expres COMA . escriti
    (71) escriti -> . expres
    (72) escriti -> . expres COMA escriti
    (75) expres -> . exr
    (76) expres -> . exr log expres
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expres                         shift and go to state 103
    escriti                        shift and go to state 163
    exr                            shift and go to state 86
    ex                             shift and go to state 87
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 141

    (73) ciclo -> WHILE while1 LPAREN expres . RPAREN while2 LKEY bloq RKEY while3

    RPAREN          shift and go to state 164


state 142

    (74) leer -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 165


state 143

    (1) program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc finmain .

    $end            reduce using rule 1 (program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc finmain .)


state 144

    (24) function -> FUNCTION functype ID addInTable LPAREN . funci RPAREN LKEY localvar bloq return expres RKEY
    (25) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY localvar RKEY
    (26) function -> FUNCTION functype ID addInTable LPAREN . funci RPAREN LKEY localvar bloq RKEY
    (27) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY localvar bloq return expres RKEY
    (28) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY localvar bloq RKEY
    (29) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY RKEY
    (36) funci -> . INT ID
    (37) funci -> . INT ID COMA funci
    (38) funci -> . FLOAT ID
    (39) funci -> . FLOAT ID COMA funci
    (40) funci -> . STRING ID
    (41) funci -> . STRING ID COMA funci
    (42) funci -> . BOOL ID
    (43) funci -> . BOOL ID COMA funci
    (44) funci -> . empty
    (116) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 167
    INT             shift and go to state 168
    FLOAT           shift and go to state 169
    STRING          shift and go to state 170
    BOOL            shift and go to state 171

  ! RPAREN          [ reduce using rule 116 (empty -> .) ]

    funci                          shift and go to state 166
    empty                          shift and go to state 172

state 145

    (19) vector -> VECTOR initvector INT ID LBRACE CTE_I RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 173


state 146

    (20) vector -> VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 174


state 147

    (21) vector -> VECTOR initvector STRING ID LBRACE CTE_I RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 175


state 148

    (22) vector -> VECTOR initvector BOOL ID LBRACE CTE_I RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 176


state 149

    (66) asign -> ID pushid EQUAL pushop expres . resolverasignacion SEMICOLON
    (121) resolverasignacion -> .

    SEMICOLON       reduce using rule 121 (resolverasignacion -> .)

    resolverasignacion             shift and go to state 177

state 150

    (67) asign -> ID pushid LBRACE exr RBRACE . EQUAL pushop expres SEMICOLON

    EQUAL           shift and go to state 178


state 151

    (85) fact -> LPAREN pushop expres . RPAREN popop

    RPAREN          shift and go to state 179


state 152

    (68) cond -> IF LPAREN expres RPAREN LKEY . resif bloq RKEY finif
    (69) cond -> IF LPAREN expres RPAREN LKEY . resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (125) resif -> .

    ID              reduce using rule 125 (resif -> .)
    IF              reduce using rule 125 (resif -> .)
    PRINT           reduce using rule 125 (resif -> .)
    WHILE           reduce using rule 125 (resif -> .)
    READ            reduce using rule 125 (resif -> .)

    resif                          shift and go to state 180

state 153

    (76) expres -> exr log expres .

    RPAREN          reduce using rule 76 (expres -> exr log expres .)
    COMA            reduce using rule 76 (expres -> exr log expres .)
    SEMICOLON       reduce using rule 76 (expres -> exr log expres .)
    RBRACE          reduce using rule 76 (expres -> exr log expres .)
    RKEY            reduce using rule 76 (expres -> exr log expres .)
    LPAREN          reduce using rule 76 (expres -> exr log expres .)
    PLUS            reduce using rule 76 (expres -> exr log expres .)
    MINUS           reduce using rule 76 (expres -> exr log expres .)
    ID              reduce using rule 76 (expres -> exr log expres .)
    CTE_I           reduce using rule 76 (expres -> exr log expres .)
    CTE_F           reduce using rule 76 (expres -> exr log expres .)
    CTE_S           reduce using rule 76 (expres -> exr log expres .)
    TRUE            reduce using rule 76 (expres -> exr log expres .)
    FALSE           reduce using rule 76 (expres -> exr log expres .)


state 154

    (78) exr -> ex rel exr . resrel
    (124) resrel -> .

    OR              reduce using rule 124 (resrel -> .)
    AND             reduce using rule 124 (resrel -> .)
    RPAREN          reduce using rule 124 (resrel -> .)
    COMA            reduce using rule 124 (resrel -> .)
    RBRACE          reduce using rule 124 (resrel -> .)
    SEMICOLON       reduce using rule 124 (resrel -> .)
    RKEY            reduce using rule 124 (resrel -> .)
    LPAREN          reduce using rule 124 (resrel -> .)
    PLUS            reduce using rule 124 (resrel -> .)
    MINUS           reduce using rule 124 (resrel -> .)
    ID              reduce using rule 124 (resrel -> .)
    CTE_I           reduce using rule 124 (resrel -> .)
    CTE_F           reduce using rule 124 (resrel -> .)
    CTE_S           reduce using rule 124 (resrel -> .)
    TRUE            reduce using rule 124 (resrel -> .)
    FALSE           reduce using rule 124 (resrel -> .)

    resrel                         shift and go to state 181

state 155

    (80) ex -> term resterm PLUS . pushop ex
    (119) pushop -> .

    LPAREN          reduce using rule 119 (pushop -> .)
    PLUS            reduce using rule 119 (pushop -> .)
    MINUS           reduce using rule 119 (pushop -> .)
    ID              reduce using rule 119 (pushop -> .)
    CTE_I           reduce using rule 119 (pushop -> .)
    CTE_F           reduce using rule 119 (pushop -> .)
    CTE_S           reduce using rule 119 (pushop -> .)
    TRUE            reduce using rule 119 (pushop -> .)
    FALSE           reduce using rule 119 (pushop -> .)

    pushop                         shift and go to state 182

state 156

    (81) ex -> term resterm MINUS . pushop ex
    (119) pushop -> .

    LPAREN          reduce using rule 119 (pushop -> .)
    PLUS            reduce using rule 119 (pushop -> .)
    MINUS           reduce using rule 119 (pushop -> .)
    ID              reduce using rule 119 (pushop -> .)
    CTE_I           reduce using rule 119 (pushop -> .)
    CTE_F           reduce using rule 119 (pushop -> .)
    CTE_S           reduce using rule 119 (pushop -> .)
    TRUE            reduce using rule 119 (pushop -> .)
    FALSE           reduce using rule 119 (pushop -> .)

    pushop                         shift and go to state 183

state 157

    (83) term -> fact resfact TIMES . pushop term
    (119) pushop -> .

    LPAREN          reduce using rule 119 (pushop -> .)
    PLUS            reduce using rule 119 (pushop -> .)
    MINUS           reduce using rule 119 (pushop -> .)
    ID              reduce using rule 119 (pushop -> .)
    CTE_I           reduce using rule 119 (pushop -> .)
    CTE_F           reduce using rule 119 (pushop -> .)
    CTE_S           reduce using rule 119 (pushop -> .)
    TRUE            reduce using rule 119 (pushop -> .)
    FALSE           reduce using rule 119 (pushop -> .)

    pushop                         shift and go to state 184

state 158

    (84) term -> fact resfact DIVIDE . pushop term
    (119) pushop -> .

    LPAREN          reduce using rule 119 (pushop -> .)
    PLUS            reduce using rule 119 (pushop -> .)
    MINUS           reduce using rule 119 (pushop -> .)
    ID              reduce using rule 119 (pushop -> .)
    CTE_I           reduce using rule 119 (pushop -> .)
    CTE_F           reduce using rule 119 (pushop -> .)
    CTE_S           reduce using rule 119 (pushop -> .)
    TRUE            reduce using rule 119 (pushop -> .)
    FALSE           reduce using rule 119 (pushop -> .)

    pushop                         shift and go to state 185

state 159

    (107) fcall -> ID existfunc LPAREN . startera fcall1 RPAREN generateGoSub
    (108) fcall -> ID existfunc LPAREN . RPAREN
    (110) startera -> .

    RPAREN          shift and go to state 187
    LPAREN          reduce using rule 110 (startera -> .)
    PLUS            reduce using rule 110 (startera -> .)
    MINUS           reduce using rule 110 (startera -> .)
    ID              reduce using rule 110 (startera -> .)
    CTE_I           reduce using rule 110 (startera -> .)
    CTE_F           reduce using rule 110 (startera -> .)
    CTE_S           reduce using rule 110 (startera -> .)
    TRUE            reduce using rule 110 (startera -> .)
    FALSE           reduce using rule 110 (startera -> .)

    startera                       shift and go to state 186

state 160

    (115) vcall -> ID LBRACE expres . RBRACE

    RBRACE          shift and go to state 188


state 161

    (106) asigvector -> ID LBRACE ex . RBRACE
    (77) exr -> ex .
    (78) exr -> ex . rel exr resrel
    (89) rel -> . LOWERTHAN
    (90) rel -> . MORETHAN
    (91) rel -> . LOWEREQ
    (92) rel -> . MOREEQ
    (93) rel -> . SAME
    (94) rel -> . DIFFERENT

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 189
    OR              reduce using rule 77 (exr -> ex .)
    AND             reduce using rule 77 (exr -> ex .)
    LOWERTHAN       shift and go to state 121
    MORETHAN        shift and go to state 122
    LOWEREQ         shift and go to state 123
    MOREEQ          shift and go to state 124
    SAME            shift and go to state 125
    DIFFERENT       shift and go to state 126

  ! RBRACE          [ reduce using rule 77 (exr -> ex .) ]

    rel                            shift and go to state 120

state 162

    (70) escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .

    ID              reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    IF              reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    PRINT           reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    WHILE           reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    READ            reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    RKEY            reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    RETURN          reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    LPAREN          reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    PLUS            reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    MINUS           reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    CTE_I           reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    CTE_F           reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    CTE_S           reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    TRUE            reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    FALSE           reduce using rule 70 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)


state 163

    (72) escriti -> expres COMA escriti .

    RPAREN          reduce using rule 72 (escriti -> expres COMA escriti .)


state 164

    (73) ciclo -> WHILE while1 LPAREN expres RPAREN . while2 LKEY bloq RKEY while3
    (129) while2 -> .

    LKEY            reduce using rule 129 (while2 -> .)

    while2                         shift and go to state 190

state 165

    (74) leer -> READ LPAREN ID RPAREN SEMICOLON .

    ID              reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    READ            reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    RKEY            reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    LPAREN          reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    PLUS            reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    MINUS           reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    CTE_I           reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    CTE_F           reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    CTE_S           reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    TRUE            reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    FALSE           reduce using rule 74 (leer -> READ LPAREN ID RPAREN SEMICOLON .)


state 166

    (24) function -> FUNCTION functype ID addInTable LPAREN funci . RPAREN LKEY localvar bloq return expres RKEY
    (26) function -> FUNCTION functype ID addInTable LPAREN funci . RPAREN LKEY localvar bloq RKEY

    RPAREN          shift and go to state 191


state 167

    (25) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY localvar RKEY
    (27) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY localvar bloq return expres RKEY
    (28) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY localvar bloq RKEY
    (29) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY RKEY

    LKEY            shift and go to state 192


state 168

    (36) funci -> INT . ID
    (37) funci -> INT . ID COMA funci

    ID              shift and go to state 193


state 169

    (38) funci -> FLOAT . ID
    (39) funci -> FLOAT . ID COMA funci

    ID              shift and go to state 194


state 170

    (40) funci -> STRING . ID
    (41) funci -> STRING . ID COMA funci

    ID              shift and go to state 195


state 171

    (42) funci -> BOOL . ID
    (43) funci -> BOOL . ID COMA funci

    ID              shift and go to state 196


state 172

    (44) funci -> empty .

    RPAREN          reduce using rule 44 (funci -> empty .)


state 173

    (19) vector -> VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON .

    VAR             reduce using rule 19 (vector -> VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON .)
    VECTOR          reduce using rule 19 (vector -> VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON .)
    MAIN            reduce using rule 19 (vector -> VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON .)
    FUNCTION        reduce using rule 19 (vector -> VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON .)
    RKEY            reduce using rule 19 (vector -> VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON .)
    ID              reduce using rule 19 (vector -> VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON .)
    IF              reduce using rule 19 (vector -> VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON .)
    PRINT           reduce using rule 19 (vector -> VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON .)
    WHILE           reduce using rule 19 (vector -> VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON .)
    READ            reduce using rule 19 (vector -> VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON .)


state 174

    (20) vector -> VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON .

    VAR             reduce using rule 20 (vector -> VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON .)
    VECTOR          reduce using rule 20 (vector -> VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON .)
    MAIN            reduce using rule 20 (vector -> VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON .)
    FUNCTION        reduce using rule 20 (vector -> VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON .)
    RKEY            reduce using rule 20 (vector -> VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON .)
    ID              reduce using rule 20 (vector -> VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON .)
    IF              reduce using rule 20 (vector -> VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON .)
    PRINT           reduce using rule 20 (vector -> VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON .)
    WHILE           reduce using rule 20 (vector -> VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON .)
    READ            reduce using rule 20 (vector -> VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON .)


state 175

    (21) vector -> VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON .

    VAR             reduce using rule 21 (vector -> VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON .)
    VECTOR          reduce using rule 21 (vector -> VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON .)
    MAIN            reduce using rule 21 (vector -> VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON .)
    FUNCTION        reduce using rule 21 (vector -> VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON .)
    RKEY            reduce using rule 21 (vector -> VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON .)
    ID              reduce using rule 21 (vector -> VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON .)
    IF              reduce using rule 21 (vector -> VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON .)
    PRINT           reduce using rule 21 (vector -> VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON .)
    WHILE           reduce using rule 21 (vector -> VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON .)
    READ            reduce using rule 21 (vector -> VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON .)


state 176

    (22) vector -> VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON .

    VAR             reduce using rule 22 (vector -> VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON .)
    VECTOR          reduce using rule 22 (vector -> VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON .)
    MAIN            reduce using rule 22 (vector -> VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON .)
    FUNCTION        reduce using rule 22 (vector -> VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON .)
    RKEY            reduce using rule 22 (vector -> VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON .)
    ID              reduce using rule 22 (vector -> VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON .)
    IF              reduce using rule 22 (vector -> VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON .)
    PRINT           reduce using rule 22 (vector -> VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON .)
    WHILE           reduce using rule 22 (vector -> VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON .)
    READ            reduce using rule 22 (vector -> VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON .)


state 177

    (66) asign -> ID pushid EQUAL pushop expres resolverasignacion . SEMICOLON

    SEMICOLON       shift and go to state 197


state 178

    (67) asign -> ID pushid LBRACE exr RBRACE EQUAL . pushop expres SEMICOLON
    (119) pushop -> .

    LPAREN          reduce using rule 119 (pushop -> .)
    PLUS            reduce using rule 119 (pushop -> .)
    MINUS           reduce using rule 119 (pushop -> .)
    ID              reduce using rule 119 (pushop -> .)
    CTE_I           reduce using rule 119 (pushop -> .)
    CTE_F           reduce using rule 119 (pushop -> .)
    CTE_S           reduce using rule 119 (pushop -> .)
    TRUE            reduce using rule 119 (pushop -> .)
    FALSE           reduce using rule 119 (pushop -> .)

    pushop                         shift and go to state 198

state 179

    (85) fact -> LPAREN pushop expres RPAREN . popop
    (120) popop -> .

    TIMES           reduce using rule 120 (popop -> .)
    DIVIDE          reduce using rule 120 (popop -> .)
    PLUS            reduce using rule 120 (popop -> .)
    MINUS           reduce using rule 120 (popop -> .)
    LOWERTHAN       reduce using rule 120 (popop -> .)
    MORETHAN        reduce using rule 120 (popop -> .)
    LOWEREQ         reduce using rule 120 (popop -> .)
    MOREEQ          reduce using rule 120 (popop -> .)
    SAME            reduce using rule 120 (popop -> .)
    DIFFERENT       reduce using rule 120 (popop -> .)
    OR              reduce using rule 120 (popop -> .)
    AND             reduce using rule 120 (popop -> .)
    RPAREN          reduce using rule 120 (popop -> .)
    COMA            reduce using rule 120 (popop -> .)
    RBRACE          reduce using rule 120 (popop -> .)
    SEMICOLON       reduce using rule 120 (popop -> .)
    RKEY            reduce using rule 120 (popop -> .)
    LPAREN          reduce using rule 120 (popop -> .)
    ID              reduce using rule 120 (popop -> .)
    CTE_I           reduce using rule 120 (popop -> .)
    CTE_F           reduce using rule 120 (popop -> .)
    CTE_S           reduce using rule 120 (popop -> .)
    TRUE            reduce using rule 120 (popop -> .)
    FALSE           reduce using rule 120 (popop -> .)

    popop                          shift and go to state 199

state 180

    (68) cond -> IF LPAREN expres RPAREN LKEY resif . bloq RKEY finif
    (69) cond -> IF LPAREN expres RPAREN LKEY resif . bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (59) bloq -> . estat
    (60) bloq -> . estat bloq
    (61) estat -> . asign
    (62) estat -> . cond
    (63) estat -> . escrit
    (64) estat -> . ciclo
    (65) estat -> . leer
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (73) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (74) leer -> . READ LPAREN ID RPAREN SEMICOLON

    ID              shift and go to state 44
    IF              shift and go to state 45
    PRINT           shift and go to state 46
    WHILE           shift and go to state 47
    READ            shift and go to state 48

    bloq                           shift and go to state 200
    estat                          shift and go to state 36
    asign                          shift and go to state 39
    cond                           shift and go to state 40
    escrit                         shift and go to state 41
    ciclo                          shift and go to state 42
    leer                           shift and go to state 43

state 181

    (78) exr -> ex rel exr resrel .

    OR              reduce using rule 78 (exr -> ex rel exr resrel .)
    AND             reduce using rule 78 (exr -> ex rel exr resrel .)
    RPAREN          reduce using rule 78 (exr -> ex rel exr resrel .)
    COMA            reduce using rule 78 (exr -> ex rel exr resrel .)
    RBRACE          reduce using rule 78 (exr -> ex rel exr resrel .)
    SEMICOLON       reduce using rule 78 (exr -> ex rel exr resrel .)
    RKEY            reduce using rule 78 (exr -> ex rel exr resrel .)
    LPAREN          reduce using rule 78 (exr -> ex rel exr resrel .)
    PLUS            reduce using rule 78 (exr -> ex rel exr resrel .)
    MINUS           reduce using rule 78 (exr -> ex rel exr resrel .)
    ID              reduce using rule 78 (exr -> ex rel exr resrel .)
    CTE_I           reduce using rule 78 (exr -> ex rel exr resrel .)
    CTE_F           reduce using rule 78 (exr -> ex rel exr resrel .)
    CTE_S           reduce using rule 78 (exr -> ex rel exr resrel .)
    TRUE            reduce using rule 78 (exr -> ex rel exr resrel .)
    FALSE           reduce using rule 78 (exr -> ex rel exr resrel .)


state 182

    (80) ex -> term resterm PLUS pushop . ex
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    term                           shift and go to state 88
    ex                             shift and go to state 201
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 183

    (81) ex -> term resterm MINUS pushop . ex
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    term                           shift and go to state 88
    ex                             shift and go to state 202
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 184

    (83) term -> fact resfact TIMES pushop . term
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    fact                           shift and go to state 91
    term                           shift and go to state 203
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 185

    (84) term -> fact resfact DIVIDE pushop . term
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    fact                           shift and go to state 91
    term                           shift and go to state 204
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 186

    (107) fcall -> ID existfunc LPAREN startera . fcall1 RPAREN generateGoSub
    (111) fcall1 -> . expres generateparam
    (112) fcall1 -> . expres generateparam COMA fcall1
    (75) expres -> . exr
    (76) expres -> . exr log expres
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    fcall1                         shift and go to state 205
    expres                         shift and go to state 206
    exr                            shift and go to state 86
    ex                             shift and go to state 87
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 187

    (108) fcall -> ID existfunc LPAREN RPAREN .

    TIMES           reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    DIVIDE          reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    PLUS            reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    MINUS           reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    LOWERTHAN       reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    MORETHAN        reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    LOWEREQ         reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    MOREEQ          reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    SAME            reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    DIFFERENT       reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    OR              reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    AND             reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    RPAREN          reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    COMA            reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    RBRACE          reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    SEMICOLON       reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    RKEY            reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    LPAREN          reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    ID              reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    CTE_I           reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    CTE_F           reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    CTE_S           reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    TRUE            reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)
    FALSE           reduce using rule 108 (fcall -> ID existfunc LPAREN RPAREN .)


state 188

    (115) vcall -> ID LBRACE expres RBRACE .

    TIMES           reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    DIVIDE          reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    PLUS            reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    MINUS           reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    LOWERTHAN       reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    MORETHAN        reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    LOWEREQ         reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    MOREEQ          reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    SAME            reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    DIFFERENT       reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    OR              reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    AND             reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    RPAREN          reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    COMA            reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    RBRACE          reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    SEMICOLON       reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    RKEY            reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    LPAREN          reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    ID              reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    CTE_I           reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    CTE_F           reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    CTE_S           reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    TRUE            reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)
    FALSE           reduce using rule 115 (vcall -> ID LBRACE expres RBRACE .)


state 189

    (106) asigvector -> ID LBRACE ex RBRACE .

    TIMES           reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    DIVIDE          reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    PLUS            reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    MINUS           reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    LOWERTHAN       reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    MORETHAN        reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    LOWEREQ         reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    MOREEQ          reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    SAME            reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    DIFFERENT       reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    OR              reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    AND             reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    RPAREN          reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    COMA            reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    RBRACE          reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    SEMICOLON       reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    RKEY            reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    LPAREN          reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    ID              reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    CTE_I           reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    CTE_F           reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    CTE_S           reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    TRUE            reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)
    FALSE           reduce using rule 106 (asigvector -> ID LBRACE ex RBRACE .)


state 190

    (73) ciclo -> WHILE while1 LPAREN expres RPAREN while2 . LKEY bloq RKEY while3

    LKEY            shift and go to state 207


state 191

    (24) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN . LKEY localvar bloq return expres RKEY
    (26) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN . LKEY localvar bloq RKEY

    LKEY            shift and go to state 208


state 192

    (25) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . localvar RKEY
    (27) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . localvar bloq return expres RKEY
    (28) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . localvar bloq RKEY
    (29) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . RKEY
    (45) localvar -> . var
    (46) localvar -> . vector
    (47) localvar -> . var localvar
    (48) localvar -> . vector localvar
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON
    (20) vector -> . VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON
    (21) vector -> . VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON
    (22) vector -> . VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            shift and go to state 210
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    localvar                       shift and go to state 209
    var                            shift and go to state 211
    vector                         shift and go to state 212

state 193

    (36) funci -> INT ID .
    (37) funci -> INT ID . COMA funci

    RPAREN          reduce using rule 36 (funci -> INT ID .)
    COMA            shift and go to state 213


state 194

    (38) funci -> FLOAT ID .
    (39) funci -> FLOAT ID . COMA funci

    RPAREN          reduce using rule 38 (funci -> FLOAT ID .)
    COMA            shift and go to state 214


state 195

    (40) funci -> STRING ID .
    (41) funci -> STRING ID . COMA funci

    RPAREN          reduce using rule 40 (funci -> STRING ID .)
    COMA            shift and go to state 215


state 196

    (42) funci -> BOOL ID .
    (43) funci -> BOOL ID . COMA funci

    RPAREN          reduce using rule 42 (funci -> BOOL ID .)
    COMA            shift and go to state 216


state 197

    (66) asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .

    ID              reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    IF              reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    PRINT           reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    WHILE           reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    READ            reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    RKEY            reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    RETURN          reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    LPAREN          reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    PLUS            reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    MINUS           reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    CTE_I           reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    CTE_F           reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    CTE_S           reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    TRUE            reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    FALSE           reduce using rule 66 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)


state 198

    (67) asign -> ID pushid LBRACE exr RBRACE EQUAL pushop . expres SEMICOLON
    (75) expres -> . exr
    (76) expres -> . exr log expres
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exr                            shift and go to state 86
    expres                         shift and go to state 217
    ex                             shift and go to state 87
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 199

    (85) fact -> LPAREN pushop expres RPAREN popop .

    TIMES           reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    DIVIDE          reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    PLUS            reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    MINUS           reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    LOWERTHAN       reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    MORETHAN        reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    LOWEREQ         reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    MOREEQ          reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    SAME            reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    DIFFERENT       reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    OR              reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    AND             reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    RPAREN          reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    COMA            reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    RBRACE          reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    SEMICOLON       reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    RKEY            reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    LPAREN          reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    ID              reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    CTE_I           reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    CTE_F           reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    CTE_S           reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    TRUE            reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)
    FALSE           reduce using rule 85 (fact -> LPAREN pushop expres RPAREN popop .)


state 200

    (68) cond -> IF LPAREN expres RPAREN LKEY resif bloq . RKEY finif
    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq . RKEY ELSE LKEY reselse bloq RKEY finif

    RKEY            shift and go to state 218


state 201

    (80) ex -> term resterm PLUS pushop ex .

    LOWERTHAN       reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    MORETHAN        reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    LOWEREQ         reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    MOREEQ          reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    SAME            reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    DIFFERENT       reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    OR              reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    AND             reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    RPAREN          reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    COMA            reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    RBRACE          reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    SEMICOLON       reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    RKEY            reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    LPAREN          reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    PLUS            reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    MINUS           reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    ID              reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    CTE_I           reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    CTE_F           reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    CTE_S           reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    TRUE            reduce using rule 80 (ex -> term resterm PLUS pushop ex .)
    FALSE           reduce using rule 80 (ex -> term resterm PLUS pushop ex .)


state 202

    (81) ex -> term resterm MINUS pushop ex .

    LOWERTHAN       reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    MORETHAN        reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    LOWEREQ         reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    MOREEQ          reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    SAME            reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    DIFFERENT       reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    OR              reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    AND             reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    RPAREN          reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    COMA            reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    RBRACE          reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    SEMICOLON       reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    RKEY            reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    LPAREN          reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    PLUS            reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    MINUS           reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    ID              reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    CTE_I           reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    CTE_F           reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    CTE_S           reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    TRUE            reduce using rule 81 (ex -> term resterm MINUS pushop ex .)
    FALSE           reduce using rule 81 (ex -> term resterm MINUS pushop ex .)


state 203

    (83) term -> fact resfact TIMES pushop term .

    PLUS            reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    MINUS           reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    LOWERTHAN       reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    MORETHAN        reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    LOWEREQ         reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    MOREEQ          reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    SAME            reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    DIFFERENT       reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    OR              reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    AND             reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    RPAREN          reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    COMA            reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    RBRACE          reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    SEMICOLON       reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    RKEY            reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    LPAREN          reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    ID              reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    CTE_I           reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    CTE_F           reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    CTE_S           reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    TRUE            reduce using rule 83 (term -> fact resfact TIMES pushop term .)
    FALSE           reduce using rule 83 (term -> fact resfact TIMES pushop term .)


state 204

    (84) term -> fact resfact DIVIDE pushop term .

    PLUS            reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    MINUS           reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    LOWERTHAN       reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    MORETHAN        reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    LOWEREQ         reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    MOREEQ          reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    SAME            reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    DIFFERENT       reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    OR              reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    AND             reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    RPAREN          reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    COMA            reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    RBRACE          reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    SEMICOLON       reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    RKEY            reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    LPAREN          reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    ID              reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    CTE_I           reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    CTE_F           reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    CTE_S           reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    TRUE            reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)
    FALSE           reduce using rule 84 (term -> fact resfact DIVIDE pushop term .)


state 205

    (107) fcall -> ID existfunc LPAREN startera fcall1 . RPAREN generateGoSub

    RPAREN          shift and go to state 219


state 206

    (111) fcall1 -> expres . generateparam
    (112) fcall1 -> expres . generateparam COMA fcall1
    (113) generateparam -> .

    COMA            reduce using rule 113 (generateparam -> .)
    RPAREN          reduce using rule 113 (generateparam -> .)

    generateparam                  shift and go to state 220

state 207

    (73) ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY . bloq RKEY while3
    (59) bloq -> . estat
    (60) bloq -> . estat bloq
    (61) estat -> . asign
    (62) estat -> . cond
    (63) estat -> . escrit
    (64) estat -> . ciclo
    (65) estat -> . leer
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (73) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (74) leer -> . READ LPAREN ID RPAREN SEMICOLON

    ID              shift and go to state 44
    IF              shift and go to state 45
    PRINT           shift and go to state 46
    WHILE           shift and go to state 47
    READ            shift and go to state 48

    bloq                           shift and go to state 221
    estat                          shift and go to state 36
    asign                          shift and go to state 39
    cond                           shift and go to state 40
    escrit                         shift and go to state 41
    ciclo                          shift and go to state 42
    leer                           shift and go to state 43

state 208

    (24) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY . localvar bloq return expres RKEY
    (26) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY . localvar bloq RKEY
    (45) localvar -> . var
    (46) localvar -> . vector
    (47) localvar -> . var localvar
    (48) localvar -> . vector localvar
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON
    (20) vector -> . VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON
    (21) vector -> . VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON
    (22) vector -> . VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON

    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    localvar                       shift and go to state 222
    var                            shift and go to state 211
    vector                         shift and go to state 212

state 209

    (25) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar . RKEY
    (27) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar . bloq return expres RKEY
    (28) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar . bloq RKEY
    (59) bloq -> . estat
    (60) bloq -> . estat bloq
    (61) estat -> . asign
    (62) estat -> . cond
    (63) estat -> . escrit
    (64) estat -> . ciclo
    (65) estat -> . leer
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (73) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (74) leer -> . READ LPAREN ID RPAREN SEMICOLON

    RKEY            shift and go to state 223
    ID              shift and go to state 44
    IF              shift and go to state 45
    PRINT           shift and go to state 46
    WHILE           shift and go to state 47
    READ            shift and go to state 48

    bloq                           shift and go to state 224
    estat                          shift and go to state 36
    asign                          shift and go to state 39
    cond                           shift and go to state 40
    escrit                         shift and go to state 41
    ciclo                          shift and go to state 42
    leer                           shift and go to state 43

state 210

    (29) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY .

    FUNCTION        reduce using rule 29 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY .)
    MAIN            reduce using rule 29 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY .)


state 211

    (45) localvar -> var .
    (47) localvar -> var . localvar
    (45) localvar -> . var
    (46) localvar -> . vector
    (47) localvar -> . var localvar
    (48) localvar -> . vector localvar
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON
    (20) vector -> . VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON
    (21) vector -> . VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON
    (22) vector -> . VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            reduce using rule 45 (localvar -> var .)
    ID              reduce using rule 45 (localvar -> var .)
    IF              reduce using rule 45 (localvar -> var .)
    PRINT           reduce using rule 45 (localvar -> var .)
    WHILE           reduce using rule 45 (localvar -> var .)
    READ            reduce using rule 45 (localvar -> var .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    var                            shift and go to state 211
    localvar                       shift and go to state 225
    vector                         shift and go to state 212

state 212

    (46) localvar -> vector .
    (48) localvar -> vector . localvar
    (45) localvar -> . var
    (46) localvar -> . vector
    (47) localvar -> . var localvar
    (48) localvar -> . vector localvar
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR initvector INT ID LBRACE CTE_I RBRACE SEMICOLON
    (20) vector -> . VECTOR initvector FLOAT ID LBRACE CTE_I RBRACE SEMICOLON
    (21) vector -> . VECTOR initvector STRING ID LBRACE CTE_I RBRACE SEMICOLON
    (22) vector -> . VECTOR initvector BOOL ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            reduce using rule 46 (localvar -> vector .)
    ID              reduce using rule 46 (localvar -> vector .)
    IF              reduce using rule 46 (localvar -> vector .)
    PRINT           reduce using rule 46 (localvar -> vector .)
    WHILE           reduce using rule 46 (localvar -> vector .)
    READ            reduce using rule 46 (localvar -> vector .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    vector                         shift and go to state 212
    localvar                       shift and go to state 226
    var                            shift and go to state 211

state 213

    (37) funci -> INT ID COMA . funci
    (36) funci -> . INT ID
    (37) funci -> . INT ID COMA funci
    (38) funci -> . FLOAT ID
    (39) funci -> . FLOAT ID COMA funci
    (40) funci -> . STRING ID
    (41) funci -> . STRING ID COMA funci
    (42) funci -> . BOOL ID
    (43) funci -> . BOOL ID COMA funci
    (44) funci -> . empty
    (116) empty -> .

    INT             shift and go to state 168
    FLOAT           shift and go to state 169
    STRING          shift and go to state 170
    BOOL            shift and go to state 171
    RPAREN          reduce using rule 116 (empty -> .)

    funci                          shift and go to state 227
    empty                          shift and go to state 172

state 214

    (39) funci -> FLOAT ID COMA . funci
    (36) funci -> . INT ID
    (37) funci -> . INT ID COMA funci
    (38) funci -> . FLOAT ID
    (39) funci -> . FLOAT ID COMA funci
    (40) funci -> . STRING ID
    (41) funci -> . STRING ID COMA funci
    (42) funci -> . BOOL ID
    (43) funci -> . BOOL ID COMA funci
    (44) funci -> . empty
    (116) empty -> .

    INT             shift and go to state 168
    FLOAT           shift and go to state 169
    STRING          shift and go to state 170
    BOOL            shift and go to state 171
    RPAREN          reduce using rule 116 (empty -> .)

    funci                          shift and go to state 228
    empty                          shift and go to state 172

state 215

    (41) funci -> STRING ID COMA . funci
    (36) funci -> . INT ID
    (37) funci -> . INT ID COMA funci
    (38) funci -> . FLOAT ID
    (39) funci -> . FLOAT ID COMA funci
    (40) funci -> . STRING ID
    (41) funci -> . STRING ID COMA funci
    (42) funci -> . BOOL ID
    (43) funci -> . BOOL ID COMA funci
    (44) funci -> . empty
    (116) empty -> .

    INT             shift and go to state 168
    FLOAT           shift and go to state 169
    STRING          shift and go to state 170
    BOOL            shift and go to state 171
    RPAREN          reduce using rule 116 (empty -> .)

    funci                          shift and go to state 229
    empty                          shift and go to state 172

state 216

    (43) funci -> BOOL ID COMA . funci
    (36) funci -> . INT ID
    (37) funci -> . INT ID COMA funci
    (38) funci -> . FLOAT ID
    (39) funci -> . FLOAT ID COMA funci
    (40) funci -> . STRING ID
    (41) funci -> . STRING ID COMA funci
    (42) funci -> . BOOL ID
    (43) funci -> . BOOL ID COMA funci
    (44) funci -> . empty
    (116) empty -> .

    INT             shift and go to state 168
    FLOAT           shift and go to state 169
    STRING          shift and go to state 170
    BOOL            shift and go to state 171
    RPAREN          reduce using rule 116 (empty -> .)

    funci                          shift and go to state 230
    empty                          shift and go to state 172

state 217

    (67) asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres . SEMICOLON

    SEMICOLON       shift and go to state 231


state 218

    (68) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY . finif
    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY . ELSE LKEY reselse bloq RKEY finif
    (127) finif -> .

    ELSE            shift and go to state 233
    ID              reduce using rule 127 (finif -> .)
    IF              reduce using rule 127 (finif -> .)
    PRINT           reduce using rule 127 (finif -> .)
    WHILE           reduce using rule 127 (finif -> .)
    READ            reduce using rule 127 (finif -> .)
    RKEY            reduce using rule 127 (finif -> .)
    RETURN          reduce using rule 127 (finif -> .)
    LPAREN          reduce using rule 127 (finif -> .)
    PLUS            reduce using rule 127 (finif -> .)
    MINUS           reduce using rule 127 (finif -> .)
    CTE_I           reduce using rule 127 (finif -> .)
    CTE_F           reduce using rule 127 (finif -> .)
    CTE_S           reduce using rule 127 (finif -> .)
    TRUE            reduce using rule 127 (finif -> .)
    FALSE           reduce using rule 127 (finif -> .)

    finif                          shift and go to state 232

state 219

    (107) fcall -> ID existfunc LPAREN startera fcall1 RPAREN . generateGoSub
    (114) generateGoSub -> .

    TIMES           reduce using rule 114 (generateGoSub -> .)
    DIVIDE          reduce using rule 114 (generateGoSub -> .)
    PLUS            reduce using rule 114 (generateGoSub -> .)
    MINUS           reduce using rule 114 (generateGoSub -> .)
    LOWERTHAN       reduce using rule 114 (generateGoSub -> .)
    MORETHAN        reduce using rule 114 (generateGoSub -> .)
    LOWEREQ         reduce using rule 114 (generateGoSub -> .)
    MOREEQ          reduce using rule 114 (generateGoSub -> .)
    SAME            reduce using rule 114 (generateGoSub -> .)
    DIFFERENT       reduce using rule 114 (generateGoSub -> .)
    OR              reduce using rule 114 (generateGoSub -> .)
    AND             reduce using rule 114 (generateGoSub -> .)
    RPAREN          reduce using rule 114 (generateGoSub -> .)
    COMA            reduce using rule 114 (generateGoSub -> .)
    RBRACE          reduce using rule 114 (generateGoSub -> .)
    SEMICOLON       reduce using rule 114 (generateGoSub -> .)
    RKEY            reduce using rule 114 (generateGoSub -> .)
    LPAREN          reduce using rule 114 (generateGoSub -> .)
    ID              reduce using rule 114 (generateGoSub -> .)
    CTE_I           reduce using rule 114 (generateGoSub -> .)
    CTE_F           reduce using rule 114 (generateGoSub -> .)
    CTE_S           reduce using rule 114 (generateGoSub -> .)
    TRUE            reduce using rule 114 (generateGoSub -> .)
    FALSE           reduce using rule 114 (generateGoSub -> .)

    generateGoSub                  shift and go to state 234

state 220

    (111) fcall1 -> expres generateparam .
    (112) fcall1 -> expres generateparam . COMA fcall1

    RPAREN          reduce using rule 111 (fcall1 -> expres generateparam .)
    COMA            shift and go to state 235


state 221

    (73) ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq . RKEY while3

    RKEY            shift and go to state 236


state 222

    (24) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar . bloq return expres RKEY
    (26) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar . bloq RKEY
    (59) bloq -> . estat
    (60) bloq -> . estat bloq
    (61) estat -> . asign
    (62) estat -> . cond
    (63) estat -> . escrit
    (64) estat -> . ciclo
    (65) estat -> . leer
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (73) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (74) leer -> . READ LPAREN ID RPAREN SEMICOLON

    ID              shift and go to state 44
    IF              shift and go to state 45
    PRINT           shift and go to state 46
    WHILE           shift and go to state 47
    READ            shift and go to state 48

    bloq                           shift and go to state 237
    estat                          shift and go to state 36
    asign                          shift and go to state 39
    cond                           shift and go to state 40
    escrit                         shift and go to state 41
    ciclo                          shift and go to state 42
    leer                           shift and go to state 43

state 223

    (25) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY .

    FUNCTION        reduce using rule 25 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY .)
    MAIN            reduce using rule 25 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY .)


state 224

    (27) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq . return expres RKEY
    (28) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq . RKEY
    (49) return -> . RETURN expres
    (50) return -> . empty
    (116) empty -> .

    RKEY            shift and go to state 239
    RETURN          shift and go to state 240
    LPAREN          reduce using rule 116 (empty -> .)
    PLUS            reduce using rule 116 (empty -> .)
    MINUS           reduce using rule 116 (empty -> .)
    ID              reduce using rule 116 (empty -> .)
    CTE_I           reduce using rule 116 (empty -> .)
    CTE_F           reduce using rule 116 (empty -> .)
    CTE_S           reduce using rule 116 (empty -> .)
    TRUE            reduce using rule 116 (empty -> .)
    FALSE           reduce using rule 116 (empty -> .)

    return                         shift and go to state 238
    empty                          shift and go to state 241

state 225

    (47) localvar -> var localvar .

    RKEY            reduce using rule 47 (localvar -> var localvar .)
    ID              reduce using rule 47 (localvar -> var localvar .)
    IF              reduce using rule 47 (localvar -> var localvar .)
    PRINT           reduce using rule 47 (localvar -> var localvar .)
    WHILE           reduce using rule 47 (localvar -> var localvar .)
    READ            reduce using rule 47 (localvar -> var localvar .)


state 226

    (48) localvar -> vector localvar .

    RKEY            reduce using rule 48 (localvar -> vector localvar .)
    ID              reduce using rule 48 (localvar -> vector localvar .)
    IF              reduce using rule 48 (localvar -> vector localvar .)
    PRINT           reduce using rule 48 (localvar -> vector localvar .)
    WHILE           reduce using rule 48 (localvar -> vector localvar .)
    READ            reduce using rule 48 (localvar -> vector localvar .)


state 227

    (37) funci -> INT ID COMA funci .

    RPAREN          reduce using rule 37 (funci -> INT ID COMA funci .)


state 228

    (39) funci -> FLOAT ID COMA funci .

    RPAREN          reduce using rule 39 (funci -> FLOAT ID COMA funci .)


state 229

    (41) funci -> STRING ID COMA funci .

    RPAREN          reduce using rule 41 (funci -> STRING ID COMA funci .)


state 230

    (43) funci -> BOOL ID COMA funci .

    RPAREN          reduce using rule 43 (funci -> BOOL ID COMA funci .)


state 231

    (67) asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .

    ID              reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    IF              reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    PRINT           reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    WHILE           reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    READ            reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    RKEY            reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    RETURN          reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    LPAREN          reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    PLUS            reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    MINUS           reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    CTE_I           reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    CTE_F           reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    CTE_S           reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    TRUE            reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    FALSE           reduce using rule 67 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)


state 232

    (68) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .

    ID              reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    IF              reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    PRINT           reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    WHILE           reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    READ            reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    RKEY            reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    RETURN          reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    LPAREN          reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    PLUS            reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    MINUS           reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    CTE_I           reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    CTE_F           reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    CTE_S           reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    TRUE            reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    FALSE           reduce using rule 68 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)


state 233

    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE . LKEY reselse bloq RKEY finif

    LKEY            shift and go to state 242


state 234

    (107) fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .

    TIMES           reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    DIVIDE          reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    PLUS            reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    MINUS           reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    LOWERTHAN       reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    MORETHAN        reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    LOWEREQ         reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    MOREEQ          reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    SAME            reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    DIFFERENT       reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    OR              reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    AND             reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    RPAREN          reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    COMA            reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    RBRACE          reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    SEMICOLON       reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    RKEY            reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    LPAREN          reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    ID              reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    CTE_I           reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    CTE_F           reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    CTE_S           reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    TRUE            reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)
    FALSE           reduce using rule 107 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN generateGoSub .)


state 235

    (112) fcall1 -> expres generateparam COMA . fcall1
    (111) fcall1 -> . expres generateparam
    (112) fcall1 -> . expres generateparam COMA fcall1
    (75) expres -> . exr
    (76) expres -> . exr log expres
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expres                         shift and go to state 206
    fcall1                         shift and go to state 243
    exr                            shift and go to state 86
    ex                             shift and go to state 87
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 236

    (73) ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY . while3
    (130) while3 -> .

    ID              reduce using rule 130 (while3 -> .)
    IF              reduce using rule 130 (while3 -> .)
    PRINT           reduce using rule 130 (while3 -> .)
    WHILE           reduce using rule 130 (while3 -> .)
    READ            reduce using rule 130 (while3 -> .)
    RKEY            reduce using rule 130 (while3 -> .)
    RETURN          reduce using rule 130 (while3 -> .)
    LPAREN          reduce using rule 130 (while3 -> .)
    PLUS            reduce using rule 130 (while3 -> .)
    MINUS           reduce using rule 130 (while3 -> .)
    CTE_I           reduce using rule 130 (while3 -> .)
    CTE_F           reduce using rule 130 (while3 -> .)
    CTE_S           reduce using rule 130 (while3 -> .)
    TRUE            reduce using rule 130 (while3 -> .)
    FALSE           reduce using rule 130 (while3 -> .)

    while3                         shift and go to state 244

state 237

    (24) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq . return expres RKEY
    (26) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq . RKEY
    (49) return -> . RETURN expres
    (50) return -> . empty
    (116) empty -> .

    RKEY            shift and go to state 246
    RETURN          shift and go to state 240
    LPAREN          reduce using rule 116 (empty -> .)
    PLUS            reduce using rule 116 (empty -> .)
    MINUS           reduce using rule 116 (empty -> .)
    ID              reduce using rule 116 (empty -> .)
    CTE_I           reduce using rule 116 (empty -> .)
    CTE_F           reduce using rule 116 (empty -> .)
    CTE_S           reduce using rule 116 (empty -> .)
    TRUE            reduce using rule 116 (empty -> .)
    FALSE           reduce using rule 116 (empty -> .)

    return                         shift and go to state 245
    empty                          shift and go to state 241

state 238

    (27) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return . expres RKEY
    (75) expres -> . exr
    (76) expres -> . exr log expres
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expres                         shift and go to state 247
    exr                            shift and go to state 86
    ex                             shift and go to state 87
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 239

    (28) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY .

    FUNCTION        reduce using rule 28 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY .)
    MAIN            reduce using rule 28 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY .)


state 240

    (49) return -> RETURN . expres
    (75) expres -> . exr
    (76) expres -> . exr log expres
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expres                         shift and go to state 248
    exr                            shift and go to state 86
    ex                             shift and go to state 87
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 241

    (50) return -> empty .

    LPAREN          reduce using rule 50 (return -> empty .)
    PLUS            reduce using rule 50 (return -> empty .)
    MINUS           reduce using rule 50 (return -> empty .)
    ID              reduce using rule 50 (return -> empty .)
    CTE_I           reduce using rule 50 (return -> empty .)
    CTE_F           reduce using rule 50 (return -> empty .)
    CTE_S           reduce using rule 50 (return -> empty .)
    TRUE            reduce using rule 50 (return -> empty .)
    FALSE           reduce using rule 50 (return -> empty .)


state 242

    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY . reselse bloq RKEY finif
    (126) reselse -> .

    ID              reduce using rule 126 (reselse -> .)
    IF              reduce using rule 126 (reselse -> .)
    PRINT           reduce using rule 126 (reselse -> .)
    WHILE           reduce using rule 126 (reselse -> .)
    READ            reduce using rule 126 (reselse -> .)

    reselse                        shift and go to state 249

state 243

    (112) fcall1 -> expres generateparam COMA fcall1 .

    RPAREN          reduce using rule 112 (fcall1 -> expres generateparam COMA fcall1 .)


state 244

    (73) ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .

    ID              reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    IF              reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    PRINT           reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    WHILE           reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    READ            reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    RKEY            reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    RETURN          reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    LPAREN          reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    PLUS            reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    MINUS           reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    CTE_I           reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    CTE_F           reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    CTE_S           reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    TRUE            reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    FALSE           reduce using rule 73 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)


state 245

    (24) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return . expres RKEY
    (75) expres -> . exr
    (76) expres -> . exr log expres
    (77) exr -> . ex
    (78) exr -> . ex rel exr resrel
    (79) ex -> . term resterm
    (80) ex -> . term resterm PLUS pushop ex
    (81) ex -> . term resterm MINUS pushop ex
    (82) term -> . fact resfact
    (83) term -> . fact resfact TIMES pushop term
    (84) term -> . fact resfact DIVIDE pushop term
    (85) fact -> . LPAREN pushop expres RPAREN popop
    (86) fact -> . var_cte
    (87) fact -> . PLUS var_cte
    (88) fact -> . MINUS var_cte
    (97) var_cte -> . ID pushid
    (98) var_cte -> . CTE_I pushcte
    (99) var_cte -> . CTE_F pushcte
    (100) var_cte -> . CTE_S pushcte
    (101) var_cte -> . TRUE pushcte
    (102) var_cte -> . FALSE pushcte
    (103) var_cte -> . fcall
    (104) var_cte -> . vcall
    (105) var_cte -> . asigvector
    (107) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN generateGoSub
    (108) fcall -> . ID existfunc LPAREN RPAREN
    (115) vcall -> . ID LBRACE expres RBRACE
    (106) asigvector -> . ID LBRACE ex RBRACE

    LPAREN          shift and go to state 84
    PLUS            shift and go to state 89
    MINUS           shift and go to state 90
    ID              shift and go to state 93
    CTE_I           shift and go to state 94
    CTE_F           shift and go to state 95
    CTE_S           shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expres                         shift and go to state 250
    exr                            shift and go to state 86
    ex                             shift and go to state 87
    term                           shift and go to state 88
    fact                           shift and go to state 91
    var_cte                        shift and go to state 92
    fcall                          shift and go to state 99
    vcall                          shift and go to state 100
    asigvector                     shift and go to state 101

state 246

    (26) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY .

    FUNCTION        reduce using rule 26 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY .)
    MAIN            reduce using rule 26 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY .)


state 247

    (27) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres . RKEY

    RKEY            shift and go to state 251


state 248

    (49) return -> RETURN expres .

    LPAREN          reduce using rule 49 (return -> RETURN expres .)
    PLUS            reduce using rule 49 (return -> RETURN expres .)
    MINUS           reduce using rule 49 (return -> RETURN expres .)
    ID              reduce using rule 49 (return -> RETURN expres .)
    CTE_I           reduce using rule 49 (return -> RETURN expres .)
    CTE_F           reduce using rule 49 (return -> RETURN expres .)
    CTE_S           reduce using rule 49 (return -> RETURN expres .)
    TRUE            reduce using rule 49 (return -> RETURN expres .)
    FALSE           reduce using rule 49 (return -> RETURN expres .)


state 249

    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse . bloq RKEY finif
    (59) bloq -> . estat
    (60) bloq -> . estat bloq
    (61) estat -> . asign
    (62) estat -> . cond
    (63) estat -> . escrit
    (64) estat -> . ciclo
    (65) estat -> . leer
    (66) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (67) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (68) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (69) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (70) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (73) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (74) leer -> . READ LPAREN ID RPAREN SEMICOLON

    ID              shift and go to state 44
    IF              shift and go to state 45
    PRINT           shift and go to state 46
    WHILE           shift and go to state 47
    READ            shift and go to state 48

    bloq                           shift and go to state 252
    estat                          shift and go to state 36
    asign                          shift and go to state 39
    cond                           shift and go to state 40
    escrit                         shift and go to state 41
    ciclo                          shift and go to state 42
    leer                           shift and go to state 43

state 250

    (24) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres . RKEY

    RKEY            shift and go to state 253


state 251

    (27) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY .

    FUNCTION        reduce using rule 27 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY .)
    MAIN            reduce using rule 27 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY .)


state 252

    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq . RKEY finif

    RKEY            shift and go to state 254


state 253

    (24) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY .

    FUNCTION        reduce using rule 24 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY .)
    MAIN            reduce using rule 24 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY .)


state 254

    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY . finif
    (127) finif -> .

    ID              reduce using rule 127 (finif -> .)
    IF              reduce using rule 127 (finif -> .)
    PRINT           reduce using rule 127 (finif -> .)
    WHILE           reduce using rule 127 (finif -> .)
    READ            reduce using rule 127 (finif -> .)
    RKEY            reduce using rule 127 (finif -> .)
    RETURN          reduce using rule 127 (finif -> .)
    LPAREN          reduce using rule 127 (finif -> .)
    PLUS            reduce using rule 127 (finif -> .)
    MINUS           reduce using rule 127 (finif -> .)
    CTE_I           reduce using rule 127 (finif -> .)
    CTE_F           reduce using rule 127 (finif -> .)
    CTE_S           reduce using rule 127 (finif -> .)
    TRUE            reduce using rule 127 (finif -> .)
    FALSE           reduce using rule 127 (finif -> .)

    finif                          shift and go to state 255

state 255

    (69) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .

    ID              reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    IF              reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    PRINT           reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    WHILE           reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    READ            reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    RKEY            reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    RETURN          reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    LPAREN          reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    PLUS            reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    MINUS           reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    CTE_I           reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    CTE_F           reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    CTE_S           reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    TRUE            reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    FALSE           reduce using rule 69 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 127 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 127 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 144 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 161 resolved as shift
WARNING: reduce/reduce conflict in state 93 resolved using rule (existfunc -> <empty>)
WARNING: rejected rule (pushid -> <empty>) in state 93
