Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTE_STRING

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID COLON program2 bloq
Rule 2     program -> PROGRAM ID COLON bloq
Rule 3     program -> PROGRAM ID COLON
Rule 4     program2 -> crear program2
Rule 5     program2 -> crear
Rule 6     crear -> var
Rule 7     crear -> vector
Rule 8     crear -> func
Rule 9     var -> VAR tipo ID SEMICOLON
Rule 10    tipo -> INT
Rule 11    tipo -> FLOAT
Rule 12    tipo -> STRING
Rule 13    tipo -> BOOL
Rule 14    vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON
Rule 15    func -> FUNCTION functype ID LPAREN funci RPAREN bloq
Rule 16    func -> FUNCTION functype ID LPAREN funci RPAREN bloq RETURN expres
Rule 17    functype -> tipo
Rule 18    functype -> VOID
Rule 19    funci -> tipo ID
Rule 20    funci -> tipo ID COMA funci
Rule 21    bloq -> LKEY bloqi RKEY
Rule 22    bloqi -> estat
Rule 23    bloqi -> estat bloqi
Rule 24    estat -> asign
Rule 25    estat -> cond
Rule 26    estat -> escrit
Rule 27    estat -> ciclo
Rule 28    estat -> leer
Rule 29    asign -> ID EQUAL expres SEMICOLON
Rule 30    asign -> ID LBRACE exr RBRACE EQUAL expres SEMICOLON
Rule 31    cond -> IF LPAREN expres RPAREN bloq
Rule 32    cond -> IF LPAREN expres RPAREN bloq ELSE bloq
Rule 33    escrit -> PRINT LPAREN escriti RPAREN SEMICOLON
Rule 34    escriti -> expres
Rule 35    escriti -> expres COMA escriti
Rule 36    ciclo -> WHILE LPAREN expres RPAREN bloq
Rule 37    leer -> READ LPAREN ID RPAREN SEMICOLON
Rule 38    expres -> exr
Rule 39    expres -> exr log expres
Rule 40    exr -> ex
Rule 41    exr -> ex rel exr
Rule 42    ex -> term
Rule 43    ex -> term PLUS ex
Rule 44    ex -> term MINUS ex
Rule 45    term -> fact
Rule 46    term -> fact TIMES term
Rule 47    term -> fact DIVIDE term
Rule 48    fact -> LPAREN expres RPAREN
Rule 49    fact -> fact1
Rule 50    fact1 -> PLUS var_cte
Rule 51    fact1 -> MINUS var_cte
Rule 52    fact1 -> var_cte
Rule 53    rel -> LOWERTHAN
Rule 54    rel -> MORETHAN
Rule 55    rel -> LOWEREQ
Rule 56    rel -> MOREEQ
Rule 57    rel -> SAME
Rule 58    rel -> DIFFERENT
Rule 59    log -> OR
Rule 60    log -> AND
Rule 61    var_cte -> ID
Rule 62    var_cte -> CTE_I
Rule 63    var_cte -> CTE_F
Rule 64    var_cte -> CTE_B
Rule 65    var_cte -> CTE_S
Rule 66    var_cte -> fcall
Rule 67    var_cte -> vcall
Rule 68    fcall -> ID LPAREN fcall1 RPAREN
Rule 69    fcall -> ID LPAREN RPAREN
Rule 70    fcall1 -> expres
Rule 71    fcall1 -> expres COMA fcall1
Rule 72    vcall -> ID LBRACE expres RBRACE

Terminals, with rules where they appear

AND                  : 60
BOOL                 : 13
COLON                : 1 2 3
COMA                 : 20 35 71
CTE_B                : 64
CTE_F                : 63
CTE_I                : 14 62
CTE_S                : 65
CTE_STRING           : 
DIFFERENT            : 58
DIVIDE               : 47
ELSE                 : 32
EQUAL                : 29 30
FLOAT                : 11
FUNCTION             : 15 16
ID                   : 1 2 3 9 14 15 16 19 20 29 30 37 61 68 69 72
IF                   : 31 32
INT                  : 10
LBRACE               : 14 30 72
LKEY                 : 21
LOWEREQ              : 55
LOWERTHAN            : 53
LPAREN               : 15 16 31 32 33 36 37 48 68 69
MINUS                : 44 51
MOREEQ               : 56
MORETHAN             : 54
OR                   : 59
PLUS                 : 43 50
PRINT                : 33
PROGRAM              : 1 2 3
RBRACE               : 14 30 72
READ                 : 37
RETURN               : 16
RKEY                 : 21
RPAREN               : 15 16 31 32 33 36 37 48 68 69
SAME                 : 57
SEMICOLON            : 9 14 29 30 33 37
STRING               : 12
TIMES                : 46
VAR                  : 9
VECTOR               : 14
VOID                 : 18
WHILE                : 36
error                : 

Nonterminals, with rules where they appear

asign                : 24
bloq                 : 1 2 15 16 31 32 32 36
bloqi                : 21 23
ciclo                : 27
cond                 : 25
crear                : 4 5
escrit               : 26
escriti              : 33 35
estat                : 22 23
ex                   : 40 41 43 44
expres               : 16 29 30 31 32 34 35 36 39 48 70 71 72
exr                  : 30 38 39 41
fact                 : 45 46 47
fact1                : 49
fcall                : 66
fcall1               : 68 71
func                 : 8
funci                : 15 16 20
functype             : 15 16
leer                 : 28
log                  : 39
program              : 0
program2             : 1 4
rel                  : 41
term                 : 42 43 44 46 47
tipo                 : 9 17 19 20
var                  : 6
var_cte              : 50 51 52
vcall                : 67
vector               : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID COLON program2 bloq
    (2) program -> . PROGRAM ID COLON bloq
    (3) program -> . PROGRAM ID COLON

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID COLON program2 bloq
    (2) program -> PROGRAM . ID COLON bloq
    (3) program -> PROGRAM . ID COLON

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . COLON program2 bloq
    (2) program -> PROGRAM ID . COLON bloq
    (3) program -> PROGRAM ID . COLON

    COLON           shift and go to state 4


state 4

    (1) program -> PROGRAM ID COLON . program2 bloq
    (2) program -> PROGRAM ID COLON . bloq
    (3) program -> PROGRAM ID COLON .
    (4) program2 -> . crear program2
    (5) program2 -> . crear
    (21) bloq -> . LKEY bloqi RKEY
    (6) crear -> . var
    (7) crear -> . vector
    (8) crear -> . func
    (9) var -> . VAR tipo ID SEMICOLON
    (14) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON
    (15) func -> . FUNCTION functype ID LPAREN funci RPAREN bloq
    (16) func -> . FUNCTION functype ID LPAREN funci RPAREN bloq RETURN expres

    $end            reduce using rule 3 (program -> PROGRAM ID COLON .)
    LKEY            shift and go to state 8
    VAR             shift and go to state 12
    VECTOR          shift and go to state 13
    FUNCTION        shift and go to state 14

    program2                       shift and go to state 5
    bloq                           shift and go to state 6
    crear                          shift and go to state 7
    var                            shift and go to state 9
    vector                         shift and go to state 10
    func                           shift and go to state 11

state 5

    (1) program -> PROGRAM ID COLON program2 . bloq
    (21) bloq -> . LKEY bloqi RKEY

    LKEY            shift and go to state 8

    bloq                           shift and go to state 15

state 6

    (2) program -> PROGRAM ID COLON bloq .

    $end            reduce using rule 2 (program -> PROGRAM ID COLON bloq .)


state 7

    (4) program2 -> crear . program2
    (5) program2 -> crear .
    (4) program2 -> . crear program2
    (5) program2 -> . crear
    (6) crear -> . var
    (7) crear -> . vector
    (8) crear -> . func
    (9) var -> . VAR tipo ID SEMICOLON
    (14) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON
    (15) func -> . FUNCTION functype ID LPAREN funci RPAREN bloq
    (16) func -> . FUNCTION functype ID LPAREN funci RPAREN bloq RETURN expres

    LKEY            reduce using rule 5 (program2 -> crear .)
    VAR             shift and go to state 12
    VECTOR          shift and go to state 13
    FUNCTION        shift and go to state 14

    crear                          shift and go to state 7
    program2                       shift and go to state 16
    var                            shift and go to state 9
    vector                         shift and go to state 10
    func                           shift and go to state 11

state 8

    (21) bloq -> LKEY . bloqi RKEY
    (22) bloqi -> . estat
    (23) bloqi -> . estat bloqi
    (24) estat -> . asign
    (25) estat -> . cond
    (26) estat -> . escrit
    (27) estat -> . ciclo
    (28) estat -> . leer
    (29) asign -> . ID EQUAL expres SEMICOLON
    (30) asign -> . ID LBRACE exr RBRACE EQUAL expres SEMICOLON
    (31) cond -> . IF LPAREN expres RPAREN bloq
    (32) cond -> . IF LPAREN expres RPAREN bloq ELSE bloq
    (33) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (36) ciclo -> . WHILE LPAREN expres RPAREN bloq
    (37) leer -> . READ LPAREN ID RPAREN SEMICOLON

    ID              shift and go to state 24
    IF              shift and go to state 25
    PRINT           shift and go to state 26
    WHILE           shift and go to state 27
    READ            shift and go to state 28

    bloqi                          shift and go to state 17
    estat                          shift and go to state 18
    asign                          shift and go to state 19
    cond                           shift and go to state 20
    escrit                         shift and go to state 21
    ciclo                          shift and go to state 22
    leer                           shift and go to state 23

state 9

    (6) crear -> var .

    VAR             reduce using rule 6 (crear -> var .)
    VECTOR          reduce using rule 6 (crear -> var .)
    FUNCTION        reduce using rule 6 (crear -> var .)
    LKEY            reduce using rule 6 (crear -> var .)


state 10

    (7) crear -> vector .

    VAR             reduce using rule 7 (crear -> vector .)
    VECTOR          reduce using rule 7 (crear -> vector .)
    FUNCTION        reduce using rule 7 (crear -> vector .)
    LKEY            reduce using rule 7 (crear -> vector .)


state 11

    (8) crear -> func .

    VAR             reduce using rule 8 (crear -> func .)
    VECTOR          reduce using rule 8 (crear -> func .)
    FUNCTION        reduce using rule 8 (crear -> func .)
    LKEY            reduce using rule 8 (crear -> func .)


state 12

    (9) var -> VAR . tipo ID SEMICOLON
    (10) tipo -> . INT
    (11) tipo -> . FLOAT
    (12) tipo -> . STRING
    (13) tipo -> . BOOL

    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    tipo                           shift and go to state 29

state 13

    (14) vector -> VECTOR . ID LBRACE CTE_I RBRACE SEMICOLON

    ID              shift and go to state 34


state 14

    (15) func -> FUNCTION . functype ID LPAREN funci RPAREN bloq
    (16) func -> FUNCTION . functype ID LPAREN funci RPAREN bloq RETURN expres
    (17) functype -> . tipo
    (18) functype -> . VOID
    (10) tipo -> . INT
    (11) tipo -> . FLOAT
    (12) tipo -> . STRING
    (13) tipo -> . BOOL

    VOID            shift and go to state 37
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    functype                       shift and go to state 35
    tipo                           shift and go to state 36

state 15

    (1) program -> PROGRAM ID COLON program2 bloq .

    $end            reduce using rule 1 (program -> PROGRAM ID COLON program2 bloq .)


state 16

    (4) program2 -> crear program2 .

    LKEY            reduce using rule 4 (program2 -> crear program2 .)


state 17

    (21) bloq -> LKEY bloqi . RKEY

    RKEY            shift and go to state 38


state 18

    (22) bloqi -> estat .
    (23) bloqi -> estat . bloqi
    (22) bloqi -> . estat
    (23) bloqi -> . estat bloqi
    (24) estat -> . asign
    (25) estat -> . cond
    (26) estat -> . escrit
    (27) estat -> . ciclo
    (28) estat -> . leer
    (29) asign -> . ID EQUAL expres SEMICOLON
    (30) asign -> . ID LBRACE exr RBRACE EQUAL expres SEMICOLON
    (31) cond -> . IF LPAREN expres RPAREN bloq
    (32) cond -> . IF LPAREN expres RPAREN bloq ELSE bloq
    (33) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (36) ciclo -> . WHILE LPAREN expres RPAREN bloq
    (37) leer -> . READ LPAREN ID RPAREN SEMICOLON

    RKEY            reduce using rule 22 (bloqi -> estat .)
    ID              shift and go to state 24
    IF              shift and go to state 25
    PRINT           shift and go to state 26
    WHILE           shift and go to state 27
    READ            shift and go to state 28

    estat                          shift and go to state 18
    bloqi                          shift and go to state 39
    asign                          shift and go to state 19
    cond                           shift and go to state 20
    escrit                         shift and go to state 21
    ciclo                          shift and go to state 22
    leer                           shift and go to state 23

state 19

    (24) estat -> asign .

    ID              reduce using rule 24 (estat -> asign .)
    IF              reduce using rule 24 (estat -> asign .)
    PRINT           reduce using rule 24 (estat -> asign .)
    WHILE           reduce using rule 24 (estat -> asign .)
    READ            reduce using rule 24 (estat -> asign .)
    RKEY            reduce using rule 24 (estat -> asign .)


state 20

    (25) estat -> cond .

    ID              reduce using rule 25 (estat -> cond .)
    IF              reduce using rule 25 (estat -> cond .)
    PRINT           reduce using rule 25 (estat -> cond .)
    WHILE           reduce using rule 25 (estat -> cond .)
    READ            reduce using rule 25 (estat -> cond .)
    RKEY            reduce using rule 25 (estat -> cond .)


state 21

    (26) estat -> escrit .

    ID              reduce using rule 26 (estat -> escrit .)
    IF              reduce using rule 26 (estat -> escrit .)
    PRINT           reduce using rule 26 (estat -> escrit .)
    WHILE           reduce using rule 26 (estat -> escrit .)
    READ            reduce using rule 26 (estat -> escrit .)
    RKEY            reduce using rule 26 (estat -> escrit .)


state 22

    (27) estat -> ciclo .

    ID              reduce using rule 27 (estat -> ciclo .)
    IF              reduce using rule 27 (estat -> ciclo .)
    PRINT           reduce using rule 27 (estat -> ciclo .)
    WHILE           reduce using rule 27 (estat -> ciclo .)
    READ            reduce using rule 27 (estat -> ciclo .)
    RKEY            reduce using rule 27 (estat -> ciclo .)


state 23

    (28) estat -> leer .

    ID              reduce using rule 28 (estat -> leer .)
    IF              reduce using rule 28 (estat -> leer .)
    PRINT           reduce using rule 28 (estat -> leer .)
    WHILE           reduce using rule 28 (estat -> leer .)
    READ            reduce using rule 28 (estat -> leer .)
    RKEY            reduce using rule 28 (estat -> leer .)


state 24

    (29) asign -> ID . EQUAL expres SEMICOLON
    (30) asign -> ID . LBRACE exr RBRACE EQUAL expres SEMICOLON

    EQUAL           shift and go to state 40
    LBRACE          shift and go to state 41


state 25

    (31) cond -> IF . LPAREN expres RPAREN bloq
    (32) cond -> IF . LPAREN expres RPAREN bloq ELSE bloq

    LPAREN          shift and go to state 42


state 26

    (33) escrit -> PRINT . LPAREN escriti RPAREN SEMICOLON

    LPAREN          shift and go to state 43


state 27

    (36) ciclo -> WHILE . LPAREN expres RPAREN bloq

    LPAREN          shift and go to state 44


state 28

    (37) leer -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 45


state 29

    (9) var -> VAR tipo . ID SEMICOLON

    ID              shift and go to state 46


state 30

    (10) tipo -> INT .

    ID              reduce using rule 10 (tipo -> INT .)


state 31

    (11) tipo -> FLOAT .

    ID              reduce using rule 11 (tipo -> FLOAT .)


state 32

    (12) tipo -> STRING .

    ID              reduce using rule 12 (tipo -> STRING .)


state 33

    (13) tipo -> BOOL .

    ID              reduce using rule 13 (tipo -> BOOL .)


state 34

    (14) vector -> VECTOR ID . LBRACE CTE_I RBRACE SEMICOLON

    LBRACE          shift and go to state 47


state 35

    (15) func -> FUNCTION functype . ID LPAREN funci RPAREN bloq
    (16) func -> FUNCTION functype . ID LPAREN funci RPAREN bloq RETURN expres

    ID              shift and go to state 48


state 36

    (17) functype -> tipo .

    ID              reduce using rule 17 (functype -> tipo .)


state 37

    (18) functype -> VOID .

    ID              reduce using rule 18 (functype -> VOID .)


state 38

    (21) bloq -> LKEY bloqi RKEY .

    $end            reduce using rule 21 (bloq -> LKEY bloqi RKEY .)
    ELSE            reduce using rule 21 (bloq -> LKEY bloqi RKEY .)
    ID              reduce using rule 21 (bloq -> LKEY bloqi RKEY .)
    IF              reduce using rule 21 (bloq -> LKEY bloqi RKEY .)
    PRINT           reduce using rule 21 (bloq -> LKEY bloqi RKEY .)
    WHILE           reduce using rule 21 (bloq -> LKEY bloqi RKEY .)
    READ            reduce using rule 21 (bloq -> LKEY bloqi RKEY .)
    RKEY            reduce using rule 21 (bloq -> LKEY bloqi RKEY .)
    RETURN          reduce using rule 21 (bloq -> LKEY bloqi RKEY .)
    VAR             reduce using rule 21 (bloq -> LKEY bloqi RKEY .)
    VECTOR          reduce using rule 21 (bloq -> LKEY bloqi RKEY .)
    FUNCTION        reduce using rule 21 (bloq -> LKEY bloqi RKEY .)
    LKEY            reduce using rule 21 (bloq -> LKEY bloqi RKEY .)


state 39

    (23) bloqi -> estat bloqi .

    RKEY            reduce using rule 23 (bloqi -> estat bloqi .)


state 40

    (29) asign -> ID EQUAL . expres SEMICOLON
    (38) expres -> . exr
    (39) expres -> . exr log expres
    (40) exr -> . ex
    (41) exr -> . ex rel exr
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    expres                         shift and go to state 50
    exr                            shift and go to state 51
    ex                             shift and go to state 52
    term                           shift and go to state 53
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 41

    (30) asign -> ID LBRACE . exr RBRACE EQUAL expres SEMICOLON
    (40) exr -> . ex
    (41) exr -> . ex rel exr
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    exr                            shift and go to state 66
    ex                             shift and go to state 52
    term                           shift and go to state 53
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 42

    (31) cond -> IF LPAREN . expres RPAREN bloq
    (32) cond -> IF LPAREN . expres RPAREN bloq ELSE bloq
    (38) expres -> . exr
    (39) expres -> . exr log expres
    (40) exr -> . ex
    (41) exr -> . ex rel exr
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    expres                         shift and go to state 67
    exr                            shift and go to state 51
    ex                             shift and go to state 52
    term                           shift and go to state 53
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 43

    (33) escrit -> PRINT LPAREN . escriti RPAREN SEMICOLON
    (34) escriti -> . expres
    (35) escriti -> . expres COMA escriti
    (38) expres -> . exr
    (39) expres -> . exr log expres
    (40) exr -> . ex
    (41) exr -> . ex rel exr
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    escriti                        shift and go to state 68
    expres                         shift and go to state 69
    exr                            shift and go to state 51
    ex                             shift and go to state 52
    term                           shift and go to state 53
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 44

    (36) ciclo -> WHILE LPAREN . expres RPAREN bloq
    (38) expres -> . exr
    (39) expres -> . exr log expres
    (40) exr -> . ex
    (41) exr -> . ex rel exr
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    expres                         shift and go to state 70
    exr                            shift and go to state 51
    ex                             shift and go to state 52
    term                           shift and go to state 53
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 45

    (37) leer -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 71


state 46

    (9) var -> VAR tipo ID . SEMICOLON

    SEMICOLON       shift and go to state 72


state 47

    (14) vector -> VECTOR ID LBRACE . CTE_I RBRACE SEMICOLON

    CTE_I           shift and go to state 73


state 48

    (15) func -> FUNCTION functype ID . LPAREN funci RPAREN bloq
    (16) func -> FUNCTION functype ID . LPAREN funci RPAREN bloq RETURN expres

    LPAREN          shift and go to state 74


state 49

    (61) var_cte -> ID .
    (68) fcall -> ID . LPAREN fcall1 RPAREN
    (69) fcall -> ID . LPAREN RPAREN
    (72) vcall -> ID . LBRACE expres RBRACE

    TIMES           reduce using rule 61 (var_cte -> ID .)
    DIVIDE          reduce using rule 61 (var_cte -> ID .)
    PLUS            reduce using rule 61 (var_cte -> ID .)
    MINUS           reduce using rule 61 (var_cte -> ID .)
    LOWERTHAN       reduce using rule 61 (var_cte -> ID .)
    MORETHAN        reduce using rule 61 (var_cte -> ID .)
    LOWEREQ         reduce using rule 61 (var_cte -> ID .)
    MOREEQ          reduce using rule 61 (var_cte -> ID .)
    SAME            reduce using rule 61 (var_cte -> ID .)
    DIFFERENT       reduce using rule 61 (var_cte -> ID .)
    OR              reduce using rule 61 (var_cte -> ID .)
    AND             reduce using rule 61 (var_cte -> ID .)
    SEMICOLON       reduce using rule 61 (var_cte -> ID .)
    RBRACE          reduce using rule 61 (var_cte -> ID .)
    RPAREN          reduce using rule 61 (var_cte -> ID .)
    COMA            reduce using rule 61 (var_cte -> ID .)
    VAR             reduce using rule 61 (var_cte -> ID .)
    VECTOR          reduce using rule 61 (var_cte -> ID .)
    FUNCTION        reduce using rule 61 (var_cte -> ID .)
    LKEY            reduce using rule 61 (var_cte -> ID .)
    LPAREN          shift and go to state 75
    LBRACE          shift and go to state 76


state 50

    (29) asign -> ID EQUAL expres . SEMICOLON

    SEMICOLON       shift and go to state 77


state 51

    (38) expres -> exr .
    (39) expres -> exr . log expres
    (59) log -> . OR
    (60) log -> . AND

    SEMICOLON       reduce using rule 38 (expres -> exr .)
    RPAREN          reduce using rule 38 (expres -> exr .)
    COMA            reduce using rule 38 (expres -> exr .)
    RBRACE          reduce using rule 38 (expres -> exr .)
    VAR             reduce using rule 38 (expres -> exr .)
    VECTOR          reduce using rule 38 (expres -> exr .)
    FUNCTION        reduce using rule 38 (expres -> exr .)
    LKEY            reduce using rule 38 (expres -> exr .)
    OR              shift and go to state 79
    AND             shift and go to state 80

    log                            shift and go to state 78

state 52

    (40) exr -> ex .
    (41) exr -> ex . rel exr
    (53) rel -> . LOWERTHAN
    (54) rel -> . MORETHAN
    (55) rel -> . LOWEREQ
    (56) rel -> . MOREEQ
    (57) rel -> . SAME
    (58) rel -> . DIFFERENT

    OR              reduce using rule 40 (exr -> ex .)
    AND             reduce using rule 40 (exr -> ex .)
    SEMICOLON       reduce using rule 40 (exr -> ex .)
    RBRACE          reduce using rule 40 (exr -> ex .)
    RPAREN          reduce using rule 40 (exr -> ex .)
    COMA            reduce using rule 40 (exr -> ex .)
    VAR             reduce using rule 40 (exr -> ex .)
    VECTOR          reduce using rule 40 (exr -> ex .)
    FUNCTION        reduce using rule 40 (exr -> ex .)
    LKEY            reduce using rule 40 (exr -> ex .)
    LOWERTHAN       shift and go to state 82
    MORETHAN        shift and go to state 83
    LOWEREQ         shift and go to state 84
    MOREEQ          shift and go to state 85
    SAME            shift and go to state 86
    DIFFERENT       shift and go to state 87

    rel                            shift and go to state 81

state 53

    (42) ex -> term .
    (43) ex -> term . PLUS ex
    (44) ex -> term . MINUS ex

    LOWERTHAN       reduce using rule 42 (ex -> term .)
    MORETHAN        reduce using rule 42 (ex -> term .)
    LOWEREQ         reduce using rule 42 (ex -> term .)
    MOREEQ          reduce using rule 42 (ex -> term .)
    SAME            reduce using rule 42 (ex -> term .)
    DIFFERENT       reduce using rule 42 (ex -> term .)
    OR              reduce using rule 42 (ex -> term .)
    AND             reduce using rule 42 (ex -> term .)
    SEMICOLON       reduce using rule 42 (ex -> term .)
    RBRACE          reduce using rule 42 (ex -> term .)
    RPAREN          reduce using rule 42 (ex -> term .)
    COMA            reduce using rule 42 (ex -> term .)
    VAR             reduce using rule 42 (ex -> term .)
    VECTOR          reduce using rule 42 (ex -> term .)
    FUNCTION        reduce using rule 42 (ex -> term .)
    LKEY            reduce using rule 42 (ex -> term .)
    PLUS            shift and go to state 88
    MINUS           shift and go to state 89


state 54

    (50) fact1 -> PLUS . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    var_cte                        shift and go to state 90
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 55

    (51) fact1 -> MINUS . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    var_cte                        shift and go to state 91
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 56

    (45) term -> fact .
    (46) term -> fact . TIMES term
    (47) term -> fact . DIVIDE term

    PLUS            reduce using rule 45 (term -> fact .)
    MINUS           reduce using rule 45 (term -> fact .)
    LOWERTHAN       reduce using rule 45 (term -> fact .)
    MORETHAN        reduce using rule 45 (term -> fact .)
    LOWEREQ         reduce using rule 45 (term -> fact .)
    MOREEQ          reduce using rule 45 (term -> fact .)
    SAME            reduce using rule 45 (term -> fact .)
    DIFFERENT       reduce using rule 45 (term -> fact .)
    OR              reduce using rule 45 (term -> fact .)
    AND             reduce using rule 45 (term -> fact .)
    SEMICOLON       reduce using rule 45 (term -> fact .)
    RBRACE          reduce using rule 45 (term -> fact .)
    RPAREN          reduce using rule 45 (term -> fact .)
    COMA            reduce using rule 45 (term -> fact .)
    VAR             reduce using rule 45 (term -> fact .)
    VECTOR          reduce using rule 45 (term -> fact .)
    FUNCTION        reduce using rule 45 (term -> fact .)
    LKEY            reduce using rule 45 (term -> fact .)
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93


state 57

    (48) fact -> LPAREN . expres RPAREN
    (38) expres -> . exr
    (39) expres -> . exr log expres
    (40) exr -> . ex
    (41) exr -> . ex rel exr
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    expres                         shift and go to state 94
    exr                            shift and go to state 51
    ex                             shift and go to state 52
    term                           shift and go to state 53
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 58

    (49) fact -> fact1 .

    TIMES           reduce using rule 49 (fact -> fact1 .)
    DIVIDE          reduce using rule 49 (fact -> fact1 .)
    PLUS            reduce using rule 49 (fact -> fact1 .)
    MINUS           reduce using rule 49 (fact -> fact1 .)
    LOWERTHAN       reduce using rule 49 (fact -> fact1 .)
    MORETHAN        reduce using rule 49 (fact -> fact1 .)
    LOWEREQ         reduce using rule 49 (fact -> fact1 .)
    MOREEQ          reduce using rule 49 (fact -> fact1 .)
    SAME            reduce using rule 49 (fact -> fact1 .)
    DIFFERENT       reduce using rule 49 (fact -> fact1 .)
    OR              reduce using rule 49 (fact -> fact1 .)
    AND             reduce using rule 49 (fact -> fact1 .)
    SEMICOLON       reduce using rule 49 (fact -> fact1 .)
    RBRACE          reduce using rule 49 (fact -> fact1 .)
    RPAREN          reduce using rule 49 (fact -> fact1 .)
    COMA            reduce using rule 49 (fact -> fact1 .)
    VAR             reduce using rule 49 (fact -> fact1 .)
    VECTOR          reduce using rule 49 (fact -> fact1 .)
    FUNCTION        reduce using rule 49 (fact -> fact1 .)
    LKEY            reduce using rule 49 (fact -> fact1 .)


state 59

    (52) fact1 -> var_cte .

    TIMES           reduce using rule 52 (fact1 -> var_cte .)
    DIVIDE          reduce using rule 52 (fact1 -> var_cte .)
    PLUS            reduce using rule 52 (fact1 -> var_cte .)
    MINUS           reduce using rule 52 (fact1 -> var_cte .)
    LOWERTHAN       reduce using rule 52 (fact1 -> var_cte .)
    MORETHAN        reduce using rule 52 (fact1 -> var_cte .)
    LOWEREQ         reduce using rule 52 (fact1 -> var_cte .)
    MOREEQ          reduce using rule 52 (fact1 -> var_cte .)
    SAME            reduce using rule 52 (fact1 -> var_cte .)
    DIFFERENT       reduce using rule 52 (fact1 -> var_cte .)
    OR              reduce using rule 52 (fact1 -> var_cte .)
    AND             reduce using rule 52 (fact1 -> var_cte .)
    SEMICOLON       reduce using rule 52 (fact1 -> var_cte .)
    RBRACE          reduce using rule 52 (fact1 -> var_cte .)
    RPAREN          reduce using rule 52 (fact1 -> var_cte .)
    COMA            reduce using rule 52 (fact1 -> var_cte .)
    VAR             reduce using rule 52 (fact1 -> var_cte .)
    VECTOR          reduce using rule 52 (fact1 -> var_cte .)
    FUNCTION        reduce using rule 52 (fact1 -> var_cte .)
    LKEY            reduce using rule 52 (fact1 -> var_cte .)


state 60

    (62) var_cte -> CTE_I .

    TIMES           reduce using rule 62 (var_cte -> CTE_I .)
    DIVIDE          reduce using rule 62 (var_cte -> CTE_I .)
    PLUS            reduce using rule 62 (var_cte -> CTE_I .)
    MINUS           reduce using rule 62 (var_cte -> CTE_I .)
    LOWERTHAN       reduce using rule 62 (var_cte -> CTE_I .)
    MORETHAN        reduce using rule 62 (var_cte -> CTE_I .)
    LOWEREQ         reduce using rule 62 (var_cte -> CTE_I .)
    MOREEQ          reduce using rule 62 (var_cte -> CTE_I .)
    SAME            reduce using rule 62 (var_cte -> CTE_I .)
    DIFFERENT       reduce using rule 62 (var_cte -> CTE_I .)
    OR              reduce using rule 62 (var_cte -> CTE_I .)
    AND             reduce using rule 62 (var_cte -> CTE_I .)
    SEMICOLON       reduce using rule 62 (var_cte -> CTE_I .)
    RBRACE          reduce using rule 62 (var_cte -> CTE_I .)
    RPAREN          reduce using rule 62 (var_cte -> CTE_I .)
    COMA            reduce using rule 62 (var_cte -> CTE_I .)
    VAR             reduce using rule 62 (var_cte -> CTE_I .)
    VECTOR          reduce using rule 62 (var_cte -> CTE_I .)
    FUNCTION        reduce using rule 62 (var_cte -> CTE_I .)
    LKEY            reduce using rule 62 (var_cte -> CTE_I .)


state 61

    (63) var_cte -> CTE_F .

    TIMES           reduce using rule 63 (var_cte -> CTE_F .)
    DIVIDE          reduce using rule 63 (var_cte -> CTE_F .)
    PLUS            reduce using rule 63 (var_cte -> CTE_F .)
    MINUS           reduce using rule 63 (var_cte -> CTE_F .)
    LOWERTHAN       reduce using rule 63 (var_cte -> CTE_F .)
    MORETHAN        reduce using rule 63 (var_cte -> CTE_F .)
    LOWEREQ         reduce using rule 63 (var_cte -> CTE_F .)
    MOREEQ          reduce using rule 63 (var_cte -> CTE_F .)
    SAME            reduce using rule 63 (var_cte -> CTE_F .)
    DIFFERENT       reduce using rule 63 (var_cte -> CTE_F .)
    OR              reduce using rule 63 (var_cte -> CTE_F .)
    AND             reduce using rule 63 (var_cte -> CTE_F .)
    SEMICOLON       reduce using rule 63 (var_cte -> CTE_F .)
    RBRACE          reduce using rule 63 (var_cte -> CTE_F .)
    RPAREN          reduce using rule 63 (var_cte -> CTE_F .)
    COMA            reduce using rule 63 (var_cte -> CTE_F .)
    VAR             reduce using rule 63 (var_cte -> CTE_F .)
    VECTOR          reduce using rule 63 (var_cte -> CTE_F .)
    FUNCTION        reduce using rule 63 (var_cte -> CTE_F .)
    LKEY            reduce using rule 63 (var_cte -> CTE_F .)


state 62

    (64) var_cte -> CTE_B .

    TIMES           reduce using rule 64 (var_cte -> CTE_B .)
    DIVIDE          reduce using rule 64 (var_cte -> CTE_B .)
    PLUS            reduce using rule 64 (var_cte -> CTE_B .)
    MINUS           reduce using rule 64 (var_cte -> CTE_B .)
    LOWERTHAN       reduce using rule 64 (var_cte -> CTE_B .)
    MORETHAN        reduce using rule 64 (var_cte -> CTE_B .)
    LOWEREQ         reduce using rule 64 (var_cte -> CTE_B .)
    MOREEQ          reduce using rule 64 (var_cte -> CTE_B .)
    SAME            reduce using rule 64 (var_cte -> CTE_B .)
    DIFFERENT       reduce using rule 64 (var_cte -> CTE_B .)
    OR              reduce using rule 64 (var_cte -> CTE_B .)
    AND             reduce using rule 64 (var_cte -> CTE_B .)
    SEMICOLON       reduce using rule 64 (var_cte -> CTE_B .)
    RBRACE          reduce using rule 64 (var_cte -> CTE_B .)
    RPAREN          reduce using rule 64 (var_cte -> CTE_B .)
    COMA            reduce using rule 64 (var_cte -> CTE_B .)
    VAR             reduce using rule 64 (var_cte -> CTE_B .)
    VECTOR          reduce using rule 64 (var_cte -> CTE_B .)
    FUNCTION        reduce using rule 64 (var_cte -> CTE_B .)
    LKEY            reduce using rule 64 (var_cte -> CTE_B .)


state 63

    (65) var_cte -> CTE_S .

    TIMES           reduce using rule 65 (var_cte -> CTE_S .)
    DIVIDE          reduce using rule 65 (var_cte -> CTE_S .)
    PLUS            reduce using rule 65 (var_cte -> CTE_S .)
    MINUS           reduce using rule 65 (var_cte -> CTE_S .)
    LOWERTHAN       reduce using rule 65 (var_cte -> CTE_S .)
    MORETHAN        reduce using rule 65 (var_cte -> CTE_S .)
    LOWEREQ         reduce using rule 65 (var_cte -> CTE_S .)
    MOREEQ          reduce using rule 65 (var_cte -> CTE_S .)
    SAME            reduce using rule 65 (var_cte -> CTE_S .)
    DIFFERENT       reduce using rule 65 (var_cte -> CTE_S .)
    OR              reduce using rule 65 (var_cte -> CTE_S .)
    AND             reduce using rule 65 (var_cte -> CTE_S .)
    SEMICOLON       reduce using rule 65 (var_cte -> CTE_S .)
    RBRACE          reduce using rule 65 (var_cte -> CTE_S .)
    RPAREN          reduce using rule 65 (var_cte -> CTE_S .)
    COMA            reduce using rule 65 (var_cte -> CTE_S .)
    VAR             reduce using rule 65 (var_cte -> CTE_S .)
    VECTOR          reduce using rule 65 (var_cte -> CTE_S .)
    FUNCTION        reduce using rule 65 (var_cte -> CTE_S .)
    LKEY            reduce using rule 65 (var_cte -> CTE_S .)


state 64

    (66) var_cte -> fcall .

    TIMES           reduce using rule 66 (var_cte -> fcall .)
    DIVIDE          reduce using rule 66 (var_cte -> fcall .)
    PLUS            reduce using rule 66 (var_cte -> fcall .)
    MINUS           reduce using rule 66 (var_cte -> fcall .)
    LOWERTHAN       reduce using rule 66 (var_cte -> fcall .)
    MORETHAN        reduce using rule 66 (var_cte -> fcall .)
    LOWEREQ         reduce using rule 66 (var_cte -> fcall .)
    MOREEQ          reduce using rule 66 (var_cte -> fcall .)
    SAME            reduce using rule 66 (var_cte -> fcall .)
    DIFFERENT       reduce using rule 66 (var_cte -> fcall .)
    OR              reduce using rule 66 (var_cte -> fcall .)
    AND             reduce using rule 66 (var_cte -> fcall .)
    SEMICOLON       reduce using rule 66 (var_cte -> fcall .)
    RBRACE          reduce using rule 66 (var_cte -> fcall .)
    RPAREN          reduce using rule 66 (var_cte -> fcall .)
    COMA            reduce using rule 66 (var_cte -> fcall .)
    VAR             reduce using rule 66 (var_cte -> fcall .)
    VECTOR          reduce using rule 66 (var_cte -> fcall .)
    FUNCTION        reduce using rule 66 (var_cte -> fcall .)
    LKEY            reduce using rule 66 (var_cte -> fcall .)


state 65

    (67) var_cte -> vcall .

    TIMES           reduce using rule 67 (var_cte -> vcall .)
    DIVIDE          reduce using rule 67 (var_cte -> vcall .)
    PLUS            reduce using rule 67 (var_cte -> vcall .)
    MINUS           reduce using rule 67 (var_cte -> vcall .)
    LOWERTHAN       reduce using rule 67 (var_cte -> vcall .)
    MORETHAN        reduce using rule 67 (var_cte -> vcall .)
    LOWEREQ         reduce using rule 67 (var_cte -> vcall .)
    MOREEQ          reduce using rule 67 (var_cte -> vcall .)
    SAME            reduce using rule 67 (var_cte -> vcall .)
    DIFFERENT       reduce using rule 67 (var_cte -> vcall .)
    OR              reduce using rule 67 (var_cte -> vcall .)
    AND             reduce using rule 67 (var_cte -> vcall .)
    SEMICOLON       reduce using rule 67 (var_cte -> vcall .)
    RBRACE          reduce using rule 67 (var_cte -> vcall .)
    RPAREN          reduce using rule 67 (var_cte -> vcall .)
    COMA            reduce using rule 67 (var_cte -> vcall .)
    VAR             reduce using rule 67 (var_cte -> vcall .)
    VECTOR          reduce using rule 67 (var_cte -> vcall .)
    FUNCTION        reduce using rule 67 (var_cte -> vcall .)
    LKEY            reduce using rule 67 (var_cte -> vcall .)


state 66

    (30) asign -> ID LBRACE exr . RBRACE EQUAL expres SEMICOLON

    RBRACE          shift and go to state 95


state 67

    (31) cond -> IF LPAREN expres . RPAREN bloq
    (32) cond -> IF LPAREN expres . RPAREN bloq ELSE bloq

    RPAREN          shift and go to state 96


state 68

    (33) escrit -> PRINT LPAREN escriti . RPAREN SEMICOLON

    RPAREN          shift and go to state 97


state 69

    (34) escriti -> expres .
    (35) escriti -> expres . COMA escriti

    RPAREN          reduce using rule 34 (escriti -> expres .)
    COMA            shift and go to state 98


state 70

    (36) ciclo -> WHILE LPAREN expres . RPAREN bloq

    RPAREN          shift and go to state 99


state 71

    (37) leer -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 100


state 72

    (9) var -> VAR tipo ID SEMICOLON .

    VAR             reduce using rule 9 (var -> VAR tipo ID SEMICOLON .)
    VECTOR          reduce using rule 9 (var -> VAR tipo ID SEMICOLON .)
    FUNCTION        reduce using rule 9 (var -> VAR tipo ID SEMICOLON .)
    LKEY            reduce using rule 9 (var -> VAR tipo ID SEMICOLON .)


state 73

    (14) vector -> VECTOR ID LBRACE CTE_I . RBRACE SEMICOLON

    RBRACE          shift and go to state 101


state 74

    (15) func -> FUNCTION functype ID LPAREN . funci RPAREN bloq
    (16) func -> FUNCTION functype ID LPAREN . funci RPAREN bloq RETURN expres
    (19) funci -> . tipo ID
    (20) funci -> . tipo ID COMA funci
    (10) tipo -> . INT
    (11) tipo -> . FLOAT
    (12) tipo -> . STRING
    (13) tipo -> . BOOL

    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    funci                          shift and go to state 102
    tipo                           shift and go to state 103

state 75

    (68) fcall -> ID LPAREN . fcall1 RPAREN
    (69) fcall -> ID LPAREN . RPAREN
    (70) fcall1 -> . expres
    (71) fcall1 -> . expres COMA fcall1
    (38) expres -> . exr
    (39) expres -> . exr log expres
    (40) exr -> . ex
    (41) exr -> . ex rel exr
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    RPAREN          shift and go to state 105
    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    fcall1                         shift and go to state 104
    expres                         shift and go to state 106
    exr                            shift and go to state 51
    ex                             shift and go to state 52
    term                           shift and go to state 53
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 76

    (72) vcall -> ID LBRACE . expres RBRACE
    (38) expres -> . exr
    (39) expres -> . exr log expres
    (40) exr -> . ex
    (41) exr -> . ex rel exr
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    expres                         shift and go to state 107
    exr                            shift and go to state 51
    ex                             shift and go to state 52
    term                           shift and go to state 53
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 77

    (29) asign -> ID EQUAL expres SEMICOLON .

    ID              reduce using rule 29 (asign -> ID EQUAL expres SEMICOLON .)
    IF              reduce using rule 29 (asign -> ID EQUAL expres SEMICOLON .)
    PRINT           reduce using rule 29 (asign -> ID EQUAL expres SEMICOLON .)
    WHILE           reduce using rule 29 (asign -> ID EQUAL expres SEMICOLON .)
    READ            reduce using rule 29 (asign -> ID EQUAL expres SEMICOLON .)
    RKEY            reduce using rule 29 (asign -> ID EQUAL expres SEMICOLON .)


state 78

    (39) expres -> exr log . expres
    (38) expres -> . exr
    (39) expres -> . exr log expres
    (40) exr -> . ex
    (41) exr -> . ex rel exr
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    exr                            shift and go to state 51
    expres                         shift and go to state 108
    ex                             shift and go to state 52
    term                           shift and go to state 53
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 79

    (59) log -> OR .

    LPAREN          reduce using rule 59 (log -> OR .)
    PLUS            reduce using rule 59 (log -> OR .)
    MINUS           reduce using rule 59 (log -> OR .)
    ID              reduce using rule 59 (log -> OR .)
    CTE_I           reduce using rule 59 (log -> OR .)
    CTE_F           reduce using rule 59 (log -> OR .)
    CTE_B           reduce using rule 59 (log -> OR .)
    CTE_S           reduce using rule 59 (log -> OR .)


state 80

    (60) log -> AND .

    LPAREN          reduce using rule 60 (log -> AND .)
    PLUS            reduce using rule 60 (log -> AND .)
    MINUS           reduce using rule 60 (log -> AND .)
    ID              reduce using rule 60 (log -> AND .)
    CTE_I           reduce using rule 60 (log -> AND .)
    CTE_F           reduce using rule 60 (log -> AND .)
    CTE_B           reduce using rule 60 (log -> AND .)
    CTE_S           reduce using rule 60 (log -> AND .)


state 81

    (41) exr -> ex rel . exr
    (40) exr -> . ex
    (41) exr -> . ex rel exr
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    ex                             shift and go to state 52
    exr                            shift and go to state 109
    term                           shift and go to state 53
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 82

    (53) rel -> LOWERTHAN .

    LPAREN          reduce using rule 53 (rel -> LOWERTHAN .)
    PLUS            reduce using rule 53 (rel -> LOWERTHAN .)
    MINUS           reduce using rule 53 (rel -> LOWERTHAN .)
    ID              reduce using rule 53 (rel -> LOWERTHAN .)
    CTE_I           reduce using rule 53 (rel -> LOWERTHAN .)
    CTE_F           reduce using rule 53 (rel -> LOWERTHAN .)
    CTE_B           reduce using rule 53 (rel -> LOWERTHAN .)
    CTE_S           reduce using rule 53 (rel -> LOWERTHAN .)


state 83

    (54) rel -> MORETHAN .

    LPAREN          reduce using rule 54 (rel -> MORETHAN .)
    PLUS            reduce using rule 54 (rel -> MORETHAN .)
    MINUS           reduce using rule 54 (rel -> MORETHAN .)
    ID              reduce using rule 54 (rel -> MORETHAN .)
    CTE_I           reduce using rule 54 (rel -> MORETHAN .)
    CTE_F           reduce using rule 54 (rel -> MORETHAN .)
    CTE_B           reduce using rule 54 (rel -> MORETHAN .)
    CTE_S           reduce using rule 54 (rel -> MORETHAN .)


state 84

    (55) rel -> LOWEREQ .

    LPAREN          reduce using rule 55 (rel -> LOWEREQ .)
    PLUS            reduce using rule 55 (rel -> LOWEREQ .)
    MINUS           reduce using rule 55 (rel -> LOWEREQ .)
    ID              reduce using rule 55 (rel -> LOWEREQ .)
    CTE_I           reduce using rule 55 (rel -> LOWEREQ .)
    CTE_F           reduce using rule 55 (rel -> LOWEREQ .)
    CTE_B           reduce using rule 55 (rel -> LOWEREQ .)
    CTE_S           reduce using rule 55 (rel -> LOWEREQ .)


state 85

    (56) rel -> MOREEQ .

    LPAREN          reduce using rule 56 (rel -> MOREEQ .)
    PLUS            reduce using rule 56 (rel -> MOREEQ .)
    MINUS           reduce using rule 56 (rel -> MOREEQ .)
    ID              reduce using rule 56 (rel -> MOREEQ .)
    CTE_I           reduce using rule 56 (rel -> MOREEQ .)
    CTE_F           reduce using rule 56 (rel -> MOREEQ .)
    CTE_B           reduce using rule 56 (rel -> MOREEQ .)
    CTE_S           reduce using rule 56 (rel -> MOREEQ .)


state 86

    (57) rel -> SAME .

    LPAREN          reduce using rule 57 (rel -> SAME .)
    PLUS            reduce using rule 57 (rel -> SAME .)
    MINUS           reduce using rule 57 (rel -> SAME .)
    ID              reduce using rule 57 (rel -> SAME .)
    CTE_I           reduce using rule 57 (rel -> SAME .)
    CTE_F           reduce using rule 57 (rel -> SAME .)
    CTE_B           reduce using rule 57 (rel -> SAME .)
    CTE_S           reduce using rule 57 (rel -> SAME .)


state 87

    (58) rel -> DIFFERENT .

    LPAREN          reduce using rule 58 (rel -> DIFFERENT .)
    PLUS            reduce using rule 58 (rel -> DIFFERENT .)
    MINUS           reduce using rule 58 (rel -> DIFFERENT .)
    ID              reduce using rule 58 (rel -> DIFFERENT .)
    CTE_I           reduce using rule 58 (rel -> DIFFERENT .)
    CTE_F           reduce using rule 58 (rel -> DIFFERENT .)
    CTE_B           reduce using rule 58 (rel -> DIFFERENT .)
    CTE_S           reduce using rule 58 (rel -> DIFFERENT .)


state 88

    (43) ex -> term PLUS . ex
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    term                           shift and go to state 53
    ex                             shift and go to state 110
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 89

    (44) ex -> term MINUS . ex
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    term                           shift and go to state 53
    ex                             shift and go to state 111
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 90

    (50) fact1 -> PLUS var_cte .

    TIMES           reduce using rule 50 (fact1 -> PLUS var_cte .)
    DIVIDE          reduce using rule 50 (fact1 -> PLUS var_cte .)
    PLUS            reduce using rule 50 (fact1 -> PLUS var_cte .)
    MINUS           reduce using rule 50 (fact1 -> PLUS var_cte .)
    LOWERTHAN       reduce using rule 50 (fact1 -> PLUS var_cte .)
    MORETHAN        reduce using rule 50 (fact1 -> PLUS var_cte .)
    LOWEREQ         reduce using rule 50 (fact1 -> PLUS var_cte .)
    MOREEQ          reduce using rule 50 (fact1 -> PLUS var_cte .)
    SAME            reduce using rule 50 (fact1 -> PLUS var_cte .)
    DIFFERENT       reduce using rule 50 (fact1 -> PLUS var_cte .)
    OR              reduce using rule 50 (fact1 -> PLUS var_cte .)
    AND             reduce using rule 50 (fact1 -> PLUS var_cte .)
    SEMICOLON       reduce using rule 50 (fact1 -> PLUS var_cte .)
    RBRACE          reduce using rule 50 (fact1 -> PLUS var_cte .)
    RPAREN          reduce using rule 50 (fact1 -> PLUS var_cte .)
    COMA            reduce using rule 50 (fact1 -> PLUS var_cte .)
    VAR             reduce using rule 50 (fact1 -> PLUS var_cte .)
    VECTOR          reduce using rule 50 (fact1 -> PLUS var_cte .)
    FUNCTION        reduce using rule 50 (fact1 -> PLUS var_cte .)
    LKEY            reduce using rule 50 (fact1 -> PLUS var_cte .)


state 91

    (51) fact1 -> MINUS var_cte .

    TIMES           reduce using rule 51 (fact1 -> MINUS var_cte .)
    DIVIDE          reduce using rule 51 (fact1 -> MINUS var_cte .)
    PLUS            reduce using rule 51 (fact1 -> MINUS var_cte .)
    MINUS           reduce using rule 51 (fact1 -> MINUS var_cte .)
    LOWERTHAN       reduce using rule 51 (fact1 -> MINUS var_cte .)
    MORETHAN        reduce using rule 51 (fact1 -> MINUS var_cte .)
    LOWEREQ         reduce using rule 51 (fact1 -> MINUS var_cte .)
    MOREEQ          reduce using rule 51 (fact1 -> MINUS var_cte .)
    SAME            reduce using rule 51 (fact1 -> MINUS var_cte .)
    DIFFERENT       reduce using rule 51 (fact1 -> MINUS var_cte .)
    OR              reduce using rule 51 (fact1 -> MINUS var_cte .)
    AND             reduce using rule 51 (fact1 -> MINUS var_cte .)
    SEMICOLON       reduce using rule 51 (fact1 -> MINUS var_cte .)
    RBRACE          reduce using rule 51 (fact1 -> MINUS var_cte .)
    RPAREN          reduce using rule 51 (fact1 -> MINUS var_cte .)
    COMA            reduce using rule 51 (fact1 -> MINUS var_cte .)
    VAR             reduce using rule 51 (fact1 -> MINUS var_cte .)
    VECTOR          reduce using rule 51 (fact1 -> MINUS var_cte .)
    FUNCTION        reduce using rule 51 (fact1 -> MINUS var_cte .)
    LKEY            reduce using rule 51 (fact1 -> MINUS var_cte .)


state 92

    (46) term -> fact TIMES . term
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    fact                           shift and go to state 56
    term                           shift and go to state 112
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 93

    (47) term -> fact DIVIDE . term
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    fact                           shift and go to state 56
    term                           shift and go to state 113
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 94

    (48) fact -> LPAREN expres . RPAREN

    RPAREN          shift and go to state 114


state 95

    (30) asign -> ID LBRACE exr RBRACE . EQUAL expres SEMICOLON

    EQUAL           shift and go to state 115


state 96

    (31) cond -> IF LPAREN expres RPAREN . bloq
    (32) cond -> IF LPAREN expres RPAREN . bloq ELSE bloq
    (21) bloq -> . LKEY bloqi RKEY

    LKEY            shift and go to state 8

    bloq                           shift and go to state 116

state 97

    (33) escrit -> PRINT LPAREN escriti RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 117


state 98

    (35) escriti -> expres COMA . escriti
    (34) escriti -> . expres
    (35) escriti -> . expres COMA escriti
    (38) expres -> . exr
    (39) expres -> . exr log expres
    (40) exr -> . ex
    (41) exr -> . ex rel exr
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    expres                         shift and go to state 69
    escriti                        shift and go to state 118
    exr                            shift and go to state 51
    ex                             shift and go to state 52
    term                           shift and go to state 53
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 99

    (36) ciclo -> WHILE LPAREN expres RPAREN . bloq
    (21) bloq -> . LKEY bloqi RKEY

    LKEY            shift and go to state 8

    bloq                           shift and go to state 119

state 100

    (37) leer -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 120


state 101

    (14) vector -> VECTOR ID LBRACE CTE_I RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 121


state 102

    (15) func -> FUNCTION functype ID LPAREN funci . RPAREN bloq
    (16) func -> FUNCTION functype ID LPAREN funci . RPAREN bloq RETURN expres

    RPAREN          shift and go to state 122


state 103

    (19) funci -> tipo . ID
    (20) funci -> tipo . ID COMA funci

    ID              shift and go to state 123


state 104

    (68) fcall -> ID LPAREN fcall1 . RPAREN

    RPAREN          shift and go to state 124


state 105

    (69) fcall -> ID LPAREN RPAREN .

    TIMES           reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    LOWERTHAN       reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    MORETHAN        reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    LOWEREQ         reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    MOREEQ          reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    SAME            reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    DIFFERENT       reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    OR              reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    AND             reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    COMA            reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    VAR             reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    VECTOR          reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    FUNCTION        reduce using rule 69 (fcall -> ID LPAREN RPAREN .)
    LKEY            reduce using rule 69 (fcall -> ID LPAREN RPAREN .)


state 106

    (70) fcall1 -> expres .
    (71) fcall1 -> expres . COMA fcall1

    RPAREN          reduce using rule 70 (fcall1 -> expres .)
    COMA            shift and go to state 125


state 107

    (72) vcall -> ID LBRACE expres . RBRACE

    RBRACE          shift and go to state 126


state 108

    (39) expres -> exr log expres .

    SEMICOLON       reduce using rule 39 (expres -> exr log expres .)
    RPAREN          reduce using rule 39 (expres -> exr log expres .)
    COMA            reduce using rule 39 (expres -> exr log expres .)
    RBRACE          reduce using rule 39 (expres -> exr log expres .)
    VAR             reduce using rule 39 (expres -> exr log expres .)
    VECTOR          reduce using rule 39 (expres -> exr log expres .)
    FUNCTION        reduce using rule 39 (expres -> exr log expres .)
    LKEY            reduce using rule 39 (expres -> exr log expres .)


state 109

    (41) exr -> ex rel exr .

    OR              reduce using rule 41 (exr -> ex rel exr .)
    AND             reduce using rule 41 (exr -> ex rel exr .)
    SEMICOLON       reduce using rule 41 (exr -> ex rel exr .)
    RBRACE          reduce using rule 41 (exr -> ex rel exr .)
    RPAREN          reduce using rule 41 (exr -> ex rel exr .)
    COMA            reduce using rule 41 (exr -> ex rel exr .)
    VAR             reduce using rule 41 (exr -> ex rel exr .)
    VECTOR          reduce using rule 41 (exr -> ex rel exr .)
    FUNCTION        reduce using rule 41 (exr -> ex rel exr .)
    LKEY            reduce using rule 41 (exr -> ex rel exr .)


state 110

    (43) ex -> term PLUS ex .

    LOWERTHAN       reduce using rule 43 (ex -> term PLUS ex .)
    MORETHAN        reduce using rule 43 (ex -> term PLUS ex .)
    LOWEREQ         reduce using rule 43 (ex -> term PLUS ex .)
    MOREEQ          reduce using rule 43 (ex -> term PLUS ex .)
    SAME            reduce using rule 43 (ex -> term PLUS ex .)
    DIFFERENT       reduce using rule 43 (ex -> term PLUS ex .)
    OR              reduce using rule 43 (ex -> term PLUS ex .)
    AND             reduce using rule 43 (ex -> term PLUS ex .)
    SEMICOLON       reduce using rule 43 (ex -> term PLUS ex .)
    RBRACE          reduce using rule 43 (ex -> term PLUS ex .)
    RPAREN          reduce using rule 43 (ex -> term PLUS ex .)
    COMA            reduce using rule 43 (ex -> term PLUS ex .)
    VAR             reduce using rule 43 (ex -> term PLUS ex .)
    VECTOR          reduce using rule 43 (ex -> term PLUS ex .)
    FUNCTION        reduce using rule 43 (ex -> term PLUS ex .)
    LKEY            reduce using rule 43 (ex -> term PLUS ex .)


state 111

    (44) ex -> term MINUS ex .

    LOWERTHAN       reduce using rule 44 (ex -> term MINUS ex .)
    MORETHAN        reduce using rule 44 (ex -> term MINUS ex .)
    LOWEREQ         reduce using rule 44 (ex -> term MINUS ex .)
    MOREEQ          reduce using rule 44 (ex -> term MINUS ex .)
    SAME            reduce using rule 44 (ex -> term MINUS ex .)
    DIFFERENT       reduce using rule 44 (ex -> term MINUS ex .)
    OR              reduce using rule 44 (ex -> term MINUS ex .)
    AND             reduce using rule 44 (ex -> term MINUS ex .)
    SEMICOLON       reduce using rule 44 (ex -> term MINUS ex .)
    RBRACE          reduce using rule 44 (ex -> term MINUS ex .)
    RPAREN          reduce using rule 44 (ex -> term MINUS ex .)
    COMA            reduce using rule 44 (ex -> term MINUS ex .)
    VAR             reduce using rule 44 (ex -> term MINUS ex .)
    VECTOR          reduce using rule 44 (ex -> term MINUS ex .)
    FUNCTION        reduce using rule 44 (ex -> term MINUS ex .)
    LKEY            reduce using rule 44 (ex -> term MINUS ex .)


state 112

    (46) term -> fact TIMES term .

    PLUS            reduce using rule 46 (term -> fact TIMES term .)
    MINUS           reduce using rule 46 (term -> fact TIMES term .)
    LOWERTHAN       reduce using rule 46 (term -> fact TIMES term .)
    MORETHAN        reduce using rule 46 (term -> fact TIMES term .)
    LOWEREQ         reduce using rule 46 (term -> fact TIMES term .)
    MOREEQ          reduce using rule 46 (term -> fact TIMES term .)
    SAME            reduce using rule 46 (term -> fact TIMES term .)
    DIFFERENT       reduce using rule 46 (term -> fact TIMES term .)
    OR              reduce using rule 46 (term -> fact TIMES term .)
    AND             reduce using rule 46 (term -> fact TIMES term .)
    SEMICOLON       reduce using rule 46 (term -> fact TIMES term .)
    RBRACE          reduce using rule 46 (term -> fact TIMES term .)
    RPAREN          reduce using rule 46 (term -> fact TIMES term .)
    COMA            reduce using rule 46 (term -> fact TIMES term .)
    VAR             reduce using rule 46 (term -> fact TIMES term .)
    VECTOR          reduce using rule 46 (term -> fact TIMES term .)
    FUNCTION        reduce using rule 46 (term -> fact TIMES term .)
    LKEY            reduce using rule 46 (term -> fact TIMES term .)


state 113

    (47) term -> fact DIVIDE term .

    PLUS            reduce using rule 47 (term -> fact DIVIDE term .)
    MINUS           reduce using rule 47 (term -> fact DIVIDE term .)
    LOWERTHAN       reduce using rule 47 (term -> fact DIVIDE term .)
    MORETHAN        reduce using rule 47 (term -> fact DIVIDE term .)
    LOWEREQ         reduce using rule 47 (term -> fact DIVIDE term .)
    MOREEQ          reduce using rule 47 (term -> fact DIVIDE term .)
    SAME            reduce using rule 47 (term -> fact DIVIDE term .)
    DIFFERENT       reduce using rule 47 (term -> fact DIVIDE term .)
    OR              reduce using rule 47 (term -> fact DIVIDE term .)
    AND             reduce using rule 47 (term -> fact DIVIDE term .)
    SEMICOLON       reduce using rule 47 (term -> fact DIVIDE term .)
    RBRACE          reduce using rule 47 (term -> fact DIVIDE term .)
    RPAREN          reduce using rule 47 (term -> fact DIVIDE term .)
    COMA            reduce using rule 47 (term -> fact DIVIDE term .)
    VAR             reduce using rule 47 (term -> fact DIVIDE term .)
    VECTOR          reduce using rule 47 (term -> fact DIVIDE term .)
    FUNCTION        reduce using rule 47 (term -> fact DIVIDE term .)
    LKEY            reduce using rule 47 (term -> fact DIVIDE term .)


state 114

    (48) fact -> LPAREN expres RPAREN .

    TIMES           reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    DIVIDE          reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    PLUS            reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    MINUS           reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    LOWERTHAN       reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    MORETHAN        reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    LOWEREQ         reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    MOREEQ          reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    SAME            reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    DIFFERENT       reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    OR              reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    AND             reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    SEMICOLON       reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    RBRACE          reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    RPAREN          reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    COMA            reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    VAR             reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    VECTOR          reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    FUNCTION        reduce using rule 48 (fact -> LPAREN expres RPAREN .)
    LKEY            reduce using rule 48 (fact -> LPAREN expres RPAREN .)


state 115

    (30) asign -> ID LBRACE exr RBRACE EQUAL . expres SEMICOLON
    (38) expres -> . exr
    (39) expres -> . exr log expres
    (40) exr -> . ex
    (41) exr -> . ex rel exr
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    exr                            shift and go to state 51
    expres                         shift and go to state 127
    ex                             shift and go to state 52
    term                           shift and go to state 53
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 116

    (31) cond -> IF LPAREN expres RPAREN bloq .
    (32) cond -> IF LPAREN expres RPAREN bloq . ELSE bloq

    ID              reduce using rule 31 (cond -> IF LPAREN expres RPAREN bloq .)
    IF              reduce using rule 31 (cond -> IF LPAREN expres RPAREN bloq .)
    PRINT           reduce using rule 31 (cond -> IF LPAREN expres RPAREN bloq .)
    WHILE           reduce using rule 31 (cond -> IF LPAREN expres RPAREN bloq .)
    READ            reduce using rule 31 (cond -> IF LPAREN expres RPAREN bloq .)
    RKEY            reduce using rule 31 (cond -> IF LPAREN expres RPAREN bloq .)
    ELSE            shift and go to state 128


state 117

    (33) escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .

    ID              reduce using rule 33 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    IF              reduce using rule 33 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    PRINT           reduce using rule 33 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    WHILE           reduce using rule 33 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    READ            reduce using rule 33 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    RKEY            reduce using rule 33 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)


state 118

    (35) escriti -> expres COMA escriti .

    RPAREN          reduce using rule 35 (escriti -> expres COMA escriti .)


state 119

    (36) ciclo -> WHILE LPAREN expres RPAREN bloq .

    ID              reduce using rule 36 (ciclo -> WHILE LPAREN expres RPAREN bloq .)
    IF              reduce using rule 36 (ciclo -> WHILE LPAREN expres RPAREN bloq .)
    PRINT           reduce using rule 36 (ciclo -> WHILE LPAREN expres RPAREN bloq .)
    WHILE           reduce using rule 36 (ciclo -> WHILE LPAREN expres RPAREN bloq .)
    READ            reduce using rule 36 (ciclo -> WHILE LPAREN expres RPAREN bloq .)
    RKEY            reduce using rule 36 (ciclo -> WHILE LPAREN expres RPAREN bloq .)


state 120

    (37) leer -> READ LPAREN ID RPAREN SEMICOLON .

    ID              reduce using rule 37 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 37 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 37 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 37 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    READ            reduce using rule 37 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    RKEY            reduce using rule 37 (leer -> READ LPAREN ID RPAREN SEMICOLON .)


state 121

    (14) vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .

    VAR             reduce using rule 14 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    VECTOR          reduce using rule 14 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    FUNCTION        reduce using rule 14 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    LKEY            reduce using rule 14 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)


state 122

    (15) func -> FUNCTION functype ID LPAREN funci RPAREN . bloq
    (16) func -> FUNCTION functype ID LPAREN funci RPAREN . bloq RETURN expres
    (21) bloq -> . LKEY bloqi RKEY

    LKEY            shift and go to state 8

    bloq                           shift and go to state 129

state 123

    (19) funci -> tipo ID .
    (20) funci -> tipo ID . COMA funci

    RPAREN          reduce using rule 19 (funci -> tipo ID .)
    COMA            shift and go to state 130


state 124

    (68) fcall -> ID LPAREN fcall1 RPAREN .

    TIMES           reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    DIVIDE          reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    PLUS            reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    MINUS           reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    LOWERTHAN       reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    MORETHAN        reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    LOWEREQ         reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    MOREEQ          reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    SAME            reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    DIFFERENT       reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    OR              reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    AND             reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    SEMICOLON       reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    RBRACE          reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    RPAREN          reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    COMA            reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    VAR             reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    VECTOR          reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    FUNCTION        reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)
    LKEY            reduce using rule 68 (fcall -> ID LPAREN fcall1 RPAREN .)


state 125

    (71) fcall1 -> expres COMA . fcall1
    (70) fcall1 -> . expres
    (71) fcall1 -> . expres COMA fcall1
    (38) expres -> . exr
    (39) expres -> . exr log expres
    (40) exr -> . ex
    (41) exr -> . ex rel exr
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    expres                         shift and go to state 106
    fcall1                         shift and go to state 131
    exr                            shift and go to state 51
    ex                             shift and go to state 52
    term                           shift and go to state 53
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 126

    (72) vcall -> ID LBRACE expres RBRACE .

    TIMES           reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    DIVIDE          reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    PLUS            reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    MINUS           reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    LOWERTHAN       reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    MORETHAN        reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    LOWEREQ         reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    MOREEQ          reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    SAME            reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    DIFFERENT       reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    OR              reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    AND             reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    SEMICOLON       reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    RBRACE          reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    RPAREN          reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    COMA            reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    VAR             reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    VECTOR          reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    FUNCTION        reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)
    LKEY            reduce using rule 72 (vcall -> ID LBRACE expres RBRACE .)


state 127

    (30) asign -> ID LBRACE exr RBRACE EQUAL expres . SEMICOLON

    SEMICOLON       shift and go to state 132


state 128

    (32) cond -> IF LPAREN expres RPAREN bloq ELSE . bloq
    (21) bloq -> . LKEY bloqi RKEY

    LKEY            shift and go to state 8

    bloq                           shift and go to state 133

state 129

    (15) func -> FUNCTION functype ID LPAREN funci RPAREN bloq .
    (16) func -> FUNCTION functype ID LPAREN funci RPAREN bloq . RETURN expres

    VAR             reduce using rule 15 (func -> FUNCTION functype ID LPAREN funci RPAREN bloq .)
    VECTOR          reduce using rule 15 (func -> FUNCTION functype ID LPAREN funci RPAREN bloq .)
    FUNCTION        reduce using rule 15 (func -> FUNCTION functype ID LPAREN funci RPAREN bloq .)
    LKEY            reduce using rule 15 (func -> FUNCTION functype ID LPAREN funci RPAREN bloq .)
    RETURN          shift and go to state 134


state 130

    (20) funci -> tipo ID COMA . funci
    (19) funci -> . tipo ID
    (20) funci -> . tipo ID COMA funci
    (10) tipo -> . INT
    (11) tipo -> . FLOAT
    (12) tipo -> . STRING
    (13) tipo -> . BOOL

    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    STRING          shift and go to state 32
    BOOL            shift and go to state 33

    tipo                           shift and go to state 103
    funci                          shift and go to state 135

state 131

    (71) fcall1 -> expres COMA fcall1 .

    RPAREN          reduce using rule 71 (fcall1 -> expres COMA fcall1 .)


state 132

    (30) asign -> ID LBRACE exr RBRACE EQUAL expres SEMICOLON .

    ID              reduce using rule 30 (asign -> ID LBRACE exr RBRACE EQUAL expres SEMICOLON .)
    IF              reduce using rule 30 (asign -> ID LBRACE exr RBRACE EQUAL expres SEMICOLON .)
    PRINT           reduce using rule 30 (asign -> ID LBRACE exr RBRACE EQUAL expres SEMICOLON .)
    WHILE           reduce using rule 30 (asign -> ID LBRACE exr RBRACE EQUAL expres SEMICOLON .)
    READ            reduce using rule 30 (asign -> ID LBRACE exr RBRACE EQUAL expres SEMICOLON .)
    RKEY            reduce using rule 30 (asign -> ID LBRACE exr RBRACE EQUAL expres SEMICOLON .)


state 133

    (32) cond -> IF LPAREN expres RPAREN bloq ELSE bloq .

    ID              reduce using rule 32 (cond -> IF LPAREN expres RPAREN bloq ELSE bloq .)
    IF              reduce using rule 32 (cond -> IF LPAREN expres RPAREN bloq ELSE bloq .)
    PRINT           reduce using rule 32 (cond -> IF LPAREN expres RPAREN bloq ELSE bloq .)
    WHILE           reduce using rule 32 (cond -> IF LPAREN expres RPAREN bloq ELSE bloq .)
    READ            reduce using rule 32 (cond -> IF LPAREN expres RPAREN bloq ELSE bloq .)
    RKEY            reduce using rule 32 (cond -> IF LPAREN expres RPAREN bloq ELSE bloq .)


state 134

    (16) func -> FUNCTION functype ID LPAREN funci RPAREN bloq RETURN . expres
    (38) expres -> . exr
    (39) expres -> . exr log expres
    (40) exr -> . ex
    (41) exr -> . ex rel exr
    (42) ex -> . term
    (43) ex -> . term PLUS ex
    (44) ex -> . term MINUS ex
    (45) term -> . fact
    (46) term -> . fact TIMES term
    (47) term -> . fact DIVIDE term
    (48) fact -> . LPAREN expres RPAREN
    (49) fact -> . fact1
    (50) fact1 -> . PLUS var_cte
    (51) fact1 -> . MINUS var_cte
    (52) fact1 -> . var_cte
    (61) var_cte -> . ID
    (62) var_cte -> . CTE_I
    (63) var_cte -> . CTE_F
    (64) var_cte -> . CTE_B
    (65) var_cte -> . CTE_S
    (66) var_cte -> . fcall
    (67) var_cte -> . vcall
    (68) fcall -> . ID LPAREN fcall1 RPAREN
    (69) fcall -> . ID LPAREN RPAREN
    (72) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 57
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    ID              shift and go to state 49
    CTE_I           shift and go to state 60
    CTE_F           shift and go to state 61
    CTE_B           shift and go to state 62
    CTE_S           shift and go to state 63

    expres                         shift and go to state 136
    exr                            shift and go to state 51
    ex                             shift and go to state 52
    term                           shift and go to state 53
    fact                           shift and go to state 56
    fact1                          shift and go to state 58
    var_cte                        shift and go to state 59
    fcall                          shift and go to state 64
    vcall                          shift and go to state 65

state 135

    (20) funci -> tipo ID COMA funci .

    RPAREN          reduce using rule 20 (funci -> tipo ID COMA funci .)


state 136

    (16) func -> FUNCTION functype ID LPAREN funci RPAREN bloq RETURN expres .

    VAR             reduce using rule 16 (func -> FUNCTION functype ID LPAREN funci RPAREN bloq RETURN expres .)
    VECTOR          reduce using rule 16 (func -> FUNCTION functype ID LPAREN funci RPAREN bloq RETURN expres .)
    FUNCTION        reduce using rule 16 (func -> FUNCTION functype ID LPAREN funci RPAREN bloq RETURN expres .)
    LKEY            reduce using rule 16 (func -> FUNCTION functype ID LPAREN funci RPAREN bloq RETURN expres .)

