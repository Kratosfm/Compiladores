Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc finmain
Rule 2     program -> PROGRAM COLON global program2 finglobal MAIN main1 mainc finmain
Rule 3     program -> PROGRAM COLON MAIN main1 mainc finmain
Rule 4     program2 -> crear program2
Rule 5     program2 -> crear
Rule 6     program3 -> function program3
Rule 7     program3 -> function
Rule 8     crear -> var
Rule 9     crear -> vector
Rule 10    global -> <empty>
Rule 11    finglobal -> <empty>
Rule 12    main1 -> <empty>
Rule 13    finmain -> <empty>
Rule 14    var -> VAR tipo ID SEMICOLON
Rule 15    tipo -> INT
Rule 16    tipo -> FLOAT
Rule 17    tipo -> STRING
Rule 18    tipo -> BOOL
Rule 19    vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON
Rule 20    function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
Rule 21    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
Rule 22    function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
Rule 23    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
Rule 24    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
Rule 25    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY
Rule 26    functype -> INT
Rule 27    functype -> FLOAT
Rule 28    functype -> STRING
Rule 29    functype -> BOOL
Rule 30    functype -> VOID
Rule 31    addInTable -> <empty>
Rule 32    funci -> tipo ID
Rule 33    funci -> tipo ID COMA funci
Rule 34    funci -> empty
Rule 35    localvar -> var
Rule 36    localvar -> vector
Rule 37    localvar -> var localvar
Rule 38    localvar -> vector localvar
Rule 39    return -> RETURN expres
Rule 40    return -> empty
Rule 41    mainc -> LKEY RKEY
Rule 42    mainc -> LKEY bloq RKEY
Rule 43    mainc -> LKEY mainc2 bloq RKEY
Rule 44    mainc -> LKEY mainc2 RKEY
Rule 45    mainc2 -> var
Rule 46    mainc2 -> var mainc2
Rule 47    mainc2 -> vector
Rule 48    mainc2 -> vector mainc2
Rule 49    bloq -> estat
Rule 50    bloq -> estat bloq
Rule 51    estat -> asign
Rule 52    estat -> cond
Rule 53    estat -> escrit
Rule 54    estat -> ciclo
Rule 55    estat -> leer
Rule 56    asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
Rule 57    asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
Rule 58    cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY
Rule 59    cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY
Rule 60    cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY
Rule 61    escrit -> PRINT LPAREN escriti RPAREN SEMICOLON
Rule 62    escriti -> expres
Rule 63    escriti -> expres COMA escriti
Rule 64    ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY
Rule 65    leer -> READ LPAREN ID RPAREN SEMICOLON
Rule 66    expres -> exr
Rule 67    expres -> exr log expres
Rule 68    exr -> ex
Rule 69    exr -> ex rel exr resrel
Rule 70    ex -> term resterm
Rule 71    ex -> term resterm PLUS pushop ex
Rule 72    ex -> term resterm MINUS pushop ex
Rule 73    term -> fact resfact
Rule 74    term -> fact resfact TIMES pushop term
Rule 75    term -> fact resfact DIVIDE pushop term
Rule 76    fact -> LPAREN pushop expres RPAREN popop
Rule 77    fact -> var_cte
Rule 78    fact -> PLUS var_cte
Rule 79    fact -> MINUS var_cte
Rule 80    rel -> LOWERTHAN
Rule 81    rel -> MORETHAN
Rule 82    rel -> LOWEREQ
Rule 83    rel -> MOREEQ
Rule 84    rel -> SAME
Rule 85    rel -> DIFFERENT
Rule 86    log -> OR
Rule 87    log -> AND
Rule 88    var_cte -> ID pushid
Rule 89    var_cte -> CTE_I pushcte
Rule 90    var_cte -> CTE_F pushcte
Rule 91    var_cte -> CTE_S pushcte
Rule 92    var_cte -> TRUE pushcte
Rule 93    var_cte -> FALSE pushcte
Rule 94    var_cte -> fcall
Rule 95    var_cte -> vcall
Rule 96    fcall -> ID LPAREN fcall1 RPAREN
Rule 97    fcall -> ID LPAREN RPAREN
Rule 98    fcall1 -> expres
Rule 99    fcall1 -> expres COMA fcall1
Rule 100   vcall -> ID LBRACE expres RBRACE
Rule 101   empty -> <empty>
Rule 102   pushcte -> <empty>
Rule 103   pushid -> <empty>
Rule 104   pushop -> <empty>
Rule 105   popop -> <empty>
Rule 106   resolverasignacion -> <empty>
Rule 107   resfact -> <empty>
Rule 108   resterm -> <empty>
Rule 109   resrel -> <empty>
Rule 110   resif -> <empty>
Rule 111   finif -> <empty>

Terminals, with rules where they appear

AND                  : 87
BOOL                 : 18 29
COLON                : 1 2 3
COMA                 : 33 63 99
CTE_F                : 90
CTE_I                : 19 89
CTE_S                : 91
DIFFERENT            : 85
DIVIDE               : 75
ELSE                 : 60
EQUAL                : 56 57
FALSE                : 93
FLOAT                : 16 27
FUNCTION             : 20 21 22 23 24 25
ID                   : 14 19 20 21 22 23 24 25 32 33 56 57 65 88 96 97 100
IF                   : 58 59 60
INT                  : 15 26
LBRACE               : 19 57 100
LKEY                 : 20 21 22 23 24 25 41 42 43 44 58 59 60 60 64
LOWEREQ              : 82
LOWERTHAN            : 80
LPAREN               : 20 21 22 23 24 25 58 59 60 61 64 65 76 96 97
MAIN                 : 1 2 3
MINUS                : 72 79
MOREEQ               : 83
MORETHAN             : 81
OR                   : 86
PLUS                 : 71 78
PRINT                : 61
PROGRAM              : 1 2 3
RBRACE               : 19 57 100
READ                 : 65
RETURN               : 39
RKEY                 : 20 21 22 23 24 25 41 42 43 44 58 59 60 60 64
RPAREN               : 20 21 22 23 24 25 58 59 60 61 64 65 76 96 97
SAME                 : 84
SEMICOLON            : 14 19 56 57 61 65
STRING               : 17 28
TIMES                : 74
TRUE                 : 92
VAR                  : 14
VECTOR               : 19
VOID                 : 30
WHILE                : 64
error                : 

Nonterminals, with rules where they appear

addInTable           : 20 21 22 23 24 25
asign                : 51
bloq                 : 20 22 23 24 42 43 50 59 60 60 64
ciclo                : 54
cond                 : 52
crear                : 4 5
empty                : 34 40
escrit               : 53
escriti              : 61 63
estat                : 49 50
ex                   : 68 69 71 72
expres               : 20 23 39 56 57 58 59 60 62 63 64 67 76 98 99 100
exr                  : 57 66 67 69
fact                 : 73 74 75
fcall                : 94
fcall1               : 96 99
finglobal            : 1 2
finif                : 58 59 60
finmain              : 1 2 3
funci                : 20 22 33
function             : 6 7
functype             : 20 21 22 23 24 25
global               : 1 2
leer                 : 55
localvar             : 20 21 22 23 24 37 38
log                  : 67
main1                : 1 2 3
mainc                : 1 2 3
mainc2               : 43 44 46 48
popop                : 76
program              : 0
program2             : 1 2 4
program3             : 1 6
pushcte              : 89 90 91 92 93
pushid               : 56 57 88
pushop               : 56 57 71 72 74 75 76
rel                  : 69
resfact              : 73 74 75
resif                : 58 59 60
resolverasignacion   : 56
resrel               : 69
resterm              : 70 71 72
return               : 20 23
term                 : 70 71 72 74 75
tipo                 : 14 32 33
var                  : 8 35 37 45 46
var_cte              : 77 78 79
vcall                : 95
vector               : 9 36 38 47 48

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc finmain
    (2) program -> . PROGRAM COLON global program2 finglobal MAIN main1 mainc finmain
    (3) program -> . PROGRAM COLON MAIN main1 mainc finmain

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . COLON global program2 finglobal program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM . COLON global program2 finglobal MAIN main1 mainc finmain
    (3) program -> PROGRAM . COLON MAIN main1 mainc finmain

    COLON           shift and go to state 3


state 3

    (1) program -> PROGRAM COLON . global program2 finglobal program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON . global program2 finglobal MAIN main1 mainc finmain
    (3) program -> PROGRAM COLON . MAIN main1 mainc finmain
    (10) global -> .

    MAIN            shift and go to state 5
    VAR             reduce using rule 10 (global -> .)
    VECTOR          reduce using rule 10 (global -> .)

    global                         shift and go to state 4

state 4

    (1) program -> PROGRAM COLON global . program2 finglobal program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON global . program2 finglobal MAIN main1 mainc finmain
    (4) program2 -> . crear program2
    (5) program2 -> . crear
    (8) crear -> . var
    (9) crear -> . vector
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    program2                       shift and go to state 6
    crear                          shift and go to state 7
    var                            shift and go to state 8
    vector                         shift and go to state 9

state 5

    (3) program -> PROGRAM COLON MAIN . main1 mainc finmain
    (12) main1 -> .

    LKEY            reduce using rule 12 (main1 -> .)

    main1                          shift and go to state 12

state 6

    (1) program -> PROGRAM COLON global program2 . finglobal program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON global program2 . finglobal MAIN main1 mainc finmain
    (11) finglobal -> .

    MAIN            reduce using rule 11 (finglobal -> .)
    FUNCTION        reduce using rule 11 (finglobal -> .)

    finglobal                      shift and go to state 13

state 7

    (4) program2 -> crear . program2
    (5) program2 -> crear .
    (4) program2 -> . crear program2
    (5) program2 -> . crear
    (8) crear -> . var
    (9) crear -> . vector
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    MAIN            reduce using rule 5 (program2 -> crear .)
    FUNCTION        reduce using rule 5 (program2 -> crear .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    crear                          shift and go to state 7
    program2                       shift and go to state 14
    var                            shift and go to state 8
    vector                         shift and go to state 9

state 8

    (8) crear -> var .

    VAR             reduce using rule 8 (crear -> var .)
    VECTOR          reduce using rule 8 (crear -> var .)
    MAIN            reduce using rule 8 (crear -> var .)
    FUNCTION        reduce using rule 8 (crear -> var .)


state 9

    (9) crear -> vector .

    VAR             reduce using rule 9 (crear -> vector .)
    VECTOR          reduce using rule 9 (crear -> vector .)
    MAIN            reduce using rule 9 (crear -> vector .)
    FUNCTION        reduce using rule 9 (crear -> vector .)


state 10

    (14) var -> VAR . tipo ID SEMICOLON
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . STRING
    (18) tipo -> . BOOL

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING          shift and go to state 18
    BOOL            shift and go to state 19

    tipo                           shift and go to state 15

state 11

    (19) vector -> VECTOR . ID LBRACE CTE_I RBRACE SEMICOLON

    ID              shift and go to state 20


state 12

    (3) program -> PROGRAM COLON MAIN main1 . mainc finmain
    (41) mainc -> . LKEY RKEY
    (42) mainc -> . LKEY bloq RKEY
    (43) mainc -> . LKEY mainc2 bloq RKEY
    (44) mainc -> . LKEY mainc2 RKEY

    LKEY            shift and go to state 22

    mainc                          shift and go to state 21

state 13

    (1) program -> PROGRAM COLON global program2 finglobal . program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON global program2 finglobal . MAIN main1 mainc finmain
    (6) program3 -> . function program3
    (7) program3 -> . function
    (20) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (21) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (22) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (23) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (24) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (25) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY

    MAIN            shift and go to state 24
    FUNCTION        shift and go to state 26

    program3                       shift and go to state 23
    function                       shift and go to state 25

state 14

    (4) program2 -> crear program2 .

    MAIN            reduce using rule 4 (program2 -> crear program2 .)
    FUNCTION        reduce using rule 4 (program2 -> crear program2 .)


state 15

    (14) var -> VAR tipo . ID SEMICOLON

    ID              shift and go to state 27


state 16

    (15) tipo -> INT .

    ID              reduce using rule 15 (tipo -> INT .)


state 17

    (16) tipo -> FLOAT .

    ID              reduce using rule 16 (tipo -> FLOAT .)


state 18

    (17) tipo -> STRING .

    ID              reduce using rule 17 (tipo -> STRING .)


state 19

    (18) tipo -> BOOL .

    ID              reduce using rule 18 (tipo -> BOOL .)


state 20

    (19) vector -> VECTOR ID . LBRACE CTE_I RBRACE SEMICOLON

    LBRACE          shift and go to state 28


state 21

    (3) program -> PROGRAM COLON MAIN main1 mainc . finmain
    (13) finmain -> .

    $end            reduce using rule 13 (finmain -> .)

    finmain                        shift and go to state 29

state 22

    (41) mainc -> LKEY . RKEY
    (42) mainc -> LKEY . bloq RKEY
    (43) mainc -> LKEY . mainc2 bloq RKEY
    (44) mainc -> LKEY . mainc2 RKEY
    (49) bloq -> . estat
    (50) bloq -> . estat bloq
    (45) mainc2 -> . var
    (46) mainc2 -> . var mainc2
    (47) mainc2 -> . vector
    (48) mainc2 -> . vector mainc2
    (51) estat -> . asign
    (52) estat -> . cond
    (53) estat -> . escrit
    (54) estat -> . ciclo
    (55) estat -> . leer
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON
    (56) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (57) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (58) cond -> . IF LPAREN expres RPAREN LKEY resif finif RKEY
    (59) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY
    (60) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY
    (61) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (64) ciclo -> . WHILE LPAREN expres RPAREN LKEY bloq RKEY
    (65) leer -> . READ LPAREN ID RPAREN SEMICOLON

    RKEY            shift and go to state 30
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11
    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

    bloq                           shift and go to state 31
    mainc2                         shift and go to state 32
    estat                          shift and go to state 33
    var                            shift and go to state 34
    vector                         shift and go to state 35
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 23

    (1) program -> PROGRAM COLON global program2 finglobal program3 . MAIN main1 mainc finmain

    MAIN            shift and go to state 46


state 24

    (2) program -> PROGRAM COLON global program2 finglobal MAIN . main1 mainc finmain
    (12) main1 -> .

    LKEY            reduce using rule 12 (main1 -> .)

    main1                          shift and go to state 47

state 25

    (6) program3 -> function . program3
    (7) program3 -> function .
    (6) program3 -> . function program3
    (7) program3 -> . function
    (20) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (21) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (22) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (23) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (24) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (25) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY

    MAIN            reduce using rule 7 (program3 -> function .)
    FUNCTION        shift and go to state 26

    function                       shift and go to state 25
    program3                       shift and go to state 48

state 26

    (20) function -> FUNCTION . functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (21) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (22) function -> FUNCTION . functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (23) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (24) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (25) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY RKEY
    (26) functype -> . INT
    (27) functype -> . FLOAT
    (28) functype -> . STRING
    (29) functype -> . BOOL
    (30) functype -> . VOID

    INT             shift and go to state 50
    FLOAT           shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 53
    VOID            shift and go to state 54

    functype                       shift and go to state 49

state 27

    (14) var -> VAR tipo ID . SEMICOLON

    SEMICOLON       shift and go to state 55


state 28

    (19) vector -> VECTOR ID LBRACE . CTE_I RBRACE SEMICOLON

    CTE_I           shift and go to state 56


state 29

    (3) program -> PROGRAM COLON MAIN main1 mainc finmain .

    $end            reduce using rule 3 (program -> PROGRAM COLON MAIN main1 mainc finmain .)


state 30

    (41) mainc -> LKEY RKEY .

    $end            reduce using rule 41 (mainc -> LKEY RKEY .)


state 31

    (42) mainc -> LKEY bloq . RKEY

    RKEY            shift and go to state 57


state 32

    (43) mainc -> LKEY mainc2 . bloq RKEY
    (44) mainc -> LKEY mainc2 . RKEY
    (49) bloq -> . estat
    (50) bloq -> . estat bloq
    (51) estat -> . asign
    (52) estat -> . cond
    (53) estat -> . escrit
    (54) estat -> . ciclo
    (55) estat -> . leer
    (56) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (57) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (58) cond -> . IF LPAREN expres RPAREN LKEY resif finif RKEY
    (59) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY
    (60) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY
    (61) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (64) ciclo -> . WHILE LPAREN expres RPAREN LKEY bloq RKEY
    (65) leer -> . READ LPAREN ID RPAREN SEMICOLON

    RKEY            shift and go to state 59
    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

    bloq                           shift and go to state 58
    estat                          shift and go to state 33
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 33

    (49) bloq -> estat .
    (50) bloq -> estat . bloq
    (49) bloq -> . estat
    (50) bloq -> . estat bloq
    (51) estat -> . asign
    (52) estat -> . cond
    (53) estat -> . escrit
    (54) estat -> . ciclo
    (55) estat -> . leer
    (56) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (57) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (58) cond -> . IF LPAREN expres RPAREN LKEY resif finif RKEY
    (59) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY
    (60) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY
    (61) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (64) ciclo -> . WHILE LPAREN expres RPAREN LKEY bloq RKEY
    (65) leer -> . READ LPAREN ID RPAREN SEMICOLON

  ! shift/reduce conflict for ID resolved as shift
    RKEY            reduce using rule 49 (bloq -> estat .)
    RETURN          reduce using rule 49 (bloq -> estat .)
    LPAREN          reduce using rule 49 (bloq -> estat .)
    PLUS            reduce using rule 49 (bloq -> estat .)
    MINUS           reduce using rule 49 (bloq -> estat .)
    CTE_I           reduce using rule 49 (bloq -> estat .)
    CTE_F           reduce using rule 49 (bloq -> estat .)
    CTE_S           reduce using rule 49 (bloq -> estat .)
    TRUE            reduce using rule 49 (bloq -> estat .)
    FALSE           reduce using rule 49 (bloq -> estat .)
    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

  ! ID              [ reduce using rule 49 (bloq -> estat .) ]

    estat                          shift and go to state 33
    bloq                           shift and go to state 60
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 34

    (45) mainc2 -> var .
    (46) mainc2 -> var . mainc2
    (45) mainc2 -> . var
    (46) mainc2 -> . var mainc2
    (47) mainc2 -> . vector
    (48) mainc2 -> . vector mainc2
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            reduce using rule 45 (mainc2 -> var .)
    ID              reduce using rule 45 (mainc2 -> var .)
    IF              reduce using rule 45 (mainc2 -> var .)
    PRINT           reduce using rule 45 (mainc2 -> var .)
    WHILE           reduce using rule 45 (mainc2 -> var .)
    READ            reduce using rule 45 (mainc2 -> var .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    var                            shift and go to state 34
    mainc2                         shift and go to state 61
    vector                         shift and go to state 35

state 35

    (47) mainc2 -> vector .
    (48) mainc2 -> vector . mainc2
    (45) mainc2 -> . var
    (46) mainc2 -> . var mainc2
    (47) mainc2 -> . vector
    (48) mainc2 -> . vector mainc2
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            reduce using rule 47 (mainc2 -> vector .)
    ID              reduce using rule 47 (mainc2 -> vector .)
    IF              reduce using rule 47 (mainc2 -> vector .)
    PRINT           reduce using rule 47 (mainc2 -> vector .)
    WHILE           reduce using rule 47 (mainc2 -> vector .)
    READ            reduce using rule 47 (mainc2 -> vector .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    vector                         shift and go to state 35
    mainc2                         shift and go to state 62
    var                            shift and go to state 34

state 36

    (51) estat -> asign .

    ID              reduce using rule 51 (estat -> asign .)
    IF              reduce using rule 51 (estat -> asign .)
    PRINT           reduce using rule 51 (estat -> asign .)
    WHILE           reduce using rule 51 (estat -> asign .)
    READ            reduce using rule 51 (estat -> asign .)
    RKEY            reduce using rule 51 (estat -> asign .)
    RETURN          reduce using rule 51 (estat -> asign .)
    LPAREN          reduce using rule 51 (estat -> asign .)
    PLUS            reduce using rule 51 (estat -> asign .)
    MINUS           reduce using rule 51 (estat -> asign .)
    CTE_I           reduce using rule 51 (estat -> asign .)
    CTE_F           reduce using rule 51 (estat -> asign .)
    CTE_S           reduce using rule 51 (estat -> asign .)
    TRUE            reduce using rule 51 (estat -> asign .)
    FALSE           reduce using rule 51 (estat -> asign .)


state 37

    (52) estat -> cond .

    ID              reduce using rule 52 (estat -> cond .)
    IF              reduce using rule 52 (estat -> cond .)
    PRINT           reduce using rule 52 (estat -> cond .)
    WHILE           reduce using rule 52 (estat -> cond .)
    READ            reduce using rule 52 (estat -> cond .)
    RKEY            reduce using rule 52 (estat -> cond .)
    RETURN          reduce using rule 52 (estat -> cond .)
    LPAREN          reduce using rule 52 (estat -> cond .)
    PLUS            reduce using rule 52 (estat -> cond .)
    MINUS           reduce using rule 52 (estat -> cond .)
    CTE_I           reduce using rule 52 (estat -> cond .)
    CTE_F           reduce using rule 52 (estat -> cond .)
    CTE_S           reduce using rule 52 (estat -> cond .)
    TRUE            reduce using rule 52 (estat -> cond .)
    FALSE           reduce using rule 52 (estat -> cond .)


state 38

    (53) estat -> escrit .

    ID              reduce using rule 53 (estat -> escrit .)
    IF              reduce using rule 53 (estat -> escrit .)
    PRINT           reduce using rule 53 (estat -> escrit .)
    WHILE           reduce using rule 53 (estat -> escrit .)
    READ            reduce using rule 53 (estat -> escrit .)
    RKEY            reduce using rule 53 (estat -> escrit .)
    RETURN          reduce using rule 53 (estat -> escrit .)
    LPAREN          reduce using rule 53 (estat -> escrit .)
    PLUS            reduce using rule 53 (estat -> escrit .)
    MINUS           reduce using rule 53 (estat -> escrit .)
    CTE_I           reduce using rule 53 (estat -> escrit .)
    CTE_F           reduce using rule 53 (estat -> escrit .)
    CTE_S           reduce using rule 53 (estat -> escrit .)
    TRUE            reduce using rule 53 (estat -> escrit .)
    FALSE           reduce using rule 53 (estat -> escrit .)


state 39

    (54) estat -> ciclo .

    ID              reduce using rule 54 (estat -> ciclo .)
    IF              reduce using rule 54 (estat -> ciclo .)
    PRINT           reduce using rule 54 (estat -> ciclo .)
    WHILE           reduce using rule 54 (estat -> ciclo .)
    READ            reduce using rule 54 (estat -> ciclo .)
    RKEY            reduce using rule 54 (estat -> ciclo .)
    RETURN          reduce using rule 54 (estat -> ciclo .)
    LPAREN          reduce using rule 54 (estat -> ciclo .)
    PLUS            reduce using rule 54 (estat -> ciclo .)
    MINUS           reduce using rule 54 (estat -> ciclo .)
    CTE_I           reduce using rule 54 (estat -> ciclo .)
    CTE_F           reduce using rule 54 (estat -> ciclo .)
    CTE_S           reduce using rule 54 (estat -> ciclo .)
    TRUE            reduce using rule 54 (estat -> ciclo .)
    FALSE           reduce using rule 54 (estat -> ciclo .)


state 40

    (55) estat -> leer .

    ID              reduce using rule 55 (estat -> leer .)
    IF              reduce using rule 55 (estat -> leer .)
    PRINT           reduce using rule 55 (estat -> leer .)
    WHILE           reduce using rule 55 (estat -> leer .)
    READ            reduce using rule 55 (estat -> leer .)
    RKEY            reduce using rule 55 (estat -> leer .)
    RETURN          reduce using rule 55 (estat -> leer .)
    LPAREN          reduce using rule 55 (estat -> leer .)
    PLUS            reduce using rule 55 (estat -> leer .)
    MINUS           reduce using rule 55 (estat -> leer .)
    CTE_I           reduce using rule 55 (estat -> leer .)
    CTE_F           reduce using rule 55 (estat -> leer .)
    CTE_S           reduce using rule 55 (estat -> leer .)
    TRUE            reduce using rule 55 (estat -> leer .)
    FALSE           reduce using rule 55 (estat -> leer .)


state 41

    (56) asign -> ID . pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (57) asign -> ID . pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (103) pushid -> .

    EQUAL           reduce using rule 103 (pushid -> .)
    LBRACE          reduce using rule 103 (pushid -> .)

    pushid                         shift and go to state 63

state 42

    (58) cond -> IF . LPAREN expres RPAREN LKEY resif finif RKEY
    (59) cond -> IF . LPAREN expres RPAREN LKEY resif bloq finif RKEY
    (60) cond -> IF . LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY

    LPAREN          shift and go to state 64


state 43

    (61) escrit -> PRINT . LPAREN escriti RPAREN SEMICOLON

    LPAREN          shift and go to state 65


state 44

    (64) ciclo -> WHILE . LPAREN expres RPAREN LKEY bloq RKEY

    LPAREN          shift and go to state 66


state 45

    (65) leer -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 67


state 46

    (1) program -> PROGRAM COLON global program2 finglobal program3 MAIN . main1 mainc finmain
    (12) main1 -> .

    LKEY            reduce using rule 12 (main1 -> .)

    main1                          shift and go to state 68

state 47

    (2) program -> PROGRAM COLON global program2 finglobal MAIN main1 . mainc finmain
    (41) mainc -> . LKEY RKEY
    (42) mainc -> . LKEY bloq RKEY
    (43) mainc -> . LKEY mainc2 bloq RKEY
    (44) mainc -> . LKEY mainc2 RKEY

    LKEY            shift and go to state 22

    mainc                          shift and go to state 69

state 48

    (6) program3 -> function program3 .

    MAIN            reduce using rule 6 (program3 -> function program3 .)


state 49

    (20) function -> FUNCTION functype . ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (21) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (22) function -> FUNCTION functype . ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (23) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (24) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (25) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY RKEY

    ID              shift and go to state 70


state 50

    (26) functype -> INT .

    ID              reduce using rule 26 (functype -> INT .)


state 51

    (27) functype -> FLOAT .

    ID              reduce using rule 27 (functype -> FLOAT .)


state 52

    (28) functype -> STRING .

    ID              reduce using rule 28 (functype -> STRING .)


state 53

    (29) functype -> BOOL .

    ID              reduce using rule 29 (functype -> BOOL .)


state 54

    (30) functype -> VOID .

    ID              reduce using rule 30 (functype -> VOID .)


state 55

    (14) var -> VAR tipo ID SEMICOLON .

    VAR             reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    VECTOR          reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    MAIN            reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    FUNCTION        reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    RKEY            reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    ID              reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    IF              reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    PRINT           reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    WHILE           reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    READ            reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)


state 56

    (19) vector -> VECTOR ID LBRACE CTE_I . RBRACE SEMICOLON

    RBRACE          shift and go to state 71


state 57

    (42) mainc -> LKEY bloq RKEY .

    $end            reduce using rule 42 (mainc -> LKEY bloq RKEY .)


state 58

    (43) mainc -> LKEY mainc2 bloq . RKEY

    RKEY            shift and go to state 72


state 59

    (44) mainc -> LKEY mainc2 RKEY .

    $end            reduce using rule 44 (mainc -> LKEY mainc2 RKEY .)


state 60

    (50) bloq -> estat bloq .

    RKEY            reduce using rule 50 (bloq -> estat bloq .)
    RETURN          reduce using rule 50 (bloq -> estat bloq .)
    LPAREN          reduce using rule 50 (bloq -> estat bloq .)
    PLUS            reduce using rule 50 (bloq -> estat bloq .)
    MINUS           reduce using rule 50 (bloq -> estat bloq .)
    ID              reduce using rule 50 (bloq -> estat bloq .)
    CTE_I           reduce using rule 50 (bloq -> estat bloq .)
    CTE_F           reduce using rule 50 (bloq -> estat bloq .)
    CTE_S           reduce using rule 50 (bloq -> estat bloq .)
    TRUE            reduce using rule 50 (bloq -> estat bloq .)
    FALSE           reduce using rule 50 (bloq -> estat bloq .)


state 61

    (46) mainc2 -> var mainc2 .

    RKEY            reduce using rule 46 (mainc2 -> var mainc2 .)
    ID              reduce using rule 46 (mainc2 -> var mainc2 .)
    IF              reduce using rule 46 (mainc2 -> var mainc2 .)
    PRINT           reduce using rule 46 (mainc2 -> var mainc2 .)
    WHILE           reduce using rule 46 (mainc2 -> var mainc2 .)
    READ            reduce using rule 46 (mainc2 -> var mainc2 .)


state 62

    (48) mainc2 -> vector mainc2 .

    RKEY            reduce using rule 48 (mainc2 -> vector mainc2 .)
    ID              reduce using rule 48 (mainc2 -> vector mainc2 .)
    IF              reduce using rule 48 (mainc2 -> vector mainc2 .)
    PRINT           reduce using rule 48 (mainc2 -> vector mainc2 .)
    WHILE           reduce using rule 48 (mainc2 -> vector mainc2 .)
    READ            reduce using rule 48 (mainc2 -> vector mainc2 .)


state 63

    (56) asign -> ID pushid . EQUAL pushop expres resolverasignacion SEMICOLON
    (57) asign -> ID pushid . LBRACE exr RBRACE EQUAL pushop expres SEMICOLON

    EQUAL           shift and go to state 73
    LBRACE          shift and go to state 74


state 64

    (58) cond -> IF LPAREN . expres RPAREN LKEY resif finif RKEY
    (59) cond -> IF LPAREN . expres RPAREN LKEY resif bloq finif RKEY
    (60) cond -> IF LPAREN . expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY
    (66) expres -> . exr
    (67) expres -> . exr log expres
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 76
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 65

    (61) escrit -> PRINT LPAREN . escriti RPAREN SEMICOLON
    (62) escriti -> . expres
    (63) escriti -> . expres COMA escriti
    (66) expres -> . exr
    (67) expres -> . exr log expres
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    escriti                        shift and go to state 92
    expres                         shift and go to state 93
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 66

    (64) ciclo -> WHILE LPAREN . expres RPAREN LKEY bloq RKEY
    (66) expres -> . exr
    (67) expres -> . exr log expres
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 94
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 67

    (65) leer -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 95


state 68

    (1) program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 . mainc finmain
    (41) mainc -> . LKEY RKEY
    (42) mainc -> . LKEY bloq RKEY
    (43) mainc -> . LKEY mainc2 bloq RKEY
    (44) mainc -> . LKEY mainc2 RKEY

    LKEY            shift and go to state 22

    mainc                          shift and go to state 96

state 69

    (2) program -> PROGRAM COLON global program2 finglobal MAIN main1 mainc . finmain
    (13) finmain -> .

    $end            reduce using rule 13 (finmain -> .)

    finmain                        shift and go to state 97

state 70

    (20) function -> FUNCTION functype ID . addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (21) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY localvar RKEY
    (22) function -> FUNCTION functype ID . addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (23) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (24) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (25) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY RKEY
    (31) addInTable -> .

    LPAREN          reduce using rule 31 (addInTable -> .)

    addInTable                     shift and go to state 98

state 71

    (19) vector -> VECTOR ID LBRACE CTE_I RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 99


state 72

    (43) mainc -> LKEY mainc2 bloq RKEY .

    $end            reduce using rule 43 (mainc -> LKEY mainc2 bloq RKEY .)


state 73

    (56) asign -> ID pushid EQUAL . pushop expres resolverasignacion SEMICOLON
    (104) pushop -> .

    LPAREN          reduce using rule 104 (pushop -> .)
    PLUS            reduce using rule 104 (pushop -> .)
    MINUS           reduce using rule 104 (pushop -> .)
    ID              reduce using rule 104 (pushop -> .)
    CTE_I           reduce using rule 104 (pushop -> .)
    CTE_F           reduce using rule 104 (pushop -> .)
    CTE_S           reduce using rule 104 (pushop -> .)
    TRUE            reduce using rule 104 (pushop -> .)
    FALSE           reduce using rule 104 (pushop -> .)

    pushop                         shift and go to state 100

state 74

    (57) asign -> ID pushid LBRACE . exr RBRACE EQUAL pushop expres SEMICOLON
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    exr                            shift and go to state 101
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 75

    (76) fact -> LPAREN . pushop expres RPAREN popop
    (104) pushop -> .

    LPAREN          reduce using rule 104 (pushop -> .)
    PLUS            reduce using rule 104 (pushop -> .)
    MINUS           reduce using rule 104 (pushop -> .)
    ID              reduce using rule 104 (pushop -> .)
    CTE_I           reduce using rule 104 (pushop -> .)
    CTE_F           reduce using rule 104 (pushop -> .)
    CTE_S           reduce using rule 104 (pushop -> .)
    TRUE            reduce using rule 104 (pushop -> .)
    FALSE           reduce using rule 104 (pushop -> .)

    pushop                         shift and go to state 102

state 76

    (58) cond -> IF LPAREN expres . RPAREN LKEY resif finif RKEY
    (59) cond -> IF LPAREN expres . RPAREN LKEY resif bloq finif RKEY
    (60) cond -> IF LPAREN expres . RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY

    RPAREN          shift and go to state 103


state 77

    (66) expres -> exr .
    (67) expres -> exr . log expres
    (86) log -> . OR
    (87) log -> . AND

    RPAREN          reduce using rule 66 (expres -> exr .)
    COMA            reduce using rule 66 (expres -> exr .)
    SEMICOLON       reduce using rule 66 (expres -> exr .)
    RBRACE          reduce using rule 66 (expres -> exr .)
    RKEY            reduce using rule 66 (expres -> exr .)
    LPAREN          reduce using rule 66 (expres -> exr .)
    PLUS            reduce using rule 66 (expres -> exr .)
    MINUS           reduce using rule 66 (expres -> exr .)
    ID              reduce using rule 66 (expres -> exr .)
    CTE_I           reduce using rule 66 (expres -> exr .)
    CTE_F           reduce using rule 66 (expres -> exr .)
    CTE_S           reduce using rule 66 (expres -> exr .)
    TRUE            reduce using rule 66 (expres -> exr .)
    FALSE           reduce using rule 66 (expres -> exr .)
    OR              shift and go to state 105
    AND             shift and go to state 106

    log                            shift and go to state 104

state 78

    (68) exr -> ex .
    (69) exr -> ex . rel exr resrel
    (80) rel -> . LOWERTHAN
    (81) rel -> . MORETHAN
    (82) rel -> . LOWEREQ
    (83) rel -> . MOREEQ
    (84) rel -> . SAME
    (85) rel -> . DIFFERENT

    OR              reduce using rule 68 (exr -> ex .)
    AND             reduce using rule 68 (exr -> ex .)
    RPAREN          reduce using rule 68 (exr -> ex .)
    COMA            reduce using rule 68 (exr -> ex .)
    RBRACE          reduce using rule 68 (exr -> ex .)
    SEMICOLON       reduce using rule 68 (exr -> ex .)
    RKEY            reduce using rule 68 (exr -> ex .)
    LPAREN          reduce using rule 68 (exr -> ex .)
    PLUS            reduce using rule 68 (exr -> ex .)
    MINUS           reduce using rule 68 (exr -> ex .)
    ID              reduce using rule 68 (exr -> ex .)
    CTE_I           reduce using rule 68 (exr -> ex .)
    CTE_F           reduce using rule 68 (exr -> ex .)
    CTE_S           reduce using rule 68 (exr -> ex .)
    TRUE            reduce using rule 68 (exr -> ex .)
    FALSE           reduce using rule 68 (exr -> ex .)
    LOWERTHAN       shift and go to state 108
    MORETHAN        shift and go to state 109
    LOWEREQ         shift and go to state 110
    MOREEQ          shift and go to state 111
    SAME            shift and go to state 112
    DIFFERENT       shift and go to state 113

    rel                            shift and go to state 107

state 79

    (70) ex -> term . resterm
    (71) ex -> term . resterm PLUS pushop ex
    (72) ex -> term . resterm MINUS pushop ex
    (108) resterm -> .

    PLUS            reduce using rule 108 (resterm -> .)
    MINUS           reduce using rule 108 (resterm -> .)
    LOWERTHAN       reduce using rule 108 (resterm -> .)
    MORETHAN        reduce using rule 108 (resterm -> .)
    LOWEREQ         reduce using rule 108 (resterm -> .)
    MOREEQ          reduce using rule 108 (resterm -> .)
    SAME            reduce using rule 108 (resterm -> .)
    DIFFERENT       reduce using rule 108 (resterm -> .)
    OR              reduce using rule 108 (resterm -> .)
    AND             reduce using rule 108 (resterm -> .)
    RPAREN          reduce using rule 108 (resterm -> .)
    COMA            reduce using rule 108 (resterm -> .)
    RBRACE          reduce using rule 108 (resterm -> .)
    SEMICOLON       reduce using rule 108 (resterm -> .)
    RKEY            reduce using rule 108 (resterm -> .)
    LPAREN          reduce using rule 108 (resterm -> .)
    ID              reduce using rule 108 (resterm -> .)
    CTE_I           reduce using rule 108 (resterm -> .)
    CTE_F           reduce using rule 108 (resterm -> .)
    CTE_S           reduce using rule 108 (resterm -> .)
    TRUE            reduce using rule 108 (resterm -> .)
    FALSE           reduce using rule 108 (resterm -> .)

    resterm                        shift and go to state 114

state 80

    (78) fact -> PLUS . var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    var_cte                        shift and go to state 115
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 81

    (79) fact -> MINUS . var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    var_cte                        shift and go to state 116
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 82

    (73) term -> fact . resfact
    (74) term -> fact . resfact TIMES pushop term
    (75) term -> fact . resfact DIVIDE pushop term
    (107) resfact -> .

    TIMES           reduce using rule 107 (resfact -> .)
    DIVIDE          reduce using rule 107 (resfact -> .)
    PLUS            reduce using rule 107 (resfact -> .)
    MINUS           reduce using rule 107 (resfact -> .)
    LOWERTHAN       reduce using rule 107 (resfact -> .)
    MORETHAN        reduce using rule 107 (resfact -> .)
    LOWEREQ         reduce using rule 107 (resfact -> .)
    MOREEQ          reduce using rule 107 (resfact -> .)
    SAME            reduce using rule 107 (resfact -> .)
    DIFFERENT       reduce using rule 107 (resfact -> .)
    OR              reduce using rule 107 (resfact -> .)
    AND             reduce using rule 107 (resfact -> .)
    RPAREN          reduce using rule 107 (resfact -> .)
    COMA            reduce using rule 107 (resfact -> .)
    RBRACE          reduce using rule 107 (resfact -> .)
    SEMICOLON       reduce using rule 107 (resfact -> .)
    RKEY            reduce using rule 107 (resfact -> .)
    LPAREN          reduce using rule 107 (resfact -> .)
    ID              reduce using rule 107 (resfact -> .)
    CTE_I           reduce using rule 107 (resfact -> .)
    CTE_F           reduce using rule 107 (resfact -> .)
    CTE_S           reduce using rule 107 (resfact -> .)
    TRUE            reduce using rule 107 (resfact -> .)
    FALSE           reduce using rule 107 (resfact -> .)

    resfact                        shift and go to state 117

state 83

    (77) fact -> var_cte .

    TIMES           reduce using rule 77 (fact -> var_cte .)
    DIVIDE          reduce using rule 77 (fact -> var_cte .)
    PLUS            reduce using rule 77 (fact -> var_cte .)
    MINUS           reduce using rule 77 (fact -> var_cte .)
    LOWERTHAN       reduce using rule 77 (fact -> var_cte .)
    MORETHAN        reduce using rule 77 (fact -> var_cte .)
    LOWEREQ         reduce using rule 77 (fact -> var_cte .)
    MOREEQ          reduce using rule 77 (fact -> var_cte .)
    SAME            reduce using rule 77 (fact -> var_cte .)
    DIFFERENT       reduce using rule 77 (fact -> var_cte .)
    OR              reduce using rule 77 (fact -> var_cte .)
    AND             reduce using rule 77 (fact -> var_cte .)
    RPAREN          reduce using rule 77 (fact -> var_cte .)
    COMA            reduce using rule 77 (fact -> var_cte .)
    RBRACE          reduce using rule 77 (fact -> var_cte .)
    SEMICOLON       reduce using rule 77 (fact -> var_cte .)
    RKEY            reduce using rule 77 (fact -> var_cte .)
    LPAREN          reduce using rule 77 (fact -> var_cte .)
    ID              reduce using rule 77 (fact -> var_cte .)
    CTE_I           reduce using rule 77 (fact -> var_cte .)
    CTE_F           reduce using rule 77 (fact -> var_cte .)
    CTE_S           reduce using rule 77 (fact -> var_cte .)
    TRUE            reduce using rule 77 (fact -> var_cte .)
    FALSE           reduce using rule 77 (fact -> var_cte .)


state 84

    (88) var_cte -> ID . pushid
    (96) fcall -> ID . LPAREN fcall1 RPAREN
    (97) fcall -> ID . LPAREN RPAREN
    (100) vcall -> ID . LBRACE expres RBRACE
    (103) pushid -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 119
    LBRACE          shift and go to state 120
    TIMES           reduce using rule 103 (pushid -> .)
    DIVIDE          reduce using rule 103 (pushid -> .)
    PLUS            reduce using rule 103 (pushid -> .)
    MINUS           reduce using rule 103 (pushid -> .)
    LOWERTHAN       reduce using rule 103 (pushid -> .)
    MORETHAN        reduce using rule 103 (pushid -> .)
    LOWEREQ         reduce using rule 103 (pushid -> .)
    MOREEQ          reduce using rule 103 (pushid -> .)
    SAME            reduce using rule 103 (pushid -> .)
    DIFFERENT       reduce using rule 103 (pushid -> .)
    OR              reduce using rule 103 (pushid -> .)
    AND             reduce using rule 103 (pushid -> .)
    RPAREN          reduce using rule 103 (pushid -> .)
    COMA            reduce using rule 103 (pushid -> .)
    RBRACE          reduce using rule 103 (pushid -> .)
    SEMICOLON       reduce using rule 103 (pushid -> .)
    RKEY            reduce using rule 103 (pushid -> .)
    ID              reduce using rule 103 (pushid -> .)
    CTE_I           reduce using rule 103 (pushid -> .)
    CTE_F           reduce using rule 103 (pushid -> .)
    CTE_S           reduce using rule 103 (pushid -> .)
    TRUE            reduce using rule 103 (pushid -> .)
    FALSE           reduce using rule 103 (pushid -> .)

  ! LPAREN          [ reduce using rule 103 (pushid -> .) ]

    pushid                         shift and go to state 118

state 85

    (89) var_cte -> CTE_I . pushcte
    (102) pushcte -> .

    TIMES           reduce using rule 102 (pushcte -> .)
    DIVIDE          reduce using rule 102 (pushcte -> .)
    PLUS            reduce using rule 102 (pushcte -> .)
    MINUS           reduce using rule 102 (pushcte -> .)
    LOWERTHAN       reduce using rule 102 (pushcte -> .)
    MORETHAN        reduce using rule 102 (pushcte -> .)
    LOWEREQ         reduce using rule 102 (pushcte -> .)
    MOREEQ          reduce using rule 102 (pushcte -> .)
    SAME            reduce using rule 102 (pushcte -> .)
    DIFFERENT       reduce using rule 102 (pushcte -> .)
    OR              reduce using rule 102 (pushcte -> .)
    AND             reduce using rule 102 (pushcte -> .)
    RPAREN          reduce using rule 102 (pushcte -> .)
    COMA            reduce using rule 102 (pushcte -> .)
    RBRACE          reduce using rule 102 (pushcte -> .)
    SEMICOLON       reduce using rule 102 (pushcte -> .)
    RKEY            reduce using rule 102 (pushcte -> .)
    LPAREN          reduce using rule 102 (pushcte -> .)
    ID              reduce using rule 102 (pushcte -> .)
    CTE_I           reduce using rule 102 (pushcte -> .)
    CTE_F           reduce using rule 102 (pushcte -> .)
    CTE_S           reduce using rule 102 (pushcte -> .)
    TRUE            reduce using rule 102 (pushcte -> .)
    FALSE           reduce using rule 102 (pushcte -> .)

    pushcte                        shift and go to state 121

state 86

    (90) var_cte -> CTE_F . pushcte
    (102) pushcte -> .

    TIMES           reduce using rule 102 (pushcte -> .)
    DIVIDE          reduce using rule 102 (pushcte -> .)
    PLUS            reduce using rule 102 (pushcte -> .)
    MINUS           reduce using rule 102 (pushcte -> .)
    LOWERTHAN       reduce using rule 102 (pushcte -> .)
    MORETHAN        reduce using rule 102 (pushcte -> .)
    LOWEREQ         reduce using rule 102 (pushcte -> .)
    MOREEQ          reduce using rule 102 (pushcte -> .)
    SAME            reduce using rule 102 (pushcte -> .)
    DIFFERENT       reduce using rule 102 (pushcte -> .)
    OR              reduce using rule 102 (pushcte -> .)
    AND             reduce using rule 102 (pushcte -> .)
    RPAREN          reduce using rule 102 (pushcte -> .)
    COMA            reduce using rule 102 (pushcte -> .)
    RBRACE          reduce using rule 102 (pushcte -> .)
    SEMICOLON       reduce using rule 102 (pushcte -> .)
    RKEY            reduce using rule 102 (pushcte -> .)
    LPAREN          reduce using rule 102 (pushcte -> .)
    ID              reduce using rule 102 (pushcte -> .)
    CTE_I           reduce using rule 102 (pushcte -> .)
    CTE_F           reduce using rule 102 (pushcte -> .)
    CTE_S           reduce using rule 102 (pushcte -> .)
    TRUE            reduce using rule 102 (pushcte -> .)
    FALSE           reduce using rule 102 (pushcte -> .)

    pushcte                        shift and go to state 122

state 87

    (91) var_cte -> CTE_S . pushcte
    (102) pushcte -> .

    TIMES           reduce using rule 102 (pushcte -> .)
    DIVIDE          reduce using rule 102 (pushcte -> .)
    PLUS            reduce using rule 102 (pushcte -> .)
    MINUS           reduce using rule 102 (pushcte -> .)
    LOWERTHAN       reduce using rule 102 (pushcte -> .)
    MORETHAN        reduce using rule 102 (pushcte -> .)
    LOWEREQ         reduce using rule 102 (pushcte -> .)
    MOREEQ          reduce using rule 102 (pushcte -> .)
    SAME            reduce using rule 102 (pushcte -> .)
    DIFFERENT       reduce using rule 102 (pushcte -> .)
    OR              reduce using rule 102 (pushcte -> .)
    AND             reduce using rule 102 (pushcte -> .)
    RPAREN          reduce using rule 102 (pushcte -> .)
    COMA            reduce using rule 102 (pushcte -> .)
    RBRACE          reduce using rule 102 (pushcte -> .)
    SEMICOLON       reduce using rule 102 (pushcte -> .)
    RKEY            reduce using rule 102 (pushcte -> .)
    LPAREN          reduce using rule 102 (pushcte -> .)
    ID              reduce using rule 102 (pushcte -> .)
    CTE_I           reduce using rule 102 (pushcte -> .)
    CTE_F           reduce using rule 102 (pushcte -> .)
    CTE_S           reduce using rule 102 (pushcte -> .)
    TRUE            reduce using rule 102 (pushcte -> .)
    FALSE           reduce using rule 102 (pushcte -> .)

    pushcte                        shift and go to state 123

state 88

    (92) var_cte -> TRUE . pushcte
    (102) pushcte -> .

    TIMES           reduce using rule 102 (pushcte -> .)
    DIVIDE          reduce using rule 102 (pushcte -> .)
    PLUS            reduce using rule 102 (pushcte -> .)
    MINUS           reduce using rule 102 (pushcte -> .)
    LOWERTHAN       reduce using rule 102 (pushcte -> .)
    MORETHAN        reduce using rule 102 (pushcte -> .)
    LOWEREQ         reduce using rule 102 (pushcte -> .)
    MOREEQ          reduce using rule 102 (pushcte -> .)
    SAME            reduce using rule 102 (pushcte -> .)
    DIFFERENT       reduce using rule 102 (pushcte -> .)
    OR              reduce using rule 102 (pushcte -> .)
    AND             reduce using rule 102 (pushcte -> .)
    RPAREN          reduce using rule 102 (pushcte -> .)
    COMA            reduce using rule 102 (pushcte -> .)
    RBRACE          reduce using rule 102 (pushcte -> .)
    SEMICOLON       reduce using rule 102 (pushcte -> .)
    RKEY            reduce using rule 102 (pushcte -> .)
    LPAREN          reduce using rule 102 (pushcte -> .)
    ID              reduce using rule 102 (pushcte -> .)
    CTE_I           reduce using rule 102 (pushcte -> .)
    CTE_F           reduce using rule 102 (pushcte -> .)
    CTE_S           reduce using rule 102 (pushcte -> .)
    TRUE            reduce using rule 102 (pushcte -> .)
    FALSE           reduce using rule 102 (pushcte -> .)

    pushcte                        shift and go to state 124

state 89

    (93) var_cte -> FALSE . pushcte
    (102) pushcte -> .

    TIMES           reduce using rule 102 (pushcte -> .)
    DIVIDE          reduce using rule 102 (pushcte -> .)
    PLUS            reduce using rule 102 (pushcte -> .)
    MINUS           reduce using rule 102 (pushcte -> .)
    LOWERTHAN       reduce using rule 102 (pushcte -> .)
    MORETHAN        reduce using rule 102 (pushcte -> .)
    LOWEREQ         reduce using rule 102 (pushcte -> .)
    MOREEQ          reduce using rule 102 (pushcte -> .)
    SAME            reduce using rule 102 (pushcte -> .)
    DIFFERENT       reduce using rule 102 (pushcte -> .)
    OR              reduce using rule 102 (pushcte -> .)
    AND             reduce using rule 102 (pushcte -> .)
    RPAREN          reduce using rule 102 (pushcte -> .)
    COMA            reduce using rule 102 (pushcte -> .)
    RBRACE          reduce using rule 102 (pushcte -> .)
    SEMICOLON       reduce using rule 102 (pushcte -> .)
    RKEY            reduce using rule 102 (pushcte -> .)
    LPAREN          reduce using rule 102 (pushcte -> .)
    ID              reduce using rule 102 (pushcte -> .)
    CTE_I           reduce using rule 102 (pushcte -> .)
    CTE_F           reduce using rule 102 (pushcte -> .)
    CTE_S           reduce using rule 102 (pushcte -> .)
    TRUE            reduce using rule 102 (pushcte -> .)
    FALSE           reduce using rule 102 (pushcte -> .)

    pushcte                        shift and go to state 125

state 90

    (94) var_cte -> fcall .

    TIMES           reduce using rule 94 (var_cte -> fcall .)
    DIVIDE          reduce using rule 94 (var_cte -> fcall .)
    PLUS            reduce using rule 94 (var_cte -> fcall .)
    MINUS           reduce using rule 94 (var_cte -> fcall .)
    LOWERTHAN       reduce using rule 94 (var_cte -> fcall .)
    MORETHAN        reduce using rule 94 (var_cte -> fcall .)
    LOWEREQ         reduce using rule 94 (var_cte -> fcall .)
    MOREEQ          reduce using rule 94 (var_cte -> fcall .)
    SAME            reduce using rule 94 (var_cte -> fcall .)
    DIFFERENT       reduce using rule 94 (var_cte -> fcall .)
    OR              reduce using rule 94 (var_cte -> fcall .)
    AND             reduce using rule 94 (var_cte -> fcall .)
    RPAREN          reduce using rule 94 (var_cte -> fcall .)
    COMA            reduce using rule 94 (var_cte -> fcall .)
    RBRACE          reduce using rule 94 (var_cte -> fcall .)
    SEMICOLON       reduce using rule 94 (var_cte -> fcall .)
    RKEY            reduce using rule 94 (var_cte -> fcall .)
    LPAREN          reduce using rule 94 (var_cte -> fcall .)
    ID              reduce using rule 94 (var_cte -> fcall .)
    CTE_I           reduce using rule 94 (var_cte -> fcall .)
    CTE_F           reduce using rule 94 (var_cte -> fcall .)
    CTE_S           reduce using rule 94 (var_cte -> fcall .)
    TRUE            reduce using rule 94 (var_cte -> fcall .)
    FALSE           reduce using rule 94 (var_cte -> fcall .)


state 91

    (95) var_cte -> vcall .

    TIMES           reduce using rule 95 (var_cte -> vcall .)
    DIVIDE          reduce using rule 95 (var_cte -> vcall .)
    PLUS            reduce using rule 95 (var_cte -> vcall .)
    MINUS           reduce using rule 95 (var_cte -> vcall .)
    LOWERTHAN       reduce using rule 95 (var_cte -> vcall .)
    MORETHAN        reduce using rule 95 (var_cte -> vcall .)
    LOWEREQ         reduce using rule 95 (var_cte -> vcall .)
    MOREEQ          reduce using rule 95 (var_cte -> vcall .)
    SAME            reduce using rule 95 (var_cte -> vcall .)
    DIFFERENT       reduce using rule 95 (var_cte -> vcall .)
    OR              reduce using rule 95 (var_cte -> vcall .)
    AND             reduce using rule 95 (var_cte -> vcall .)
    RPAREN          reduce using rule 95 (var_cte -> vcall .)
    COMA            reduce using rule 95 (var_cte -> vcall .)
    RBRACE          reduce using rule 95 (var_cte -> vcall .)
    SEMICOLON       reduce using rule 95 (var_cte -> vcall .)
    RKEY            reduce using rule 95 (var_cte -> vcall .)
    LPAREN          reduce using rule 95 (var_cte -> vcall .)
    ID              reduce using rule 95 (var_cte -> vcall .)
    CTE_I           reduce using rule 95 (var_cte -> vcall .)
    CTE_F           reduce using rule 95 (var_cte -> vcall .)
    CTE_S           reduce using rule 95 (var_cte -> vcall .)
    TRUE            reduce using rule 95 (var_cte -> vcall .)
    FALSE           reduce using rule 95 (var_cte -> vcall .)


state 92

    (61) escrit -> PRINT LPAREN escriti . RPAREN SEMICOLON

    RPAREN          shift and go to state 126


state 93

    (62) escriti -> expres .
    (63) escriti -> expres . COMA escriti

    RPAREN          reduce using rule 62 (escriti -> expres .)
    COMA            shift and go to state 127


state 94

    (64) ciclo -> WHILE LPAREN expres . RPAREN LKEY bloq RKEY

    RPAREN          shift and go to state 128


state 95

    (65) leer -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 129


state 96

    (1) program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc . finmain
    (13) finmain -> .

    $end            reduce using rule 13 (finmain -> .)

    finmain                        shift and go to state 130

state 97

    (2) program -> PROGRAM COLON global program2 finglobal MAIN main1 mainc finmain .

    $end            reduce using rule 2 (program -> PROGRAM COLON global program2 finglobal MAIN main1 mainc finmain .)


state 98

    (20) function -> FUNCTION functype ID addInTable . LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (21) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY localvar RKEY
    (22) function -> FUNCTION functype ID addInTable . LPAREN funci RPAREN LKEY localvar bloq RKEY
    (23) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (24) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY localvar bloq RKEY
    (25) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY RKEY

    LPAREN          shift and go to state 131


state 99

    (19) vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .

    VAR             reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    VECTOR          reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    MAIN            reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    FUNCTION        reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    RKEY            reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    ID              reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    IF              reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    PRINT           reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    WHILE           reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    READ            reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)


state 100

    (56) asign -> ID pushid EQUAL pushop . expres resolverasignacion SEMICOLON
    (66) expres -> . exr
    (67) expres -> . exr log expres
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 132
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 101

    (57) asign -> ID pushid LBRACE exr . RBRACE EQUAL pushop expres SEMICOLON

    RBRACE          shift and go to state 133


state 102

    (76) fact -> LPAREN pushop . expres RPAREN popop
    (66) expres -> . exr
    (67) expres -> . exr log expres
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 134
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 103

    (58) cond -> IF LPAREN expres RPAREN . LKEY resif finif RKEY
    (59) cond -> IF LPAREN expres RPAREN . LKEY resif bloq finif RKEY
    (60) cond -> IF LPAREN expres RPAREN . LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY

    LKEY            shift and go to state 135


state 104

    (67) expres -> exr log . expres
    (66) expres -> . exr
    (67) expres -> . exr log expres
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    exr                            shift and go to state 77
    expres                         shift and go to state 136
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 105

    (86) log -> OR .

    LPAREN          reduce using rule 86 (log -> OR .)
    PLUS            reduce using rule 86 (log -> OR .)
    MINUS           reduce using rule 86 (log -> OR .)
    ID              reduce using rule 86 (log -> OR .)
    CTE_I           reduce using rule 86 (log -> OR .)
    CTE_F           reduce using rule 86 (log -> OR .)
    CTE_S           reduce using rule 86 (log -> OR .)
    TRUE            reduce using rule 86 (log -> OR .)
    FALSE           reduce using rule 86 (log -> OR .)


state 106

    (87) log -> AND .

    LPAREN          reduce using rule 87 (log -> AND .)
    PLUS            reduce using rule 87 (log -> AND .)
    MINUS           reduce using rule 87 (log -> AND .)
    ID              reduce using rule 87 (log -> AND .)
    CTE_I           reduce using rule 87 (log -> AND .)
    CTE_F           reduce using rule 87 (log -> AND .)
    CTE_S           reduce using rule 87 (log -> AND .)
    TRUE            reduce using rule 87 (log -> AND .)
    FALSE           reduce using rule 87 (log -> AND .)


state 107

    (69) exr -> ex rel . exr resrel
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    ex                             shift and go to state 78
    exr                            shift and go to state 137
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 108

    (80) rel -> LOWERTHAN .

    LPAREN          reduce using rule 80 (rel -> LOWERTHAN .)
    PLUS            reduce using rule 80 (rel -> LOWERTHAN .)
    MINUS           reduce using rule 80 (rel -> LOWERTHAN .)
    ID              reduce using rule 80 (rel -> LOWERTHAN .)
    CTE_I           reduce using rule 80 (rel -> LOWERTHAN .)
    CTE_F           reduce using rule 80 (rel -> LOWERTHAN .)
    CTE_S           reduce using rule 80 (rel -> LOWERTHAN .)
    TRUE            reduce using rule 80 (rel -> LOWERTHAN .)
    FALSE           reduce using rule 80 (rel -> LOWERTHAN .)


state 109

    (81) rel -> MORETHAN .

    LPAREN          reduce using rule 81 (rel -> MORETHAN .)
    PLUS            reduce using rule 81 (rel -> MORETHAN .)
    MINUS           reduce using rule 81 (rel -> MORETHAN .)
    ID              reduce using rule 81 (rel -> MORETHAN .)
    CTE_I           reduce using rule 81 (rel -> MORETHAN .)
    CTE_F           reduce using rule 81 (rel -> MORETHAN .)
    CTE_S           reduce using rule 81 (rel -> MORETHAN .)
    TRUE            reduce using rule 81 (rel -> MORETHAN .)
    FALSE           reduce using rule 81 (rel -> MORETHAN .)


state 110

    (82) rel -> LOWEREQ .

    LPAREN          reduce using rule 82 (rel -> LOWEREQ .)
    PLUS            reduce using rule 82 (rel -> LOWEREQ .)
    MINUS           reduce using rule 82 (rel -> LOWEREQ .)
    ID              reduce using rule 82 (rel -> LOWEREQ .)
    CTE_I           reduce using rule 82 (rel -> LOWEREQ .)
    CTE_F           reduce using rule 82 (rel -> LOWEREQ .)
    CTE_S           reduce using rule 82 (rel -> LOWEREQ .)
    TRUE            reduce using rule 82 (rel -> LOWEREQ .)
    FALSE           reduce using rule 82 (rel -> LOWEREQ .)


state 111

    (83) rel -> MOREEQ .

    LPAREN          reduce using rule 83 (rel -> MOREEQ .)
    PLUS            reduce using rule 83 (rel -> MOREEQ .)
    MINUS           reduce using rule 83 (rel -> MOREEQ .)
    ID              reduce using rule 83 (rel -> MOREEQ .)
    CTE_I           reduce using rule 83 (rel -> MOREEQ .)
    CTE_F           reduce using rule 83 (rel -> MOREEQ .)
    CTE_S           reduce using rule 83 (rel -> MOREEQ .)
    TRUE            reduce using rule 83 (rel -> MOREEQ .)
    FALSE           reduce using rule 83 (rel -> MOREEQ .)


state 112

    (84) rel -> SAME .

    LPAREN          reduce using rule 84 (rel -> SAME .)
    PLUS            reduce using rule 84 (rel -> SAME .)
    MINUS           reduce using rule 84 (rel -> SAME .)
    ID              reduce using rule 84 (rel -> SAME .)
    CTE_I           reduce using rule 84 (rel -> SAME .)
    CTE_F           reduce using rule 84 (rel -> SAME .)
    CTE_S           reduce using rule 84 (rel -> SAME .)
    TRUE            reduce using rule 84 (rel -> SAME .)
    FALSE           reduce using rule 84 (rel -> SAME .)


state 113

    (85) rel -> DIFFERENT .

    LPAREN          reduce using rule 85 (rel -> DIFFERENT .)
    PLUS            reduce using rule 85 (rel -> DIFFERENT .)
    MINUS           reduce using rule 85 (rel -> DIFFERENT .)
    ID              reduce using rule 85 (rel -> DIFFERENT .)
    CTE_I           reduce using rule 85 (rel -> DIFFERENT .)
    CTE_F           reduce using rule 85 (rel -> DIFFERENT .)
    CTE_S           reduce using rule 85 (rel -> DIFFERENT .)
    TRUE            reduce using rule 85 (rel -> DIFFERENT .)
    FALSE           reduce using rule 85 (rel -> DIFFERENT .)


state 114

    (70) ex -> term resterm .
    (71) ex -> term resterm . PLUS pushop ex
    (72) ex -> term resterm . MINUS pushop ex

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LOWERTHAN       reduce using rule 70 (ex -> term resterm .)
    MORETHAN        reduce using rule 70 (ex -> term resterm .)
    LOWEREQ         reduce using rule 70 (ex -> term resterm .)
    MOREEQ          reduce using rule 70 (ex -> term resterm .)
    SAME            reduce using rule 70 (ex -> term resterm .)
    DIFFERENT       reduce using rule 70 (ex -> term resterm .)
    OR              reduce using rule 70 (ex -> term resterm .)
    AND             reduce using rule 70 (ex -> term resterm .)
    RPAREN          reduce using rule 70 (ex -> term resterm .)
    COMA            reduce using rule 70 (ex -> term resterm .)
    RBRACE          reduce using rule 70 (ex -> term resterm .)
    SEMICOLON       reduce using rule 70 (ex -> term resterm .)
    RKEY            reduce using rule 70 (ex -> term resterm .)
    LPAREN          reduce using rule 70 (ex -> term resterm .)
    ID              reduce using rule 70 (ex -> term resterm .)
    CTE_I           reduce using rule 70 (ex -> term resterm .)
    CTE_F           reduce using rule 70 (ex -> term resterm .)
    CTE_S           reduce using rule 70 (ex -> term resterm .)
    TRUE            reduce using rule 70 (ex -> term resterm .)
    FALSE           reduce using rule 70 (ex -> term resterm .)
    PLUS            shift and go to state 138
    MINUS           shift and go to state 139

  ! PLUS            [ reduce using rule 70 (ex -> term resterm .) ]
  ! MINUS           [ reduce using rule 70 (ex -> term resterm .) ]


state 115

    (78) fact -> PLUS var_cte .

    TIMES           reduce using rule 78 (fact -> PLUS var_cte .)
    DIVIDE          reduce using rule 78 (fact -> PLUS var_cte .)
    PLUS            reduce using rule 78 (fact -> PLUS var_cte .)
    MINUS           reduce using rule 78 (fact -> PLUS var_cte .)
    LOWERTHAN       reduce using rule 78 (fact -> PLUS var_cte .)
    MORETHAN        reduce using rule 78 (fact -> PLUS var_cte .)
    LOWEREQ         reduce using rule 78 (fact -> PLUS var_cte .)
    MOREEQ          reduce using rule 78 (fact -> PLUS var_cte .)
    SAME            reduce using rule 78 (fact -> PLUS var_cte .)
    DIFFERENT       reduce using rule 78 (fact -> PLUS var_cte .)
    OR              reduce using rule 78 (fact -> PLUS var_cte .)
    AND             reduce using rule 78 (fact -> PLUS var_cte .)
    RPAREN          reduce using rule 78 (fact -> PLUS var_cte .)
    COMA            reduce using rule 78 (fact -> PLUS var_cte .)
    RBRACE          reduce using rule 78 (fact -> PLUS var_cte .)
    SEMICOLON       reduce using rule 78 (fact -> PLUS var_cte .)
    RKEY            reduce using rule 78 (fact -> PLUS var_cte .)
    LPAREN          reduce using rule 78 (fact -> PLUS var_cte .)
    ID              reduce using rule 78 (fact -> PLUS var_cte .)
    CTE_I           reduce using rule 78 (fact -> PLUS var_cte .)
    CTE_F           reduce using rule 78 (fact -> PLUS var_cte .)
    CTE_S           reduce using rule 78 (fact -> PLUS var_cte .)
    TRUE            reduce using rule 78 (fact -> PLUS var_cte .)
    FALSE           reduce using rule 78 (fact -> PLUS var_cte .)


state 116

    (79) fact -> MINUS var_cte .

    TIMES           reduce using rule 79 (fact -> MINUS var_cte .)
    DIVIDE          reduce using rule 79 (fact -> MINUS var_cte .)
    PLUS            reduce using rule 79 (fact -> MINUS var_cte .)
    MINUS           reduce using rule 79 (fact -> MINUS var_cte .)
    LOWERTHAN       reduce using rule 79 (fact -> MINUS var_cte .)
    MORETHAN        reduce using rule 79 (fact -> MINUS var_cte .)
    LOWEREQ         reduce using rule 79 (fact -> MINUS var_cte .)
    MOREEQ          reduce using rule 79 (fact -> MINUS var_cte .)
    SAME            reduce using rule 79 (fact -> MINUS var_cte .)
    DIFFERENT       reduce using rule 79 (fact -> MINUS var_cte .)
    OR              reduce using rule 79 (fact -> MINUS var_cte .)
    AND             reduce using rule 79 (fact -> MINUS var_cte .)
    RPAREN          reduce using rule 79 (fact -> MINUS var_cte .)
    COMA            reduce using rule 79 (fact -> MINUS var_cte .)
    RBRACE          reduce using rule 79 (fact -> MINUS var_cte .)
    SEMICOLON       reduce using rule 79 (fact -> MINUS var_cte .)
    RKEY            reduce using rule 79 (fact -> MINUS var_cte .)
    LPAREN          reduce using rule 79 (fact -> MINUS var_cte .)
    ID              reduce using rule 79 (fact -> MINUS var_cte .)
    CTE_I           reduce using rule 79 (fact -> MINUS var_cte .)
    CTE_F           reduce using rule 79 (fact -> MINUS var_cte .)
    CTE_S           reduce using rule 79 (fact -> MINUS var_cte .)
    TRUE            reduce using rule 79 (fact -> MINUS var_cte .)
    FALSE           reduce using rule 79 (fact -> MINUS var_cte .)


state 117

    (73) term -> fact resfact .
    (74) term -> fact resfact . TIMES pushop term
    (75) term -> fact resfact . DIVIDE pushop term

    PLUS            reduce using rule 73 (term -> fact resfact .)
    MINUS           reduce using rule 73 (term -> fact resfact .)
    LOWERTHAN       reduce using rule 73 (term -> fact resfact .)
    MORETHAN        reduce using rule 73 (term -> fact resfact .)
    LOWEREQ         reduce using rule 73 (term -> fact resfact .)
    MOREEQ          reduce using rule 73 (term -> fact resfact .)
    SAME            reduce using rule 73 (term -> fact resfact .)
    DIFFERENT       reduce using rule 73 (term -> fact resfact .)
    OR              reduce using rule 73 (term -> fact resfact .)
    AND             reduce using rule 73 (term -> fact resfact .)
    RPAREN          reduce using rule 73 (term -> fact resfact .)
    COMA            reduce using rule 73 (term -> fact resfact .)
    RBRACE          reduce using rule 73 (term -> fact resfact .)
    SEMICOLON       reduce using rule 73 (term -> fact resfact .)
    RKEY            reduce using rule 73 (term -> fact resfact .)
    LPAREN          reduce using rule 73 (term -> fact resfact .)
    ID              reduce using rule 73 (term -> fact resfact .)
    CTE_I           reduce using rule 73 (term -> fact resfact .)
    CTE_F           reduce using rule 73 (term -> fact resfact .)
    CTE_S           reduce using rule 73 (term -> fact resfact .)
    TRUE            reduce using rule 73 (term -> fact resfact .)
    FALSE           reduce using rule 73 (term -> fact resfact .)
    TIMES           shift and go to state 140
    DIVIDE          shift and go to state 141


state 118

    (88) var_cte -> ID pushid .

    TIMES           reduce using rule 88 (var_cte -> ID pushid .)
    DIVIDE          reduce using rule 88 (var_cte -> ID pushid .)
    PLUS            reduce using rule 88 (var_cte -> ID pushid .)
    MINUS           reduce using rule 88 (var_cte -> ID pushid .)
    LOWERTHAN       reduce using rule 88 (var_cte -> ID pushid .)
    MORETHAN        reduce using rule 88 (var_cte -> ID pushid .)
    LOWEREQ         reduce using rule 88 (var_cte -> ID pushid .)
    MOREEQ          reduce using rule 88 (var_cte -> ID pushid .)
    SAME            reduce using rule 88 (var_cte -> ID pushid .)
    DIFFERENT       reduce using rule 88 (var_cte -> ID pushid .)
    OR              reduce using rule 88 (var_cte -> ID pushid .)
    AND             reduce using rule 88 (var_cte -> ID pushid .)
    RPAREN          reduce using rule 88 (var_cte -> ID pushid .)
    COMA            reduce using rule 88 (var_cte -> ID pushid .)
    RBRACE          reduce using rule 88 (var_cte -> ID pushid .)
    SEMICOLON       reduce using rule 88 (var_cte -> ID pushid .)
    RKEY            reduce using rule 88 (var_cte -> ID pushid .)
    LPAREN          reduce using rule 88 (var_cte -> ID pushid .)
    ID              reduce using rule 88 (var_cte -> ID pushid .)
    CTE_I           reduce using rule 88 (var_cte -> ID pushid .)
    CTE_F           reduce using rule 88 (var_cte -> ID pushid .)
    CTE_S           reduce using rule 88 (var_cte -> ID pushid .)
    TRUE            reduce using rule 88 (var_cte -> ID pushid .)
    FALSE           reduce using rule 88 (var_cte -> ID pushid .)


state 119

    (96) fcall -> ID LPAREN . fcall1 RPAREN
    (97) fcall -> ID LPAREN . RPAREN
    (98) fcall1 -> . expres
    (99) fcall1 -> . expres COMA fcall1
    (66) expres -> . exr
    (67) expres -> . exr log expres
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    RPAREN          shift and go to state 143
    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    fcall1                         shift and go to state 142
    expres                         shift and go to state 144
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 120

    (100) vcall -> ID LBRACE . expres RBRACE
    (66) expres -> . exr
    (67) expres -> . exr log expres
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 145
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 121

    (89) var_cte -> CTE_I pushcte .

    TIMES           reduce using rule 89 (var_cte -> CTE_I pushcte .)
    DIVIDE          reduce using rule 89 (var_cte -> CTE_I pushcte .)
    PLUS            reduce using rule 89 (var_cte -> CTE_I pushcte .)
    MINUS           reduce using rule 89 (var_cte -> CTE_I pushcte .)
    LOWERTHAN       reduce using rule 89 (var_cte -> CTE_I pushcte .)
    MORETHAN        reduce using rule 89 (var_cte -> CTE_I pushcte .)
    LOWEREQ         reduce using rule 89 (var_cte -> CTE_I pushcte .)
    MOREEQ          reduce using rule 89 (var_cte -> CTE_I pushcte .)
    SAME            reduce using rule 89 (var_cte -> CTE_I pushcte .)
    DIFFERENT       reduce using rule 89 (var_cte -> CTE_I pushcte .)
    OR              reduce using rule 89 (var_cte -> CTE_I pushcte .)
    AND             reduce using rule 89 (var_cte -> CTE_I pushcte .)
    RPAREN          reduce using rule 89 (var_cte -> CTE_I pushcte .)
    COMA            reduce using rule 89 (var_cte -> CTE_I pushcte .)
    RBRACE          reduce using rule 89 (var_cte -> CTE_I pushcte .)
    SEMICOLON       reduce using rule 89 (var_cte -> CTE_I pushcte .)
    RKEY            reduce using rule 89 (var_cte -> CTE_I pushcte .)
    LPAREN          reduce using rule 89 (var_cte -> CTE_I pushcte .)
    ID              reduce using rule 89 (var_cte -> CTE_I pushcte .)
    CTE_I           reduce using rule 89 (var_cte -> CTE_I pushcte .)
    CTE_F           reduce using rule 89 (var_cte -> CTE_I pushcte .)
    CTE_S           reduce using rule 89 (var_cte -> CTE_I pushcte .)
    TRUE            reduce using rule 89 (var_cte -> CTE_I pushcte .)
    FALSE           reduce using rule 89 (var_cte -> CTE_I pushcte .)


state 122

    (90) var_cte -> CTE_F pushcte .

    TIMES           reduce using rule 90 (var_cte -> CTE_F pushcte .)
    DIVIDE          reduce using rule 90 (var_cte -> CTE_F pushcte .)
    PLUS            reduce using rule 90 (var_cte -> CTE_F pushcte .)
    MINUS           reduce using rule 90 (var_cte -> CTE_F pushcte .)
    LOWERTHAN       reduce using rule 90 (var_cte -> CTE_F pushcte .)
    MORETHAN        reduce using rule 90 (var_cte -> CTE_F pushcte .)
    LOWEREQ         reduce using rule 90 (var_cte -> CTE_F pushcte .)
    MOREEQ          reduce using rule 90 (var_cte -> CTE_F pushcte .)
    SAME            reduce using rule 90 (var_cte -> CTE_F pushcte .)
    DIFFERENT       reduce using rule 90 (var_cte -> CTE_F pushcte .)
    OR              reduce using rule 90 (var_cte -> CTE_F pushcte .)
    AND             reduce using rule 90 (var_cte -> CTE_F pushcte .)
    RPAREN          reduce using rule 90 (var_cte -> CTE_F pushcte .)
    COMA            reduce using rule 90 (var_cte -> CTE_F pushcte .)
    RBRACE          reduce using rule 90 (var_cte -> CTE_F pushcte .)
    SEMICOLON       reduce using rule 90 (var_cte -> CTE_F pushcte .)
    RKEY            reduce using rule 90 (var_cte -> CTE_F pushcte .)
    LPAREN          reduce using rule 90 (var_cte -> CTE_F pushcte .)
    ID              reduce using rule 90 (var_cte -> CTE_F pushcte .)
    CTE_I           reduce using rule 90 (var_cte -> CTE_F pushcte .)
    CTE_F           reduce using rule 90 (var_cte -> CTE_F pushcte .)
    CTE_S           reduce using rule 90 (var_cte -> CTE_F pushcte .)
    TRUE            reduce using rule 90 (var_cte -> CTE_F pushcte .)
    FALSE           reduce using rule 90 (var_cte -> CTE_F pushcte .)


state 123

    (91) var_cte -> CTE_S pushcte .

    TIMES           reduce using rule 91 (var_cte -> CTE_S pushcte .)
    DIVIDE          reduce using rule 91 (var_cte -> CTE_S pushcte .)
    PLUS            reduce using rule 91 (var_cte -> CTE_S pushcte .)
    MINUS           reduce using rule 91 (var_cte -> CTE_S pushcte .)
    LOWERTHAN       reduce using rule 91 (var_cte -> CTE_S pushcte .)
    MORETHAN        reduce using rule 91 (var_cte -> CTE_S pushcte .)
    LOWEREQ         reduce using rule 91 (var_cte -> CTE_S pushcte .)
    MOREEQ          reduce using rule 91 (var_cte -> CTE_S pushcte .)
    SAME            reduce using rule 91 (var_cte -> CTE_S pushcte .)
    DIFFERENT       reduce using rule 91 (var_cte -> CTE_S pushcte .)
    OR              reduce using rule 91 (var_cte -> CTE_S pushcte .)
    AND             reduce using rule 91 (var_cte -> CTE_S pushcte .)
    RPAREN          reduce using rule 91 (var_cte -> CTE_S pushcte .)
    COMA            reduce using rule 91 (var_cte -> CTE_S pushcte .)
    RBRACE          reduce using rule 91 (var_cte -> CTE_S pushcte .)
    SEMICOLON       reduce using rule 91 (var_cte -> CTE_S pushcte .)
    RKEY            reduce using rule 91 (var_cte -> CTE_S pushcte .)
    LPAREN          reduce using rule 91 (var_cte -> CTE_S pushcte .)
    ID              reduce using rule 91 (var_cte -> CTE_S pushcte .)
    CTE_I           reduce using rule 91 (var_cte -> CTE_S pushcte .)
    CTE_F           reduce using rule 91 (var_cte -> CTE_S pushcte .)
    CTE_S           reduce using rule 91 (var_cte -> CTE_S pushcte .)
    TRUE            reduce using rule 91 (var_cte -> CTE_S pushcte .)
    FALSE           reduce using rule 91 (var_cte -> CTE_S pushcte .)


state 124

    (92) var_cte -> TRUE pushcte .

    TIMES           reduce using rule 92 (var_cte -> TRUE pushcte .)
    DIVIDE          reduce using rule 92 (var_cte -> TRUE pushcte .)
    PLUS            reduce using rule 92 (var_cte -> TRUE pushcte .)
    MINUS           reduce using rule 92 (var_cte -> TRUE pushcte .)
    LOWERTHAN       reduce using rule 92 (var_cte -> TRUE pushcte .)
    MORETHAN        reduce using rule 92 (var_cte -> TRUE pushcte .)
    LOWEREQ         reduce using rule 92 (var_cte -> TRUE pushcte .)
    MOREEQ          reduce using rule 92 (var_cte -> TRUE pushcte .)
    SAME            reduce using rule 92 (var_cte -> TRUE pushcte .)
    DIFFERENT       reduce using rule 92 (var_cte -> TRUE pushcte .)
    OR              reduce using rule 92 (var_cte -> TRUE pushcte .)
    AND             reduce using rule 92 (var_cte -> TRUE pushcte .)
    RPAREN          reduce using rule 92 (var_cte -> TRUE pushcte .)
    COMA            reduce using rule 92 (var_cte -> TRUE pushcte .)
    RBRACE          reduce using rule 92 (var_cte -> TRUE pushcte .)
    SEMICOLON       reduce using rule 92 (var_cte -> TRUE pushcte .)
    RKEY            reduce using rule 92 (var_cte -> TRUE pushcte .)
    LPAREN          reduce using rule 92 (var_cte -> TRUE pushcte .)
    ID              reduce using rule 92 (var_cte -> TRUE pushcte .)
    CTE_I           reduce using rule 92 (var_cte -> TRUE pushcte .)
    CTE_F           reduce using rule 92 (var_cte -> TRUE pushcte .)
    CTE_S           reduce using rule 92 (var_cte -> TRUE pushcte .)
    TRUE            reduce using rule 92 (var_cte -> TRUE pushcte .)
    FALSE           reduce using rule 92 (var_cte -> TRUE pushcte .)


state 125

    (93) var_cte -> FALSE pushcte .

    TIMES           reduce using rule 93 (var_cte -> FALSE pushcte .)
    DIVIDE          reduce using rule 93 (var_cte -> FALSE pushcte .)
    PLUS            reduce using rule 93 (var_cte -> FALSE pushcte .)
    MINUS           reduce using rule 93 (var_cte -> FALSE pushcte .)
    LOWERTHAN       reduce using rule 93 (var_cte -> FALSE pushcte .)
    MORETHAN        reduce using rule 93 (var_cte -> FALSE pushcte .)
    LOWEREQ         reduce using rule 93 (var_cte -> FALSE pushcte .)
    MOREEQ          reduce using rule 93 (var_cte -> FALSE pushcte .)
    SAME            reduce using rule 93 (var_cte -> FALSE pushcte .)
    DIFFERENT       reduce using rule 93 (var_cte -> FALSE pushcte .)
    OR              reduce using rule 93 (var_cte -> FALSE pushcte .)
    AND             reduce using rule 93 (var_cte -> FALSE pushcte .)
    RPAREN          reduce using rule 93 (var_cte -> FALSE pushcte .)
    COMA            reduce using rule 93 (var_cte -> FALSE pushcte .)
    RBRACE          reduce using rule 93 (var_cte -> FALSE pushcte .)
    SEMICOLON       reduce using rule 93 (var_cte -> FALSE pushcte .)
    RKEY            reduce using rule 93 (var_cte -> FALSE pushcte .)
    LPAREN          reduce using rule 93 (var_cte -> FALSE pushcte .)
    ID              reduce using rule 93 (var_cte -> FALSE pushcte .)
    CTE_I           reduce using rule 93 (var_cte -> FALSE pushcte .)
    CTE_F           reduce using rule 93 (var_cte -> FALSE pushcte .)
    CTE_S           reduce using rule 93 (var_cte -> FALSE pushcte .)
    TRUE            reduce using rule 93 (var_cte -> FALSE pushcte .)
    FALSE           reduce using rule 93 (var_cte -> FALSE pushcte .)


state 126

    (61) escrit -> PRINT LPAREN escriti RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 146


state 127

    (63) escriti -> expres COMA . escriti
    (62) escriti -> . expres
    (63) escriti -> . expres COMA escriti
    (66) expres -> . exr
    (67) expres -> . exr log expres
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 93
    escriti                        shift and go to state 147
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 128

    (64) ciclo -> WHILE LPAREN expres RPAREN . LKEY bloq RKEY

    LKEY            shift and go to state 148


state 129

    (65) leer -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 149


state 130

    (1) program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc finmain .

    $end            reduce using rule 1 (program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc finmain .)


state 131

    (20) function -> FUNCTION functype ID addInTable LPAREN . funci RPAREN LKEY localvar bloq return expres RKEY
    (21) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY localvar RKEY
    (22) function -> FUNCTION functype ID addInTable LPAREN . funci RPAREN LKEY localvar bloq RKEY
    (23) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY localvar bloq return expres RKEY
    (24) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY localvar bloq RKEY
    (25) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY RKEY
    (32) funci -> . tipo ID
    (33) funci -> . tipo ID COMA funci
    (34) funci -> . empty
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . STRING
    (18) tipo -> . BOOL
    (101) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 151
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING          shift and go to state 18
    BOOL            shift and go to state 19

  ! RPAREN          [ reduce using rule 101 (empty -> .) ]

    funci                          shift and go to state 150
    tipo                           shift and go to state 152
    empty                          shift and go to state 153

state 132

    (56) asign -> ID pushid EQUAL pushop expres . resolverasignacion SEMICOLON
    (106) resolverasignacion -> .

    SEMICOLON       reduce using rule 106 (resolverasignacion -> .)

    resolverasignacion             shift and go to state 154

state 133

    (57) asign -> ID pushid LBRACE exr RBRACE . EQUAL pushop expres SEMICOLON

    EQUAL           shift and go to state 155


state 134

    (76) fact -> LPAREN pushop expres . RPAREN popop

    RPAREN          shift and go to state 156


state 135

    (58) cond -> IF LPAREN expres RPAREN LKEY . resif finif RKEY
    (59) cond -> IF LPAREN expres RPAREN LKEY . resif bloq finif RKEY
    (60) cond -> IF LPAREN expres RPAREN LKEY . resif bloq finif RKEY ELSE LKEY bloq RKEY
    (110) resif -> .

    ID              reduce using rule 110 (resif -> .)
    IF              reduce using rule 110 (resif -> .)
    PRINT           reduce using rule 110 (resif -> .)
    WHILE           reduce using rule 110 (resif -> .)
    READ            reduce using rule 110 (resif -> .)
    RKEY            reduce using rule 110 (resif -> .)

    resif                          shift and go to state 157

state 136

    (67) expres -> exr log expres .

    RPAREN          reduce using rule 67 (expres -> exr log expres .)
    COMA            reduce using rule 67 (expres -> exr log expres .)
    SEMICOLON       reduce using rule 67 (expres -> exr log expres .)
    RBRACE          reduce using rule 67 (expres -> exr log expres .)
    RKEY            reduce using rule 67 (expres -> exr log expres .)
    LPAREN          reduce using rule 67 (expres -> exr log expres .)
    PLUS            reduce using rule 67 (expres -> exr log expres .)
    MINUS           reduce using rule 67 (expres -> exr log expres .)
    ID              reduce using rule 67 (expres -> exr log expres .)
    CTE_I           reduce using rule 67 (expres -> exr log expres .)
    CTE_F           reduce using rule 67 (expres -> exr log expres .)
    CTE_S           reduce using rule 67 (expres -> exr log expres .)
    TRUE            reduce using rule 67 (expres -> exr log expres .)
    FALSE           reduce using rule 67 (expres -> exr log expres .)


state 137

    (69) exr -> ex rel exr . resrel
    (109) resrel -> .

    OR              reduce using rule 109 (resrel -> .)
    AND             reduce using rule 109 (resrel -> .)
    RPAREN          reduce using rule 109 (resrel -> .)
    COMA            reduce using rule 109 (resrel -> .)
    RBRACE          reduce using rule 109 (resrel -> .)
    SEMICOLON       reduce using rule 109 (resrel -> .)
    RKEY            reduce using rule 109 (resrel -> .)
    LPAREN          reduce using rule 109 (resrel -> .)
    PLUS            reduce using rule 109 (resrel -> .)
    MINUS           reduce using rule 109 (resrel -> .)
    ID              reduce using rule 109 (resrel -> .)
    CTE_I           reduce using rule 109 (resrel -> .)
    CTE_F           reduce using rule 109 (resrel -> .)
    CTE_S           reduce using rule 109 (resrel -> .)
    TRUE            reduce using rule 109 (resrel -> .)
    FALSE           reduce using rule 109 (resrel -> .)

    resrel                         shift and go to state 158

state 138

    (71) ex -> term resterm PLUS . pushop ex
    (104) pushop -> .

    LPAREN          reduce using rule 104 (pushop -> .)
    PLUS            reduce using rule 104 (pushop -> .)
    MINUS           reduce using rule 104 (pushop -> .)
    ID              reduce using rule 104 (pushop -> .)
    CTE_I           reduce using rule 104 (pushop -> .)
    CTE_F           reduce using rule 104 (pushop -> .)
    CTE_S           reduce using rule 104 (pushop -> .)
    TRUE            reduce using rule 104 (pushop -> .)
    FALSE           reduce using rule 104 (pushop -> .)

    pushop                         shift and go to state 159

state 139

    (72) ex -> term resterm MINUS . pushop ex
    (104) pushop -> .

    LPAREN          reduce using rule 104 (pushop -> .)
    PLUS            reduce using rule 104 (pushop -> .)
    MINUS           reduce using rule 104 (pushop -> .)
    ID              reduce using rule 104 (pushop -> .)
    CTE_I           reduce using rule 104 (pushop -> .)
    CTE_F           reduce using rule 104 (pushop -> .)
    CTE_S           reduce using rule 104 (pushop -> .)
    TRUE            reduce using rule 104 (pushop -> .)
    FALSE           reduce using rule 104 (pushop -> .)

    pushop                         shift and go to state 160

state 140

    (74) term -> fact resfact TIMES . pushop term
    (104) pushop -> .

    LPAREN          reduce using rule 104 (pushop -> .)
    PLUS            reduce using rule 104 (pushop -> .)
    MINUS           reduce using rule 104 (pushop -> .)
    ID              reduce using rule 104 (pushop -> .)
    CTE_I           reduce using rule 104 (pushop -> .)
    CTE_F           reduce using rule 104 (pushop -> .)
    CTE_S           reduce using rule 104 (pushop -> .)
    TRUE            reduce using rule 104 (pushop -> .)
    FALSE           reduce using rule 104 (pushop -> .)

    pushop                         shift and go to state 161

state 141

    (75) term -> fact resfact DIVIDE . pushop term
    (104) pushop -> .

    LPAREN          reduce using rule 104 (pushop -> .)
    PLUS            reduce using rule 104 (pushop -> .)
    MINUS           reduce using rule 104 (pushop -> .)
    ID              reduce using rule 104 (pushop -> .)
    CTE_I           reduce using rule 104 (pushop -> .)
    CTE_F           reduce using rule 104 (pushop -> .)
    CTE_S           reduce using rule 104 (pushop -> .)
    TRUE            reduce using rule 104 (pushop -> .)
    FALSE           reduce using rule 104 (pushop -> .)

    pushop                         shift and go to state 162

state 142

    (96) fcall -> ID LPAREN fcall1 . RPAREN

    RPAREN          shift and go to state 163


state 143

    (97) fcall -> ID LPAREN RPAREN .

    TIMES           reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    LOWERTHAN       reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    MORETHAN        reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    LOWEREQ         reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    MOREEQ          reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    SAME            reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    DIFFERENT       reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    OR              reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    AND             reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    COMA            reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    RBRACE          reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    RKEY            reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    LPAREN          reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    ID              reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    CTE_I           reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    CTE_F           reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    CTE_S           reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    TRUE            reduce using rule 97 (fcall -> ID LPAREN RPAREN .)
    FALSE           reduce using rule 97 (fcall -> ID LPAREN RPAREN .)


state 144

    (98) fcall1 -> expres .
    (99) fcall1 -> expres . COMA fcall1

    RPAREN          reduce using rule 98 (fcall1 -> expres .)
    COMA            shift and go to state 164


state 145

    (100) vcall -> ID LBRACE expres . RBRACE

    RBRACE          shift and go to state 165


state 146

    (61) escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .

    ID              reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    IF              reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    PRINT           reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    WHILE           reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    READ            reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    RKEY            reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    RETURN          reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    LPAREN          reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    PLUS            reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    MINUS           reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    CTE_I           reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    CTE_F           reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    CTE_S           reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    TRUE            reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    FALSE           reduce using rule 61 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)


state 147

    (63) escriti -> expres COMA escriti .

    RPAREN          reduce using rule 63 (escriti -> expres COMA escriti .)


state 148

    (64) ciclo -> WHILE LPAREN expres RPAREN LKEY . bloq RKEY
    (49) bloq -> . estat
    (50) bloq -> . estat bloq
    (51) estat -> . asign
    (52) estat -> . cond
    (53) estat -> . escrit
    (54) estat -> . ciclo
    (55) estat -> . leer
    (56) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (57) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (58) cond -> . IF LPAREN expres RPAREN LKEY resif finif RKEY
    (59) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY
    (60) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY
    (61) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (64) ciclo -> . WHILE LPAREN expres RPAREN LKEY bloq RKEY
    (65) leer -> . READ LPAREN ID RPAREN SEMICOLON

    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

    bloq                           shift and go to state 166
    estat                          shift and go to state 33
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 149

    (65) leer -> READ LPAREN ID RPAREN SEMICOLON .

    ID              reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    READ            reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    RKEY            reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    LPAREN          reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    PLUS            reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    MINUS           reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    CTE_I           reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    CTE_F           reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    CTE_S           reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    TRUE            reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    FALSE           reduce using rule 65 (leer -> READ LPAREN ID RPAREN SEMICOLON .)


state 150

    (20) function -> FUNCTION functype ID addInTable LPAREN funci . RPAREN LKEY localvar bloq return expres RKEY
    (22) function -> FUNCTION functype ID addInTable LPAREN funci . RPAREN LKEY localvar bloq RKEY

    RPAREN          shift and go to state 167


state 151

    (21) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY localvar RKEY
    (23) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY localvar bloq return expres RKEY
    (24) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY localvar bloq RKEY
    (25) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY RKEY

    LKEY            shift and go to state 168


state 152

    (32) funci -> tipo . ID
    (33) funci -> tipo . ID COMA funci

    ID              shift and go to state 169


state 153

    (34) funci -> empty .

    RPAREN          reduce using rule 34 (funci -> empty .)


state 154

    (56) asign -> ID pushid EQUAL pushop expres resolverasignacion . SEMICOLON

    SEMICOLON       shift and go to state 170


state 155

    (57) asign -> ID pushid LBRACE exr RBRACE EQUAL . pushop expres SEMICOLON
    (104) pushop -> .

    LPAREN          reduce using rule 104 (pushop -> .)
    PLUS            reduce using rule 104 (pushop -> .)
    MINUS           reduce using rule 104 (pushop -> .)
    ID              reduce using rule 104 (pushop -> .)
    CTE_I           reduce using rule 104 (pushop -> .)
    CTE_F           reduce using rule 104 (pushop -> .)
    CTE_S           reduce using rule 104 (pushop -> .)
    TRUE            reduce using rule 104 (pushop -> .)
    FALSE           reduce using rule 104 (pushop -> .)

    pushop                         shift and go to state 171

state 156

    (76) fact -> LPAREN pushop expres RPAREN . popop
    (105) popop -> .

    TIMES           reduce using rule 105 (popop -> .)
    DIVIDE          reduce using rule 105 (popop -> .)
    PLUS            reduce using rule 105 (popop -> .)
    MINUS           reduce using rule 105 (popop -> .)
    LOWERTHAN       reduce using rule 105 (popop -> .)
    MORETHAN        reduce using rule 105 (popop -> .)
    LOWEREQ         reduce using rule 105 (popop -> .)
    MOREEQ          reduce using rule 105 (popop -> .)
    SAME            reduce using rule 105 (popop -> .)
    DIFFERENT       reduce using rule 105 (popop -> .)
    OR              reduce using rule 105 (popop -> .)
    AND             reduce using rule 105 (popop -> .)
    RPAREN          reduce using rule 105 (popop -> .)
    COMA            reduce using rule 105 (popop -> .)
    RBRACE          reduce using rule 105 (popop -> .)
    SEMICOLON       reduce using rule 105 (popop -> .)
    RKEY            reduce using rule 105 (popop -> .)
    LPAREN          reduce using rule 105 (popop -> .)
    ID              reduce using rule 105 (popop -> .)
    CTE_I           reduce using rule 105 (popop -> .)
    CTE_F           reduce using rule 105 (popop -> .)
    CTE_S           reduce using rule 105 (popop -> .)
    TRUE            reduce using rule 105 (popop -> .)
    FALSE           reduce using rule 105 (popop -> .)

    popop                          shift and go to state 172

state 157

    (58) cond -> IF LPAREN expres RPAREN LKEY resif . finif RKEY
    (59) cond -> IF LPAREN expres RPAREN LKEY resif . bloq finif RKEY
    (60) cond -> IF LPAREN expres RPAREN LKEY resif . bloq finif RKEY ELSE LKEY bloq RKEY
    (111) finif -> .
    (49) bloq -> . estat
    (50) bloq -> . estat bloq
    (51) estat -> . asign
    (52) estat -> . cond
    (53) estat -> . escrit
    (54) estat -> . ciclo
    (55) estat -> . leer
    (56) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (57) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (58) cond -> . IF LPAREN expres RPAREN LKEY resif finif RKEY
    (59) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY
    (60) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY
    (61) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (64) ciclo -> . WHILE LPAREN expres RPAREN LKEY bloq RKEY
    (65) leer -> . READ LPAREN ID RPAREN SEMICOLON

    RKEY            reduce using rule 111 (finif -> .)
    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

    finif                          shift and go to state 173
    bloq                           shift and go to state 174
    estat                          shift and go to state 33
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 158

    (69) exr -> ex rel exr resrel .

    OR              reduce using rule 69 (exr -> ex rel exr resrel .)
    AND             reduce using rule 69 (exr -> ex rel exr resrel .)
    RPAREN          reduce using rule 69 (exr -> ex rel exr resrel .)
    COMA            reduce using rule 69 (exr -> ex rel exr resrel .)
    RBRACE          reduce using rule 69 (exr -> ex rel exr resrel .)
    SEMICOLON       reduce using rule 69 (exr -> ex rel exr resrel .)
    RKEY            reduce using rule 69 (exr -> ex rel exr resrel .)
    LPAREN          reduce using rule 69 (exr -> ex rel exr resrel .)
    PLUS            reduce using rule 69 (exr -> ex rel exr resrel .)
    MINUS           reduce using rule 69 (exr -> ex rel exr resrel .)
    ID              reduce using rule 69 (exr -> ex rel exr resrel .)
    CTE_I           reduce using rule 69 (exr -> ex rel exr resrel .)
    CTE_F           reduce using rule 69 (exr -> ex rel exr resrel .)
    CTE_S           reduce using rule 69 (exr -> ex rel exr resrel .)
    TRUE            reduce using rule 69 (exr -> ex rel exr resrel .)
    FALSE           reduce using rule 69 (exr -> ex rel exr resrel .)


state 159

    (71) ex -> term resterm PLUS pushop . ex
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    term                           shift and go to state 79
    ex                             shift and go to state 175
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 160

    (72) ex -> term resterm MINUS pushop . ex
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    term                           shift and go to state 79
    ex                             shift and go to state 176
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 161

    (74) term -> fact resfact TIMES pushop . term
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    fact                           shift and go to state 82
    term                           shift and go to state 177
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 162

    (75) term -> fact resfact DIVIDE pushop . term
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    fact                           shift and go to state 82
    term                           shift and go to state 178
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 163

    (96) fcall -> ID LPAREN fcall1 RPAREN .

    TIMES           reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    DIVIDE          reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    PLUS            reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    MINUS           reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    LOWERTHAN       reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    MORETHAN        reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    LOWEREQ         reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    MOREEQ          reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    SAME            reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    DIFFERENT       reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    OR              reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    AND             reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    RPAREN          reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    COMA            reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    RBRACE          reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    SEMICOLON       reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    RKEY            reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    LPAREN          reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    ID              reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    CTE_I           reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    CTE_F           reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    CTE_S           reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    TRUE            reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)
    FALSE           reduce using rule 96 (fcall -> ID LPAREN fcall1 RPAREN .)


state 164

    (99) fcall1 -> expres COMA . fcall1
    (98) fcall1 -> . expres
    (99) fcall1 -> . expres COMA fcall1
    (66) expres -> . exr
    (67) expres -> . exr log expres
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 144
    fcall1                         shift and go to state 179
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 165

    (100) vcall -> ID LBRACE expres RBRACE .

    TIMES           reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    DIVIDE          reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    PLUS            reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    MINUS           reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    LOWERTHAN       reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    MORETHAN        reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    LOWEREQ         reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    MOREEQ          reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    SAME            reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    DIFFERENT       reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    OR              reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    AND             reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    RPAREN          reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    COMA            reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    RBRACE          reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    SEMICOLON       reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    RKEY            reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    LPAREN          reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    ID              reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    CTE_I           reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    CTE_F           reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    CTE_S           reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    TRUE            reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)
    FALSE           reduce using rule 100 (vcall -> ID LBRACE expres RBRACE .)


state 166

    (64) ciclo -> WHILE LPAREN expres RPAREN LKEY bloq . RKEY

    RKEY            shift and go to state 180


state 167

    (20) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN . LKEY localvar bloq return expres RKEY
    (22) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN . LKEY localvar bloq RKEY

    LKEY            shift and go to state 181


state 168

    (21) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . localvar RKEY
    (23) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . localvar bloq return expres RKEY
    (24) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . localvar bloq RKEY
    (25) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . RKEY
    (35) localvar -> . var
    (36) localvar -> . vector
    (37) localvar -> . var localvar
    (38) localvar -> . vector localvar
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            shift and go to state 183
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    localvar                       shift and go to state 182
    var                            shift and go to state 184
    vector                         shift and go to state 185

state 169

    (32) funci -> tipo ID .
    (33) funci -> tipo ID . COMA funci

    RPAREN          reduce using rule 32 (funci -> tipo ID .)
    COMA            shift and go to state 186


state 170

    (56) asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .

    ID              reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    IF              reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    PRINT           reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    WHILE           reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    READ            reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    RKEY            reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    RETURN          reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    LPAREN          reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    PLUS            reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    MINUS           reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    CTE_I           reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    CTE_F           reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    CTE_S           reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    TRUE            reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    FALSE           reduce using rule 56 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)


state 171

    (57) asign -> ID pushid LBRACE exr RBRACE EQUAL pushop . expres SEMICOLON
    (66) expres -> . exr
    (67) expres -> . exr log expres
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    exr                            shift and go to state 77
    expres                         shift and go to state 187
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 172

    (76) fact -> LPAREN pushop expres RPAREN popop .

    TIMES           reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    DIVIDE          reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    PLUS            reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    MINUS           reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    LOWERTHAN       reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    MORETHAN        reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    LOWEREQ         reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    MOREEQ          reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    SAME            reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    DIFFERENT       reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    OR              reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    AND             reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    RPAREN          reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    COMA            reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    RBRACE          reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    SEMICOLON       reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    RKEY            reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    LPAREN          reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    ID              reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    CTE_I           reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    CTE_F           reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    CTE_S           reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    TRUE            reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)
    FALSE           reduce using rule 76 (fact -> LPAREN pushop expres RPAREN popop .)


state 173

    (58) cond -> IF LPAREN expres RPAREN LKEY resif finif . RKEY

    RKEY            shift and go to state 188


state 174

    (59) cond -> IF LPAREN expres RPAREN LKEY resif bloq . finif RKEY
    (60) cond -> IF LPAREN expres RPAREN LKEY resif bloq . finif RKEY ELSE LKEY bloq RKEY
    (111) finif -> .

    RKEY            reduce using rule 111 (finif -> .)

    finif                          shift and go to state 189

state 175

    (71) ex -> term resterm PLUS pushop ex .

    LOWERTHAN       reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    MORETHAN        reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    LOWEREQ         reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    MOREEQ          reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    SAME            reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    DIFFERENT       reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    OR              reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    AND             reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    RPAREN          reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    COMA            reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    RBRACE          reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    SEMICOLON       reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    RKEY            reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    LPAREN          reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    PLUS            reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    MINUS           reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    ID              reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    CTE_I           reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    CTE_F           reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    CTE_S           reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    TRUE            reduce using rule 71 (ex -> term resterm PLUS pushop ex .)
    FALSE           reduce using rule 71 (ex -> term resterm PLUS pushop ex .)


state 176

    (72) ex -> term resterm MINUS pushop ex .

    LOWERTHAN       reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    MORETHAN        reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    LOWEREQ         reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    MOREEQ          reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    SAME            reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    DIFFERENT       reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    OR              reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    AND             reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    RPAREN          reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    COMA            reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    RBRACE          reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    SEMICOLON       reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    RKEY            reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    LPAREN          reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    PLUS            reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    MINUS           reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    ID              reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    CTE_I           reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    CTE_F           reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    CTE_S           reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    TRUE            reduce using rule 72 (ex -> term resterm MINUS pushop ex .)
    FALSE           reduce using rule 72 (ex -> term resterm MINUS pushop ex .)


state 177

    (74) term -> fact resfact TIMES pushop term .

    PLUS            reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    MINUS           reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    LOWERTHAN       reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    MORETHAN        reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    LOWEREQ         reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    MOREEQ          reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    SAME            reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    DIFFERENT       reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    OR              reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    AND             reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    RPAREN          reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    COMA            reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    RBRACE          reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    SEMICOLON       reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    RKEY            reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    LPAREN          reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    ID              reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    CTE_I           reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    CTE_F           reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    CTE_S           reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    TRUE            reduce using rule 74 (term -> fact resfact TIMES pushop term .)
    FALSE           reduce using rule 74 (term -> fact resfact TIMES pushop term .)


state 178

    (75) term -> fact resfact DIVIDE pushop term .

    PLUS            reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    MINUS           reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    LOWERTHAN       reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    MORETHAN        reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    LOWEREQ         reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    MOREEQ          reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    SAME            reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    DIFFERENT       reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    OR              reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    AND             reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    RPAREN          reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    COMA            reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    RBRACE          reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    SEMICOLON       reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    RKEY            reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    LPAREN          reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    ID              reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    CTE_I           reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    CTE_F           reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    CTE_S           reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    TRUE            reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)
    FALSE           reduce using rule 75 (term -> fact resfact DIVIDE pushop term .)


state 179

    (99) fcall1 -> expres COMA fcall1 .

    RPAREN          reduce using rule 99 (fcall1 -> expres COMA fcall1 .)


state 180

    (64) ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .

    ID              reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)
    IF              reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)
    PRINT           reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)
    WHILE           reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)
    READ            reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)
    RKEY            reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)
    RETURN          reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)
    LPAREN          reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)
    PLUS            reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)
    MINUS           reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)
    CTE_I           reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)
    CTE_F           reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)
    CTE_S           reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)
    TRUE            reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)
    FALSE           reduce using rule 64 (ciclo -> WHILE LPAREN expres RPAREN LKEY bloq RKEY .)


state 181

    (20) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY . localvar bloq return expres RKEY
    (22) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY . localvar bloq RKEY
    (35) localvar -> . var
    (36) localvar -> . vector
    (37) localvar -> . var localvar
    (38) localvar -> . vector localvar
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    localvar                       shift and go to state 190
    var                            shift and go to state 184
    vector                         shift and go to state 185

state 182

    (21) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar . RKEY
    (23) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar . bloq return expres RKEY
    (24) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar . bloq RKEY
    (49) bloq -> . estat
    (50) bloq -> . estat bloq
    (51) estat -> . asign
    (52) estat -> . cond
    (53) estat -> . escrit
    (54) estat -> . ciclo
    (55) estat -> . leer
    (56) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (57) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (58) cond -> . IF LPAREN expres RPAREN LKEY resif finif RKEY
    (59) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY
    (60) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY
    (61) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (64) ciclo -> . WHILE LPAREN expres RPAREN LKEY bloq RKEY
    (65) leer -> . READ LPAREN ID RPAREN SEMICOLON

    RKEY            shift and go to state 191
    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

    bloq                           shift and go to state 192
    estat                          shift and go to state 33
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 183

    (25) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY .

    FUNCTION        reduce using rule 25 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY .)
    MAIN            reduce using rule 25 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY .)


state 184

    (35) localvar -> var .
    (37) localvar -> var . localvar
    (35) localvar -> . var
    (36) localvar -> . vector
    (37) localvar -> . var localvar
    (38) localvar -> . vector localvar
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            reduce using rule 35 (localvar -> var .)
    ID              reduce using rule 35 (localvar -> var .)
    IF              reduce using rule 35 (localvar -> var .)
    PRINT           reduce using rule 35 (localvar -> var .)
    WHILE           reduce using rule 35 (localvar -> var .)
    READ            reduce using rule 35 (localvar -> var .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    var                            shift and go to state 184
    localvar                       shift and go to state 193
    vector                         shift and go to state 185

state 185

    (36) localvar -> vector .
    (38) localvar -> vector . localvar
    (35) localvar -> . var
    (36) localvar -> . vector
    (37) localvar -> . var localvar
    (38) localvar -> . vector localvar
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            reduce using rule 36 (localvar -> vector .)
    ID              reduce using rule 36 (localvar -> vector .)
    IF              reduce using rule 36 (localvar -> vector .)
    PRINT           reduce using rule 36 (localvar -> vector .)
    WHILE           reduce using rule 36 (localvar -> vector .)
    READ            reduce using rule 36 (localvar -> vector .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    vector                         shift and go to state 185
    localvar                       shift and go to state 194
    var                            shift and go to state 184

state 186

    (33) funci -> tipo ID COMA . funci
    (32) funci -> . tipo ID
    (33) funci -> . tipo ID COMA funci
    (34) funci -> . empty
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . STRING
    (18) tipo -> . BOOL
    (101) empty -> .

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING          shift and go to state 18
    BOOL            shift and go to state 19
    RPAREN          reduce using rule 101 (empty -> .)

    tipo                           shift and go to state 152
    funci                          shift and go to state 195
    empty                          shift and go to state 153

state 187

    (57) asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres . SEMICOLON

    SEMICOLON       shift and go to state 196


state 188

    (58) cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .

    ID              reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)
    IF              reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)
    PRINT           reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)
    WHILE           reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)
    READ            reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)
    RKEY            reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)
    RETURN          reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)
    LPAREN          reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)
    PLUS            reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)
    MINUS           reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)
    CTE_I           reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)
    CTE_F           reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)
    CTE_S           reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)
    TRUE            reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)
    FALSE           reduce using rule 58 (cond -> IF LPAREN expres RPAREN LKEY resif finif RKEY .)


state 189

    (59) cond -> IF LPAREN expres RPAREN LKEY resif bloq finif . RKEY
    (60) cond -> IF LPAREN expres RPAREN LKEY resif bloq finif . RKEY ELSE LKEY bloq RKEY

    RKEY            shift and go to state 197


state 190

    (20) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar . bloq return expres RKEY
    (22) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar . bloq RKEY
    (49) bloq -> . estat
    (50) bloq -> . estat bloq
    (51) estat -> . asign
    (52) estat -> . cond
    (53) estat -> . escrit
    (54) estat -> . ciclo
    (55) estat -> . leer
    (56) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (57) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (58) cond -> . IF LPAREN expres RPAREN LKEY resif finif RKEY
    (59) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY
    (60) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY
    (61) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (64) ciclo -> . WHILE LPAREN expres RPAREN LKEY bloq RKEY
    (65) leer -> . READ LPAREN ID RPAREN SEMICOLON

    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

    bloq                           shift and go to state 198
    estat                          shift and go to state 33
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 191

    (21) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY .

    FUNCTION        reduce using rule 21 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY .)
    MAIN            reduce using rule 21 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY .)


state 192

    (23) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq . return expres RKEY
    (24) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq . RKEY
    (39) return -> . RETURN expres
    (40) return -> . empty
    (101) empty -> .

    RKEY            shift and go to state 200
    RETURN          shift and go to state 201
    LPAREN          reduce using rule 101 (empty -> .)
    PLUS            reduce using rule 101 (empty -> .)
    MINUS           reduce using rule 101 (empty -> .)
    ID              reduce using rule 101 (empty -> .)
    CTE_I           reduce using rule 101 (empty -> .)
    CTE_F           reduce using rule 101 (empty -> .)
    CTE_S           reduce using rule 101 (empty -> .)
    TRUE            reduce using rule 101 (empty -> .)
    FALSE           reduce using rule 101 (empty -> .)

    return                         shift and go to state 199
    empty                          shift and go to state 202

state 193

    (37) localvar -> var localvar .

    RKEY            reduce using rule 37 (localvar -> var localvar .)
    ID              reduce using rule 37 (localvar -> var localvar .)
    IF              reduce using rule 37 (localvar -> var localvar .)
    PRINT           reduce using rule 37 (localvar -> var localvar .)
    WHILE           reduce using rule 37 (localvar -> var localvar .)
    READ            reduce using rule 37 (localvar -> var localvar .)


state 194

    (38) localvar -> vector localvar .

    RKEY            reduce using rule 38 (localvar -> vector localvar .)
    ID              reduce using rule 38 (localvar -> vector localvar .)
    IF              reduce using rule 38 (localvar -> vector localvar .)
    PRINT           reduce using rule 38 (localvar -> vector localvar .)
    WHILE           reduce using rule 38 (localvar -> vector localvar .)
    READ            reduce using rule 38 (localvar -> vector localvar .)


state 195

    (33) funci -> tipo ID COMA funci .

    RPAREN          reduce using rule 33 (funci -> tipo ID COMA funci .)


state 196

    (57) asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .

    ID              reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    IF              reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    PRINT           reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    WHILE           reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    READ            reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    RKEY            reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    RETURN          reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    LPAREN          reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    PLUS            reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    MINUS           reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    CTE_I           reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    CTE_F           reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    CTE_S           reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    TRUE            reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    FALSE           reduce using rule 57 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)


state 197

    (59) cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .
    (60) cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY . ELSE LKEY bloq RKEY

    ID              reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    IF              reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    PRINT           reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    WHILE           reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    READ            reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    RKEY            reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    RETURN          reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    LPAREN          reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    PLUS            reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    MINUS           reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    CTE_I           reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    CTE_F           reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    CTE_S           reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    TRUE            reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    FALSE           reduce using rule 59 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY .)
    ELSE            shift and go to state 203


state 198

    (20) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq . return expres RKEY
    (22) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq . RKEY
    (39) return -> . RETURN expres
    (40) return -> . empty
    (101) empty -> .

    RKEY            shift and go to state 205
    RETURN          shift and go to state 201
    LPAREN          reduce using rule 101 (empty -> .)
    PLUS            reduce using rule 101 (empty -> .)
    MINUS           reduce using rule 101 (empty -> .)
    ID              reduce using rule 101 (empty -> .)
    CTE_I           reduce using rule 101 (empty -> .)
    CTE_F           reduce using rule 101 (empty -> .)
    CTE_S           reduce using rule 101 (empty -> .)
    TRUE            reduce using rule 101 (empty -> .)
    FALSE           reduce using rule 101 (empty -> .)

    return                         shift and go to state 204
    empty                          shift and go to state 202

state 199

    (23) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return . expres RKEY
    (66) expres -> . exr
    (67) expres -> . exr log expres
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 206
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 200

    (24) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY .

    FUNCTION        reduce using rule 24 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY .)
    MAIN            reduce using rule 24 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY .)


state 201

    (39) return -> RETURN . expres
    (66) expres -> . exr
    (67) expres -> . exr log expres
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 207
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 202

    (40) return -> empty .

    LPAREN          reduce using rule 40 (return -> empty .)
    PLUS            reduce using rule 40 (return -> empty .)
    MINUS           reduce using rule 40 (return -> empty .)
    ID              reduce using rule 40 (return -> empty .)
    CTE_I           reduce using rule 40 (return -> empty .)
    CTE_F           reduce using rule 40 (return -> empty .)
    CTE_S           reduce using rule 40 (return -> empty .)
    TRUE            reduce using rule 40 (return -> empty .)
    FALSE           reduce using rule 40 (return -> empty .)


state 203

    (60) cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE . LKEY bloq RKEY

    LKEY            shift and go to state 208


state 204

    (20) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return . expres RKEY
    (66) expres -> . exr
    (67) expres -> . exr log expres
    (68) exr -> . ex
    (69) exr -> . ex rel exr resrel
    (70) ex -> . term resterm
    (71) ex -> . term resterm PLUS pushop ex
    (72) ex -> . term resterm MINUS pushop ex
    (73) term -> . fact resfact
    (74) term -> . fact resfact TIMES pushop term
    (75) term -> . fact resfact DIVIDE pushop term
    (76) fact -> . LPAREN pushop expres RPAREN popop
    (77) fact -> . var_cte
    (78) fact -> . PLUS var_cte
    (79) fact -> . MINUS var_cte
    (88) var_cte -> . ID pushid
    (89) var_cte -> . CTE_I pushcte
    (90) var_cte -> . CTE_F pushcte
    (91) var_cte -> . CTE_S pushcte
    (92) var_cte -> . TRUE pushcte
    (93) var_cte -> . FALSE pushcte
    (94) var_cte -> . fcall
    (95) var_cte -> . vcall
    (96) fcall -> . ID LPAREN fcall1 RPAREN
    (97) fcall -> . ID LPAREN RPAREN
    (100) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 209
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 205

    (22) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY .

    FUNCTION        reduce using rule 22 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY .)
    MAIN            reduce using rule 22 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY .)


state 206

    (23) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres . RKEY

    RKEY            shift and go to state 210


state 207

    (39) return -> RETURN expres .

    LPAREN          reduce using rule 39 (return -> RETURN expres .)
    PLUS            reduce using rule 39 (return -> RETURN expres .)
    MINUS           reduce using rule 39 (return -> RETURN expres .)
    ID              reduce using rule 39 (return -> RETURN expres .)
    CTE_I           reduce using rule 39 (return -> RETURN expres .)
    CTE_F           reduce using rule 39 (return -> RETURN expres .)
    CTE_S           reduce using rule 39 (return -> RETURN expres .)
    TRUE            reduce using rule 39 (return -> RETURN expres .)
    FALSE           reduce using rule 39 (return -> RETURN expres .)


state 208

    (60) cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY . bloq RKEY
    (49) bloq -> . estat
    (50) bloq -> . estat bloq
    (51) estat -> . asign
    (52) estat -> . cond
    (53) estat -> . escrit
    (54) estat -> . ciclo
    (55) estat -> . leer
    (56) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (57) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (58) cond -> . IF LPAREN expres RPAREN LKEY resif finif RKEY
    (59) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY
    (60) cond -> . IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY
    (61) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (64) ciclo -> . WHILE LPAREN expres RPAREN LKEY bloq RKEY
    (65) leer -> . READ LPAREN ID RPAREN SEMICOLON

    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

    bloq                           shift and go to state 211
    estat                          shift and go to state 33
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 209

    (20) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres . RKEY

    RKEY            shift and go to state 212


state 210

    (23) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY .

    FUNCTION        reduce using rule 23 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY .)
    MAIN            reduce using rule 23 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY .)


state 211

    (60) cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq . RKEY

    RKEY            shift and go to state 213


state 212

    (20) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY .

    FUNCTION        reduce using rule 20 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY .)
    MAIN            reduce using rule 20 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY .)


state 213

    (60) cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .

    ID              reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)
    IF              reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)
    PRINT           reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)
    WHILE           reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)
    READ            reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)
    RKEY            reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)
    RETURN          reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)
    LPAREN          reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)
    PLUS            reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)
    MINUS           reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)
    CTE_I           reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)
    CTE_F           reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)
    CTE_S           reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)
    TRUE            reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)
    FALSE           reduce using rule 60 (cond -> IF LPAREN expres RPAREN LKEY resif bloq finif RKEY ELSE LKEY bloq RKEY .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 33 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 84 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 114 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 114 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 131 resolved as shift
