Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc finmain
Rule 2     program -> PROGRAM COLON global program2 finglobal MAIN main1 mainc finmain
Rule 3     program -> PROGRAM COLON MAIN main1 mainc finmain
Rule 4     program2 -> crear program2
Rule 5     program2 -> crear
Rule 6     program3 -> function program3
Rule 7     program3 -> function
Rule 8     crear -> var
Rule 9     crear -> vector
Rule 10    global -> <empty>
Rule 11    finglobal -> <empty>
Rule 12    main1 -> <empty>
Rule 13    finmain -> <empty>
Rule 14    var -> VAR tipo ID SEMICOLON
Rule 15    tipo -> INT
Rule 16    tipo -> FLOAT
Rule 17    tipo -> STRING
Rule 18    tipo -> BOOL
Rule 19    vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON
Rule 20    function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
Rule 21    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
Rule 22    function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
Rule 23    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
Rule 24    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
Rule 25    function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY
Rule 26    functype -> INT
Rule 27    functype -> FLOAT
Rule 28    functype -> STRING
Rule 29    functype -> BOOL
Rule 30    functype -> VOID
Rule 31    addInTable -> <empty>
Rule 32    funci -> funcitype ID
Rule 33    funci -> funcitype ID COMA funci
Rule 34    funci -> empty
Rule 35    funcitype -> INT
Rule 36    funcitype -> FLOAT
Rule 37    funcitype -> STRING
Rule 38    funcitype -> BOOL
Rule 39    localvar -> var
Rule 40    localvar -> vector
Rule 41    localvar -> var localvar
Rule 42    localvar -> vector localvar
Rule 43    return -> RETURN expres
Rule 44    return -> empty
Rule 45    mainc -> LKEY RKEY
Rule 46    mainc -> LKEY bloq RKEY
Rule 47    mainc -> LKEY mainc2 bloq RKEY
Rule 48    mainc -> LKEY mainc2 RKEY
Rule 49    mainc2 -> var
Rule 50    mainc2 -> var mainc2
Rule 51    mainc2 -> vector
Rule 52    mainc2 -> vector mainc2
Rule 53    bloq -> estat
Rule 54    bloq -> estat bloq
Rule 55    estat -> asign
Rule 56    estat -> cond
Rule 57    estat -> escrit
Rule 58    estat -> ciclo
Rule 59    estat -> leer
Rule 60    asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
Rule 61    asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
Rule 62    cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
Rule 63    cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
Rule 64    escrit -> PRINT LPAREN escriti RPAREN SEMICOLON
Rule 65    escriti -> expres
Rule 66    escriti -> expres COMA escriti
Rule 67    ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
Rule 68    leer -> READ LPAREN ID RPAREN SEMICOLON
Rule 69    expres -> exr
Rule 70    expres -> exr log expres
Rule 71    exr -> ex
Rule 72    exr -> ex rel exr resrel
Rule 73    ex -> term resterm
Rule 74    ex -> term resterm PLUS pushop ex
Rule 75    ex -> term resterm MINUS pushop ex
Rule 76    term -> fact resfact
Rule 77    term -> fact resfact TIMES pushop term
Rule 78    term -> fact resfact DIVIDE pushop term
Rule 79    fact -> LPAREN pushop expres RPAREN popop
Rule 80    fact -> var_cte
Rule 81    fact -> PLUS var_cte
Rule 82    fact -> MINUS var_cte
Rule 83    rel -> LOWERTHAN
Rule 84    rel -> MORETHAN
Rule 85    rel -> LOWEREQ
Rule 86    rel -> MOREEQ
Rule 87    rel -> SAME
Rule 88    rel -> DIFFERENT
Rule 89    log -> OR
Rule 90    log -> AND
Rule 91    var_cte -> ID pushid
Rule 92    var_cte -> CTE_I pushcte
Rule 93    var_cte -> CTE_F pushcte
Rule 94    var_cte -> CTE_S pushcte
Rule 95    var_cte -> TRUE pushcte
Rule 96    var_cte -> FALSE pushcte
Rule 97    var_cte -> fcall
Rule 98    var_cte -> vcall
Rule 99    fcall -> ID existfunc LPAREN startera fcall1 RPAREN
Rule 100   fcall -> ID existfunc LPAREN RPAREN
Rule 101   existfunc -> <empty>
Rule 102   startera -> <empty>
Rule 103   fcall1 -> expres generateparam
Rule 104   fcall1 -> expres generateparam COMA fcall1
Rule 105   generateparam -> <empty>
Rule 106   vcall -> ID LBRACE expres RBRACE
Rule 107   empty -> <empty>
Rule 108   pushcte -> <empty>
Rule 109   pushid -> <empty>
Rule 110   pushop -> <empty>
Rule 111   popop -> <empty>
Rule 112   resolverasignacion -> <empty>
Rule 113   resfact -> <empty>
Rule 114   resterm -> <empty>
Rule 115   resrel -> <empty>
Rule 116   resif -> <empty>
Rule 117   reselse -> <empty>
Rule 118   finif -> <empty>
Rule 119   while1 -> <empty>
Rule 120   while2 -> <empty>
Rule 121   while3 -> <empty>

Terminals, with rules where they appear

AND                  : 90
BOOL                 : 18 29 38
COLON                : 1 2 3
COMA                 : 33 66 104
CTE_F                : 93
CTE_I                : 19 92
CTE_S                : 94
DIFFERENT            : 88
DIVIDE               : 78
ELSE                 : 63
EQUAL                : 60 61
FALSE                : 96
FLOAT                : 16 27 36
FUNCTION             : 20 21 22 23 24 25
ID                   : 14 19 20 21 22 23 24 25 32 33 60 61 68 91 99 100 106
IF                   : 62 63
INT                  : 15 26 35
LBRACE               : 19 61 106
LKEY                 : 20 21 22 23 24 25 45 46 47 48 62 63 63 67
LOWEREQ              : 85
LOWERTHAN            : 83
LPAREN               : 20 21 22 23 24 25 62 63 64 67 68 79 99 100
MAIN                 : 1 2 3
MINUS                : 75 82
MOREEQ               : 86
MORETHAN             : 84
OR                   : 89
PLUS                 : 74 81
PRINT                : 64
PROGRAM              : 1 2 3
RBRACE               : 19 61 106
READ                 : 68
RETURN               : 43
RKEY                 : 20 21 22 23 24 25 45 46 47 48 62 63 63 67
RPAREN               : 20 21 22 23 24 25 62 63 64 67 68 79 99 100
SAME                 : 87
SEMICOLON            : 14 19 60 61 64 68
STRING               : 17 28 37
TIMES                : 77
TRUE                 : 95
VAR                  : 14
VECTOR               : 19
VOID                 : 30
WHILE                : 67
error                : 

Nonterminals, with rules where they appear

addInTable           : 20 21 22 23 24 25
asign                : 55
bloq                 : 20 22 23 24 46 47 54 62 63 63 67
ciclo                : 58
cond                 : 56
crear                : 4 5
empty                : 34 44
escrit               : 57
escriti              : 64 66
estat                : 53 54
ex                   : 71 72 74 75
existfunc            : 99 100
expres               : 20 23 43 60 61 62 63 65 66 67 70 79 103 104 106
exr                  : 61 69 70 72
fact                 : 76 77 78
fcall                : 97
fcall1               : 99 104
finglobal            : 1 2
finif                : 62 63
finmain              : 1 2 3
funci                : 20 22 33
funcitype            : 32 33
function             : 6 7
functype             : 20 21 22 23 24 25
generateparam        : 103 104
global               : 1 2
leer                 : 59
localvar             : 20 21 22 23 24 41 42
log                  : 70
main1                : 1 2 3
mainc                : 1 2 3
mainc2               : 47 48 50 52
popop                : 79
program              : 0
program2             : 1 2 4
program3             : 1 6
pushcte              : 92 93 94 95 96
pushid               : 60 61 91
pushop               : 60 61 74 75 77 78 79
rel                  : 72
reselse              : 63
resfact              : 76 77 78
resif                : 62 63
resolverasignacion   : 60
resrel               : 72
resterm              : 73 74 75
return               : 20 23
startera             : 99
term                 : 73 74 75 77 78
tipo                 : 14
var                  : 8 39 41 49 50
var_cte              : 80 81 82
vcall                : 98
vector               : 9 40 42 51 52
while1               : 67
while2               : 67
while3               : 67

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc finmain
    (2) program -> . PROGRAM COLON global program2 finglobal MAIN main1 mainc finmain
    (3) program -> . PROGRAM COLON MAIN main1 mainc finmain

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . COLON global program2 finglobal program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM . COLON global program2 finglobal MAIN main1 mainc finmain
    (3) program -> PROGRAM . COLON MAIN main1 mainc finmain

    COLON           shift and go to state 3


state 3

    (1) program -> PROGRAM COLON . global program2 finglobal program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON . global program2 finglobal MAIN main1 mainc finmain
    (3) program -> PROGRAM COLON . MAIN main1 mainc finmain
    (10) global -> .

    MAIN            shift and go to state 5
    VAR             reduce using rule 10 (global -> .)
    VECTOR          reduce using rule 10 (global -> .)

    global                         shift and go to state 4

state 4

    (1) program -> PROGRAM COLON global . program2 finglobal program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON global . program2 finglobal MAIN main1 mainc finmain
    (4) program2 -> . crear program2
    (5) program2 -> . crear
    (8) crear -> . var
    (9) crear -> . vector
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    program2                       shift and go to state 6
    crear                          shift and go to state 7
    var                            shift and go to state 8
    vector                         shift and go to state 9

state 5

    (3) program -> PROGRAM COLON MAIN . main1 mainc finmain
    (12) main1 -> .

    LKEY            reduce using rule 12 (main1 -> .)

    main1                          shift and go to state 12

state 6

    (1) program -> PROGRAM COLON global program2 . finglobal program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON global program2 . finglobal MAIN main1 mainc finmain
    (11) finglobal -> .

    MAIN            reduce using rule 11 (finglobal -> .)
    FUNCTION        reduce using rule 11 (finglobal -> .)

    finglobal                      shift and go to state 13

state 7

    (4) program2 -> crear . program2
    (5) program2 -> crear .
    (4) program2 -> . crear program2
    (5) program2 -> . crear
    (8) crear -> . var
    (9) crear -> . vector
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    MAIN            reduce using rule 5 (program2 -> crear .)
    FUNCTION        reduce using rule 5 (program2 -> crear .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    crear                          shift and go to state 7
    program2                       shift and go to state 14
    var                            shift and go to state 8
    vector                         shift and go to state 9

state 8

    (8) crear -> var .

    VAR             reduce using rule 8 (crear -> var .)
    VECTOR          reduce using rule 8 (crear -> var .)
    MAIN            reduce using rule 8 (crear -> var .)
    FUNCTION        reduce using rule 8 (crear -> var .)


state 9

    (9) crear -> vector .

    VAR             reduce using rule 9 (crear -> vector .)
    VECTOR          reduce using rule 9 (crear -> vector .)
    MAIN            reduce using rule 9 (crear -> vector .)
    FUNCTION        reduce using rule 9 (crear -> vector .)


state 10

    (14) var -> VAR . tipo ID SEMICOLON
    (15) tipo -> . INT
    (16) tipo -> . FLOAT
    (17) tipo -> . STRING
    (18) tipo -> . BOOL

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING          shift and go to state 18
    BOOL            shift and go to state 19

    tipo                           shift and go to state 15

state 11

    (19) vector -> VECTOR . ID LBRACE CTE_I RBRACE SEMICOLON

    ID              shift and go to state 20


state 12

    (3) program -> PROGRAM COLON MAIN main1 . mainc finmain
    (45) mainc -> . LKEY RKEY
    (46) mainc -> . LKEY bloq RKEY
    (47) mainc -> . LKEY mainc2 bloq RKEY
    (48) mainc -> . LKEY mainc2 RKEY

    LKEY            shift and go to state 22

    mainc                          shift and go to state 21

state 13

    (1) program -> PROGRAM COLON global program2 finglobal . program3 MAIN main1 mainc finmain
    (2) program -> PROGRAM COLON global program2 finglobal . MAIN main1 mainc finmain
    (6) program3 -> . function program3
    (7) program3 -> . function
    (20) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (21) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (22) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (23) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (24) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (25) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY

    MAIN            shift and go to state 24
    FUNCTION        shift and go to state 26

    program3                       shift and go to state 23
    function                       shift and go to state 25

state 14

    (4) program2 -> crear program2 .

    MAIN            reduce using rule 4 (program2 -> crear program2 .)
    FUNCTION        reduce using rule 4 (program2 -> crear program2 .)


state 15

    (14) var -> VAR tipo . ID SEMICOLON

    ID              shift and go to state 27


state 16

    (15) tipo -> INT .

    ID              reduce using rule 15 (tipo -> INT .)


state 17

    (16) tipo -> FLOAT .

    ID              reduce using rule 16 (tipo -> FLOAT .)


state 18

    (17) tipo -> STRING .

    ID              reduce using rule 17 (tipo -> STRING .)


state 19

    (18) tipo -> BOOL .

    ID              reduce using rule 18 (tipo -> BOOL .)


state 20

    (19) vector -> VECTOR ID . LBRACE CTE_I RBRACE SEMICOLON

    LBRACE          shift and go to state 28


state 21

    (3) program -> PROGRAM COLON MAIN main1 mainc . finmain
    (13) finmain -> .

    $end            reduce using rule 13 (finmain -> .)

    finmain                        shift and go to state 29

state 22

    (45) mainc -> LKEY . RKEY
    (46) mainc -> LKEY . bloq RKEY
    (47) mainc -> LKEY . mainc2 bloq RKEY
    (48) mainc -> LKEY . mainc2 RKEY
    (53) bloq -> . estat
    (54) bloq -> . estat bloq
    (49) mainc2 -> . var
    (50) mainc2 -> . var mainc2
    (51) mainc2 -> . vector
    (52) mainc2 -> . vector mainc2
    (55) estat -> . asign
    (56) estat -> . cond
    (57) estat -> . escrit
    (58) estat -> . ciclo
    (59) estat -> . leer
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON
    (60) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (61) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (62) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (63) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (64) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (67) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (68) leer -> . READ LPAREN ID RPAREN SEMICOLON

    RKEY            shift and go to state 30
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11
    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

    bloq                           shift and go to state 31
    mainc2                         shift and go to state 32
    estat                          shift and go to state 33
    var                            shift and go to state 34
    vector                         shift and go to state 35
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 23

    (1) program -> PROGRAM COLON global program2 finglobal program3 . MAIN main1 mainc finmain

    MAIN            shift and go to state 46


state 24

    (2) program -> PROGRAM COLON global program2 finglobal MAIN . main1 mainc finmain
    (12) main1 -> .

    LKEY            reduce using rule 12 (main1 -> .)

    main1                          shift and go to state 47

state 25

    (6) program3 -> function . program3
    (7) program3 -> function .
    (6) program3 -> . function program3
    (7) program3 -> . function
    (20) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (21) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (22) function -> . FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (23) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (24) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (25) function -> . FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY

    MAIN            reduce using rule 7 (program3 -> function .)
    FUNCTION        shift and go to state 26

    function                       shift and go to state 25
    program3                       shift and go to state 48

state 26

    (20) function -> FUNCTION . functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (21) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (22) function -> FUNCTION . functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (23) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (24) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (25) function -> FUNCTION . functype ID addInTable LPAREN RPAREN LKEY RKEY
    (26) functype -> . INT
    (27) functype -> . FLOAT
    (28) functype -> . STRING
    (29) functype -> . BOOL
    (30) functype -> . VOID

    INT             shift and go to state 50
    FLOAT           shift and go to state 51
    STRING          shift and go to state 52
    BOOL            shift and go to state 53
    VOID            shift and go to state 54

    functype                       shift and go to state 49

state 27

    (14) var -> VAR tipo ID . SEMICOLON

    SEMICOLON       shift and go to state 55


state 28

    (19) vector -> VECTOR ID LBRACE . CTE_I RBRACE SEMICOLON

    CTE_I           shift and go to state 56


state 29

    (3) program -> PROGRAM COLON MAIN main1 mainc finmain .

    $end            reduce using rule 3 (program -> PROGRAM COLON MAIN main1 mainc finmain .)


state 30

    (45) mainc -> LKEY RKEY .

    $end            reduce using rule 45 (mainc -> LKEY RKEY .)


state 31

    (46) mainc -> LKEY bloq . RKEY

    RKEY            shift and go to state 57


state 32

    (47) mainc -> LKEY mainc2 . bloq RKEY
    (48) mainc -> LKEY mainc2 . RKEY
    (53) bloq -> . estat
    (54) bloq -> . estat bloq
    (55) estat -> . asign
    (56) estat -> . cond
    (57) estat -> . escrit
    (58) estat -> . ciclo
    (59) estat -> . leer
    (60) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (61) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (62) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (63) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (64) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (67) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (68) leer -> . READ LPAREN ID RPAREN SEMICOLON

    RKEY            shift and go to state 59
    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

    bloq                           shift and go to state 58
    estat                          shift and go to state 33
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 33

    (53) bloq -> estat .
    (54) bloq -> estat . bloq
    (53) bloq -> . estat
    (54) bloq -> . estat bloq
    (55) estat -> . asign
    (56) estat -> . cond
    (57) estat -> . escrit
    (58) estat -> . ciclo
    (59) estat -> . leer
    (60) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (61) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (62) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (63) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (64) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (67) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (68) leer -> . READ LPAREN ID RPAREN SEMICOLON

  ! shift/reduce conflict for ID resolved as shift
    RKEY            reduce using rule 53 (bloq -> estat .)
    RETURN          reduce using rule 53 (bloq -> estat .)
    LPAREN          reduce using rule 53 (bloq -> estat .)
    PLUS            reduce using rule 53 (bloq -> estat .)
    MINUS           reduce using rule 53 (bloq -> estat .)
    CTE_I           reduce using rule 53 (bloq -> estat .)
    CTE_F           reduce using rule 53 (bloq -> estat .)
    CTE_S           reduce using rule 53 (bloq -> estat .)
    TRUE            reduce using rule 53 (bloq -> estat .)
    FALSE           reduce using rule 53 (bloq -> estat .)
    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

  ! ID              [ reduce using rule 53 (bloq -> estat .) ]

    estat                          shift and go to state 33
    bloq                           shift and go to state 60
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 34

    (49) mainc2 -> var .
    (50) mainc2 -> var . mainc2
    (49) mainc2 -> . var
    (50) mainc2 -> . var mainc2
    (51) mainc2 -> . vector
    (52) mainc2 -> . vector mainc2
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            reduce using rule 49 (mainc2 -> var .)
    ID              reduce using rule 49 (mainc2 -> var .)
    IF              reduce using rule 49 (mainc2 -> var .)
    PRINT           reduce using rule 49 (mainc2 -> var .)
    WHILE           reduce using rule 49 (mainc2 -> var .)
    READ            reduce using rule 49 (mainc2 -> var .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    var                            shift and go to state 34
    mainc2                         shift and go to state 61
    vector                         shift and go to state 35

state 35

    (51) mainc2 -> vector .
    (52) mainc2 -> vector . mainc2
    (49) mainc2 -> . var
    (50) mainc2 -> . var mainc2
    (51) mainc2 -> . vector
    (52) mainc2 -> . vector mainc2
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            reduce using rule 51 (mainc2 -> vector .)
    ID              reduce using rule 51 (mainc2 -> vector .)
    IF              reduce using rule 51 (mainc2 -> vector .)
    PRINT           reduce using rule 51 (mainc2 -> vector .)
    WHILE           reduce using rule 51 (mainc2 -> vector .)
    READ            reduce using rule 51 (mainc2 -> vector .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    vector                         shift and go to state 35
    mainc2                         shift and go to state 62
    var                            shift and go to state 34

state 36

    (55) estat -> asign .

    ID              reduce using rule 55 (estat -> asign .)
    IF              reduce using rule 55 (estat -> asign .)
    PRINT           reduce using rule 55 (estat -> asign .)
    WHILE           reduce using rule 55 (estat -> asign .)
    READ            reduce using rule 55 (estat -> asign .)
    RKEY            reduce using rule 55 (estat -> asign .)
    RETURN          reduce using rule 55 (estat -> asign .)
    LPAREN          reduce using rule 55 (estat -> asign .)
    PLUS            reduce using rule 55 (estat -> asign .)
    MINUS           reduce using rule 55 (estat -> asign .)
    CTE_I           reduce using rule 55 (estat -> asign .)
    CTE_F           reduce using rule 55 (estat -> asign .)
    CTE_S           reduce using rule 55 (estat -> asign .)
    TRUE            reduce using rule 55 (estat -> asign .)
    FALSE           reduce using rule 55 (estat -> asign .)


state 37

    (56) estat -> cond .

    ID              reduce using rule 56 (estat -> cond .)
    IF              reduce using rule 56 (estat -> cond .)
    PRINT           reduce using rule 56 (estat -> cond .)
    WHILE           reduce using rule 56 (estat -> cond .)
    READ            reduce using rule 56 (estat -> cond .)
    RKEY            reduce using rule 56 (estat -> cond .)
    RETURN          reduce using rule 56 (estat -> cond .)
    LPAREN          reduce using rule 56 (estat -> cond .)
    PLUS            reduce using rule 56 (estat -> cond .)
    MINUS           reduce using rule 56 (estat -> cond .)
    CTE_I           reduce using rule 56 (estat -> cond .)
    CTE_F           reduce using rule 56 (estat -> cond .)
    CTE_S           reduce using rule 56 (estat -> cond .)
    TRUE            reduce using rule 56 (estat -> cond .)
    FALSE           reduce using rule 56 (estat -> cond .)


state 38

    (57) estat -> escrit .

    ID              reduce using rule 57 (estat -> escrit .)
    IF              reduce using rule 57 (estat -> escrit .)
    PRINT           reduce using rule 57 (estat -> escrit .)
    WHILE           reduce using rule 57 (estat -> escrit .)
    READ            reduce using rule 57 (estat -> escrit .)
    RKEY            reduce using rule 57 (estat -> escrit .)
    RETURN          reduce using rule 57 (estat -> escrit .)
    LPAREN          reduce using rule 57 (estat -> escrit .)
    PLUS            reduce using rule 57 (estat -> escrit .)
    MINUS           reduce using rule 57 (estat -> escrit .)
    CTE_I           reduce using rule 57 (estat -> escrit .)
    CTE_F           reduce using rule 57 (estat -> escrit .)
    CTE_S           reduce using rule 57 (estat -> escrit .)
    TRUE            reduce using rule 57 (estat -> escrit .)
    FALSE           reduce using rule 57 (estat -> escrit .)


state 39

    (58) estat -> ciclo .

    ID              reduce using rule 58 (estat -> ciclo .)
    IF              reduce using rule 58 (estat -> ciclo .)
    PRINT           reduce using rule 58 (estat -> ciclo .)
    WHILE           reduce using rule 58 (estat -> ciclo .)
    READ            reduce using rule 58 (estat -> ciclo .)
    RKEY            reduce using rule 58 (estat -> ciclo .)
    RETURN          reduce using rule 58 (estat -> ciclo .)
    LPAREN          reduce using rule 58 (estat -> ciclo .)
    PLUS            reduce using rule 58 (estat -> ciclo .)
    MINUS           reduce using rule 58 (estat -> ciclo .)
    CTE_I           reduce using rule 58 (estat -> ciclo .)
    CTE_F           reduce using rule 58 (estat -> ciclo .)
    CTE_S           reduce using rule 58 (estat -> ciclo .)
    TRUE            reduce using rule 58 (estat -> ciclo .)
    FALSE           reduce using rule 58 (estat -> ciclo .)


state 40

    (59) estat -> leer .

    ID              reduce using rule 59 (estat -> leer .)
    IF              reduce using rule 59 (estat -> leer .)
    PRINT           reduce using rule 59 (estat -> leer .)
    WHILE           reduce using rule 59 (estat -> leer .)
    READ            reduce using rule 59 (estat -> leer .)
    RKEY            reduce using rule 59 (estat -> leer .)
    RETURN          reduce using rule 59 (estat -> leer .)
    LPAREN          reduce using rule 59 (estat -> leer .)
    PLUS            reduce using rule 59 (estat -> leer .)
    MINUS           reduce using rule 59 (estat -> leer .)
    CTE_I           reduce using rule 59 (estat -> leer .)
    CTE_F           reduce using rule 59 (estat -> leer .)
    CTE_S           reduce using rule 59 (estat -> leer .)
    TRUE            reduce using rule 59 (estat -> leer .)
    FALSE           reduce using rule 59 (estat -> leer .)


state 41

    (60) asign -> ID . pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (61) asign -> ID . pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (109) pushid -> .

    EQUAL           reduce using rule 109 (pushid -> .)
    LBRACE          reduce using rule 109 (pushid -> .)

    pushid                         shift and go to state 63

state 42

    (62) cond -> IF . LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (63) cond -> IF . LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif

    LPAREN          shift and go to state 64


state 43

    (64) escrit -> PRINT . LPAREN escriti RPAREN SEMICOLON

    LPAREN          shift and go to state 65


state 44

    (67) ciclo -> WHILE . while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (119) while1 -> .

    LPAREN          reduce using rule 119 (while1 -> .)

    while1                         shift and go to state 66

state 45

    (68) leer -> READ . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 67


state 46

    (1) program -> PROGRAM COLON global program2 finglobal program3 MAIN . main1 mainc finmain
    (12) main1 -> .

    LKEY            reduce using rule 12 (main1 -> .)

    main1                          shift and go to state 68

state 47

    (2) program -> PROGRAM COLON global program2 finglobal MAIN main1 . mainc finmain
    (45) mainc -> . LKEY RKEY
    (46) mainc -> . LKEY bloq RKEY
    (47) mainc -> . LKEY mainc2 bloq RKEY
    (48) mainc -> . LKEY mainc2 RKEY

    LKEY            shift and go to state 22

    mainc                          shift and go to state 69

state 48

    (6) program3 -> function program3 .

    MAIN            reduce using rule 6 (program3 -> function program3 .)


state 49

    (20) function -> FUNCTION functype . ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (21) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY localvar RKEY
    (22) function -> FUNCTION functype . ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (23) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (24) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (25) function -> FUNCTION functype . ID addInTable LPAREN RPAREN LKEY RKEY

    ID              shift and go to state 70


state 50

    (26) functype -> INT .

    ID              reduce using rule 26 (functype -> INT .)


state 51

    (27) functype -> FLOAT .

    ID              reduce using rule 27 (functype -> FLOAT .)


state 52

    (28) functype -> STRING .

    ID              reduce using rule 28 (functype -> STRING .)


state 53

    (29) functype -> BOOL .

    ID              reduce using rule 29 (functype -> BOOL .)


state 54

    (30) functype -> VOID .

    ID              reduce using rule 30 (functype -> VOID .)


state 55

    (14) var -> VAR tipo ID SEMICOLON .

    VAR             reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    VECTOR          reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    MAIN            reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    FUNCTION        reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    RKEY            reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    ID              reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    IF              reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    PRINT           reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    WHILE           reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)
    READ            reduce using rule 14 (var -> VAR tipo ID SEMICOLON .)


state 56

    (19) vector -> VECTOR ID LBRACE CTE_I . RBRACE SEMICOLON

    RBRACE          shift and go to state 71


state 57

    (46) mainc -> LKEY bloq RKEY .

    $end            reduce using rule 46 (mainc -> LKEY bloq RKEY .)


state 58

    (47) mainc -> LKEY mainc2 bloq . RKEY

    RKEY            shift and go to state 72


state 59

    (48) mainc -> LKEY mainc2 RKEY .

    $end            reduce using rule 48 (mainc -> LKEY mainc2 RKEY .)


state 60

    (54) bloq -> estat bloq .

    RKEY            reduce using rule 54 (bloq -> estat bloq .)
    RETURN          reduce using rule 54 (bloq -> estat bloq .)
    LPAREN          reduce using rule 54 (bloq -> estat bloq .)
    PLUS            reduce using rule 54 (bloq -> estat bloq .)
    MINUS           reduce using rule 54 (bloq -> estat bloq .)
    ID              reduce using rule 54 (bloq -> estat bloq .)
    CTE_I           reduce using rule 54 (bloq -> estat bloq .)
    CTE_F           reduce using rule 54 (bloq -> estat bloq .)
    CTE_S           reduce using rule 54 (bloq -> estat bloq .)
    TRUE            reduce using rule 54 (bloq -> estat bloq .)
    FALSE           reduce using rule 54 (bloq -> estat bloq .)


state 61

    (50) mainc2 -> var mainc2 .

    RKEY            reduce using rule 50 (mainc2 -> var mainc2 .)
    ID              reduce using rule 50 (mainc2 -> var mainc2 .)
    IF              reduce using rule 50 (mainc2 -> var mainc2 .)
    PRINT           reduce using rule 50 (mainc2 -> var mainc2 .)
    WHILE           reduce using rule 50 (mainc2 -> var mainc2 .)
    READ            reduce using rule 50 (mainc2 -> var mainc2 .)


state 62

    (52) mainc2 -> vector mainc2 .

    RKEY            reduce using rule 52 (mainc2 -> vector mainc2 .)
    ID              reduce using rule 52 (mainc2 -> vector mainc2 .)
    IF              reduce using rule 52 (mainc2 -> vector mainc2 .)
    PRINT           reduce using rule 52 (mainc2 -> vector mainc2 .)
    WHILE           reduce using rule 52 (mainc2 -> vector mainc2 .)
    READ            reduce using rule 52 (mainc2 -> vector mainc2 .)


state 63

    (60) asign -> ID pushid . EQUAL pushop expres resolverasignacion SEMICOLON
    (61) asign -> ID pushid . LBRACE exr RBRACE EQUAL pushop expres SEMICOLON

    EQUAL           shift and go to state 73
    LBRACE          shift and go to state 74


state 64

    (62) cond -> IF LPAREN . expres RPAREN LKEY resif bloq RKEY finif
    (63) cond -> IF LPAREN . expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (69) expres -> . exr
    (70) expres -> . exr log expres
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 76
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 65

    (64) escrit -> PRINT LPAREN . escriti RPAREN SEMICOLON
    (65) escriti -> . expres
    (66) escriti -> . expres COMA escriti
    (69) expres -> . exr
    (70) expres -> . exr log expres
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    escriti                        shift and go to state 92
    expres                         shift and go to state 93
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 66

    (67) ciclo -> WHILE while1 . LPAREN expres RPAREN while2 LKEY bloq RKEY while3

    LPAREN          shift and go to state 94


state 67

    (68) leer -> READ LPAREN . ID RPAREN SEMICOLON

    ID              shift and go to state 95


state 68

    (1) program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 . mainc finmain
    (45) mainc -> . LKEY RKEY
    (46) mainc -> . LKEY bloq RKEY
    (47) mainc -> . LKEY mainc2 bloq RKEY
    (48) mainc -> . LKEY mainc2 RKEY

    LKEY            shift and go to state 22

    mainc                          shift and go to state 96

state 69

    (2) program -> PROGRAM COLON global program2 finglobal MAIN main1 mainc . finmain
    (13) finmain -> .

    $end            reduce using rule 13 (finmain -> .)

    finmain                        shift and go to state 97

state 70

    (20) function -> FUNCTION functype ID . addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (21) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY localvar RKEY
    (22) function -> FUNCTION functype ID . addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY
    (23) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (24) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY localvar bloq RKEY
    (25) function -> FUNCTION functype ID . addInTable LPAREN RPAREN LKEY RKEY
    (31) addInTable -> .

    LPAREN          reduce using rule 31 (addInTable -> .)

    addInTable                     shift and go to state 98

state 71

    (19) vector -> VECTOR ID LBRACE CTE_I RBRACE . SEMICOLON

    SEMICOLON       shift and go to state 99


state 72

    (47) mainc -> LKEY mainc2 bloq RKEY .

    $end            reduce using rule 47 (mainc -> LKEY mainc2 bloq RKEY .)


state 73

    (60) asign -> ID pushid EQUAL . pushop expres resolverasignacion SEMICOLON
    (110) pushop -> .

    LPAREN          reduce using rule 110 (pushop -> .)
    PLUS            reduce using rule 110 (pushop -> .)
    MINUS           reduce using rule 110 (pushop -> .)
    ID              reduce using rule 110 (pushop -> .)
    CTE_I           reduce using rule 110 (pushop -> .)
    CTE_F           reduce using rule 110 (pushop -> .)
    CTE_S           reduce using rule 110 (pushop -> .)
    TRUE            reduce using rule 110 (pushop -> .)
    FALSE           reduce using rule 110 (pushop -> .)

    pushop                         shift and go to state 100

state 74

    (61) asign -> ID pushid LBRACE . exr RBRACE EQUAL pushop expres SEMICOLON
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    exr                            shift and go to state 101
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 75

    (79) fact -> LPAREN . pushop expres RPAREN popop
    (110) pushop -> .

    LPAREN          reduce using rule 110 (pushop -> .)
    PLUS            reduce using rule 110 (pushop -> .)
    MINUS           reduce using rule 110 (pushop -> .)
    ID              reduce using rule 110 (pushop -> .)
    CTE_I           reduce using rule 110 (pushop -> .)
    CTE_F           reduce using rule 110 (pushop -> .)
    CTE_S           reduce using rule 110 (pushop -> .)
    TRUE            reduce using rule 110 (pushop -> .)
    FALSE           reduce using rule 110 (pushop -> .)

    pushop                         shift and go to state 102

state 76

    (62) cond -> IF LPAREN expres . RPAREN LKEY resif bloq RKEY finif
    (63) cond -> IF LPAREN expres . RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif

    RPAREN          shift and go to state 103


state 77

    (69) expres -> exr .
    (70) expres -> exr . log expres
    (89) log -> . OR
    (90) log -> . AND

    RPAREN          reduce using rule 69 (expres -> exr .)
    COMA            reduce using rule 69 (expres -> exr .)
    SEMICOLON       reduce using rule 69 (expres -> exr .)
    RBRACE          reduce using rule 69 (expres -> exr .)
    RKEY            reduce using rule 69 (expres -> exr .)
    LPAREN          reduce using rule 69 (expres -> exr .)
    PLUS            reduce using rule 69 (expres -> exr .)
    MINUS           reduce using rule 69 (expres -> exr .)
    ID              reduce using rule 69 (expres -> exr .)
    CTE_I           reduce using rule 69 (expres -> exr .)
    CTE_F           reduce using rule 69 (expres -> exr .)
    CTE_S           reduce using rule 69 (expres -> exr .)
    TRUE            reduce using rule 69 (expres -> exr .)
    FALSE           reduce using rule 69 (expres -> exr .)
    OR              shift and go to state 105
    AND             shift and go to state 106

    log                            shift and go to state 104

state 78

    (71) exr -> ex .
    (72) exr -> ex . rel exr resrel
    (83) rel -> . LOWERTHAN
    (84) rel -> . MORETHAN
    (85) rel -> . LOWEREQ
    (86) rel -> . MOREEQ
    (87) rel -> . SAME
    (88) rel -> . DIFFERENT

    OR              reduce using rule 71 (exr -> ex .)
    AND             reduce using rule 71 (exr -> ex .)
    RPAREN          reduce using rule 71 (exr -> ex .)
    COMA            reduce using rule 71 (exr -> ex .)
    RBRACE          reduce using rule 71 (exr -> ex .)
    SEMICOLON       reduce using rule 71 (exr -> ex .)
    RKEY            reduce using rule 71 (exr -> ex .)
    LPAREN          reduce using rule 71 (exr -> ex .)
    PLUS            reduce using rule 71 (exr -> ex .)
    MINUS           reduce using rule 71 (exr -> ex .)
    ID              reduce using rule 71 (exr -> ex .)
    CTE_I           reduce using rule 71 (exr -> ex .)
    CTE_F           reduce using rule 71 (exr -> ex .)
    CTE_S           reduce using rule 71 (exr -> ex .)
    TRUE            reduce using rule 71 (exr -> ex .)
    FALSE           reduce using rule 71 (exr -> ex .)
    LOWERTHAN       shift and go to state 108
    MORETHAN        shift and go to state 109
    LOWEREQ         shift and go to state 110
    MOREEQ          shift and go to state 111
    SAME            shift and go to state 112
    DIFFERENT       shift and go to state 113

    rel                            shift and go to state 107

state 79

    (73) ex -> term . resterm
    (74) ex -> term . resterm PLUS pushop ex
    (75) ex -> term . resterm MINUS pushop ex
    (114) resterm -> .

    PLUS            reduce using rule 114 (resterm -> .)
    MINUS           reduce using rule 114 (resterm -> .)
    LOWERTHAN       reduce using rule 114 (resterm -> .)
    MORETHAN        reduce using rule 114 (resterm -> .)
    LOWEREQ         reduce using rule 114 (resterm -> .)
    MOREEQ          reduce using rule 114 (resterm -> .)
    SAME            reduce using rule 114 (resterm -> .)
    DIFFERENT       reduce using rule 114 (resterm -> .)
    OR              reduce using rule 114 (resterm -> .)
    AND             reduce using rule 114 (resterm -> .)
    RPAREN          reduce using rule 114 (resterm -> .)
    COMA            reduce using rule 114 (resterm -> .)
    RBRACE          reduce using rule 114 (resterm -> .)
    SEMICOLON       reduce using rule 114 (resterm -> .)
    RKEY            reduce using rule 114 (resterm -> .)
    LPAREN          reduce using rule 114 (resterm -> .)
    ID              reduce using rule 114 (resterm -> .)
    CTE_I           reduce using rule 114 (resterm -> .)
    CTE_F           reduce using rule 114 (resterm -> .)
    CTE_S           reduce using rule 114 (resterm -> .)
    TRUE            reduce using rule 114 (resterm -> .)
    FALSE           reduce using rule 114 (resterm -> .)

    resterm                        shift and go to state 114

state 80

    (81) fact -> PLUS . var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    var_cte                        shift and go to state 115
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 81

    (82) fact -> MINUS . var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    var_cte                        shift and go to state 116
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 82

    (76) term -> fact . resfact
    (77) term -> fact . resfact TIMES pushop term
    (78) term -> fact . resfact DIVIDE pushop term
    (113) resfact -> .

    TIMES           reduce using rule 113 (resfact -> .)
    DIVIDE          reduce using rule 113 (resfact -> .)
    PLUS            reduce using rule 113 (resfact -> .)
    MINUS           reduce using rule 113 (resfact -> .)
    LOWERTHAN       reduce using rule 113 (resfact -> .)
    MORETHAN        reduce using rule 113 (resfact -> .)
    LOWEREQ         reduce using rule 113 (resfact -> .)
    MOREEQ          reduce using rule 113 (resfact -> .)
    SAME            reduce using rule 113 (resfact -> .)
    DIFFERENT       reduce using rule 113 (resfact -> .)
    OR              reduce using rule 113 (resfact -> .)
    AND             reduce using rule 113 (resfact -> .)
    RPAREN          reduce using rule 113 (resfact -> .)
    COMA            reduce using rule 113 (resfact -> .)
    RBRACE          reduce using rule 113 (resfact -> .)
    SEMICOLON       reduce using rule 113 (resfact -> .)
    RKEY            reduce using rule 113 (resfact -> .)
    LPAREN          reduce using rule 113 (resfact -> .)
    ID              reduce using rule 113 (resfact -> .)
    CTE_I           reduce using rule 113 (resfact -> .)
    CTE_F           reduce using rule 113 (resfact -> .)
    CTE_S           reduce using rule 113 (resfact -> .)
    TRUE            reduce using rule 113 (resfact -> .)
    FALSE           reduce using rule 113 (resfact -> .)

    resfact                        shift and go to state 117

state 83

    (80) fact -> var_cte .

    TIMES           reduce using rule 80 (fact -> var_cte .)
    DIVIDE          reduce using rule 80 (fact -> var_cte .)
    PLUS            reduce using rule 80 (fact -> var_cte .)
    MINUS           reduce using rule 80 (fact -> var_cte .)
    LOWERTHAN       reduce using rule 80 (fact -> var_cte .)
    MORETHAN        reduce using rule 80 (fact -> var_cte .)
    LOWEREQ         reduce using rule 80 (fact -> var_cte .)
    MOREEQ          reduce using rule 80 (fact -> var_cte .)
    SAME            reduce using rule 80 (fact -> var_cte .)
    DIFFERENT       reduce using rule 80 (fact -> var_cte .)
    OR              reduce using rule 80 (fact -> var_cte .)
    AND             reduce using rule 80 (fact -> var_cte .)
    RPAREN          reduce using rule 80 (fact -> var_cte .)
    COMA            reduce using rule 80 (fact -> var_cte .)
    RBRACE          reduce using rule 80 (fact -> var_cte .)
    SEMICOLON       reduce using rule 80 (fact -> var_cte .)
    RKEY            reduce using rule 80 (fact -> var_cte .)
    LPAREN          reduce using rule 80 (fact -> var_cte .)
    ID              reduce using rule 80 (fact -> var_cte .)
    CTE_I           reduce using rule 80 (fact -> var_cte .)
    CTE_F           reduce using rule 80 (fact -> var_cte .)
    CTE_S           reduce using rule 80 (fact -> var_cte .)
    TRUE            reduce using rule 80 (fact -> var_cte .)
    FALSE           reduce using rule 80 (fact -> var_cte .)


state 84

    (91) var_cte -> ID . pushid
    (99) fcall -> ID . existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> ID . existfunc LPAREN RPAREN
    (106) vcall -> ID . LBRACE expres RBRACE
    (109) pushid -> .
    (101) existfunc -> .

  ! reduce/reduce conflict for LPAREN resolved using rule 101 (existfunc -> .)
    LBRACE          shift and go to state 120
    TIMES           reduce using rule 109 (pushid -> .)
    DIVIDE          reduce using rule 109 (pushid -> .)
    PLUS            reduce using rule 109 (pushid -> .)
    MINUS           reduce using rule 109 (pushid -> .)
    LOWERTHAN       reduce using rule 109 (pushid -> .)
    MORETHAN        reduce using rule 109 (pushid -> .)
    LOWEREQ         reduce using rule 109 (pushid -> .)
    MOREEQ          reduce using rule 109 (pushid -> .)
    SAME            reduce using rule 109 (pushid -> .)
    DIFFERENT       reduce using rule 109 (pushid -> .)
    OR              reduce using rule 109 (pushid -> .)
    AND             reduce using rule 109 (pushid -> .)
    RPAREN          reduce using rule 109 (pushid -> .)
    COMA            reduce using rule 109 (pushid -> .)
    RBRACE          reduce using rule 109 (pushid -> .)
    SEMICOLON       reduce using rule 109 (pushid -> .)
    RKEY            reduce using rule 109 (pushid -> .)
    ID              reduce using rule 109 (pushid -> .)
    CTE_I           reduce using rule 109 (pushid -> .)
    CTE_F           reduce using rule 109 (pushid -> .)
    CTE_S           reduce using rule 109 (pushid -> .)
    TRUE            reduce using rule 109 (pushid -> .)
    FALSE           reduce using rule 109 (pushid -> .)
    LPAREN          reduce using rule 101 (existfunc -> .)

  ! LPAREN          [ reduce using rule 109 (pushid -> .) ]

    pushid                         shift and go to state 118
    existfunc                      shift and go to state 119

state 85

    (92) var_cte -> CTE_I . pushcte
    (108) pushcte -> .

    TIMES           reduce using rule 108 (pushcte -> .)
    DIVIDE          reduce using rule 108 (pushcte -> .)
    PLUS            reduce using rule 108 (pushcte -> .)
    MINUS           reduce using rule 108 (pushcte -> .)
    LOWERTHAN       reduce using rule 108 (pushcte -> .)
    MORETHAN        reduce using rule 108 (pushcte -> .)
    LOWEREQ         reduce using rule 108 (pushcte -> .)
    MOREEQ          reduce using rule 108 (pushcte -> .)
    SAME            reduce using rule 108 (pushcte -> .)
    DIFFERENT       reduce using rule 108 (pushcte -> .)
    OR              reduce using rule 108 (pushcte -> .)
    AND             reduce using rule 108 (pushcte -> .)
    RPAREN          reduce using rule 108 (pushcte -> .)
    COMA            reduce using rule 108 (pushcte -> .)
    RBRACE          reduce using rule 108 (pushcte -> .)
    SEMICOLON       reduce using rule 108 (pushcte -> .)
    RKEY            reduce using rule 108 (pushcte -> .)
    LPAREN          reduce using rule 108 (pushcte -> .)
    ID              reduce using rule 108 (pushcte -> .)
    CTE_I           reduce using rule 108 (pushcte -> .)
    CTE_F           reduce using rule 108 (pushcte -> .)
    CTE_S           reduce using rule 108 (pushcte -> .)
    TRUE            reduce using rule 108 (pushcte -> .)
    FALSE           reduce using rule 108 (pushcte -> .)

    pushcte                        shift and go to state 121

state 86

    (93) var_cte -> CTE_F . pushcte
    (108) pushcte -> .

    TIMES           reduce using rule 108 (pushcte -> .)
    DIVIDE          reduce using rule 108 (pushcte -> .)
    PLUS            reduce using rule 108 (pushcte -> .)
    MINUS           reduce using rule 108 (pushcte -> .)
    LOWERTHAN       reduce using rule 108 (pushcte -> .)
    MORETHAN        reduce using rule 108 (pushcte -> .)
    LOWEREQ         reduce using rule 108 (pushcte -> .)
    MOREEQ          reduce using rule 108 (pushcte -> .)
    SAME            reduce using rule 108 (pushcte -> .)
    DIFFERENT       reduce using rule 108 (pushcte -> .)
    OR              reduce using rule 108 (pushcte -> .)
    AND             reduce using rule 108 (pushcte -> .)
    RPAREN          reduce using rule 108 (pushcte -> .)
    COMA            reduce using rule 108 (pushcte -> .)
    RBRACE          reduce using rule 108 (pushcte -> .)
    SEMICOLON       reduce using rule 108 (pushcte -> .)
    RKEY            reduce using rule 108 (pushcte -> .)
    LPAREN          reduce using rule 108 (pushcte -> .)
    ID              reduce using rule 108 (pushcte -> .)
    CTE_I           reduce using rule 108 (pushcte -> .)
    CTE_F           reduce using rule 108 (pushcte -> .)
    CTE_S           reduce using rule 108 (pushcte -> .)
    TRUE            reduce using rule 108 (pushcte -> .)
    FALSE           reduce using rule 108 (pushcte -> .)

    pushcte                        shift and go to state 122

state 87

    (94) var_cte -> CTE_S . pushcte
    (108) pushcte -> .

    TIMES           reduce using rule 108 (pushcte -> .)
    DIVIDE          reduce using rule 108 (pushcte -> .)
    PLUS            reduce using rule 108 (pushcte -> .)
    MINUS           reduce using rule 108 (pushcte -> .)
    LOWERTHAN       reduce using rule 108 (pushcte -> .)
    MORETHAN        reduce using rule 108 (pushcte -> .)
    LOWEREQ         reduce using rule 108 (pushcte -> .)
    MOREEQ          reduce using rule 108 (pushcte -> .)
    SAME            reduce using rule 108 (pushcte -> .)
    DIFFERENT       reduce using rule 108 (pushcte -> .)
    OR              reduce using rule 108 (pushcte -> .)
    AND             reduce using rule 108 (pushcte -> .)
    RPAREN          reduce using rule 108 (pushcte -> .)
    COMA            reduce using rule 108 (pushcte -> .)
    RBRACE          reduce using rule 108 (pushcte -> .)
    SEMICOLON       reduce using rule 108 (pushcte -> .)
    RKEY            reduce using rule 108 (pushcte -> .)
    LPAREN          reduce using rule 108 (pushcte -> .)
    ID              reduce using rule 108 (pushcte -> .)
    CTE_I           reduce using rule 108 (pushcte -> .)
    CTE_F           reduce using rule 108 (pushcte -> .)
    CTE_S           reduce using rule 108 (pushcte -> .)
    TRUE            reduce using rule 108 (pushcte -> .)
    FALSE           reduce using rule 108 (pushcte -> .)

    pushcte                        shift and go to state 123

state 88

    (95) var_cte -> TRUE . pushcte
    (108) pushcte -> .

    TIMES           reduce using rule 108 (pushcte -> .)
    DIVIDE          reduce using rule 108 (pushcte -> .)
    PLUS            reduce using rule 108 (pushcte -> .)
    MINUS           reduce using rule 108 (pushcte -> .)
    LOWERTHAN       reduce using rule 108 (pushcte -> .)
    MORETHAN        reduce using rule 108 (pushcte -> .)
    LOWEREQ         reduce using rule 108 (pushcte -> .)
    MOREEQ          reduce using rule 108 (pushcte -> .)
    SAME            reduce using rule 108 (pushcte -> .)
    DIFFERENT       reduce using rule 108 (pushcte -> .)
    OR              reduce using rule 108 (pushcte -> .)
    AND             reduce using rule 108 (pushcte -> .)
    RPAREN          reduce using rule 108 (pushcte -> .)
    COMA            reduce using rule 108 (pushcte -> .)
    RBRACE          reduce using rule 108 (pushcte -> .)
    SEMICOLON       reduce using rule 108 (pushcte -> .)
    RKEY            reduce using rule 108 (pushcte -> .)
    LPAREN          reduce using rule 108 (pushcte -> .)
    ID              reduce using rule 108 (pushcte -> .)
    CTE_I           reduce using rule 108 (pushcte -> .)
    CTE_F           reduce using rule 108 (pushcte -> .)
    CTE_S           reduce using rule 108 (pushcte -> .)
    TRUE            reduce using rule 108 (pushcte -> .)
    FALSE           reduce using rule 108 (pushcte -> .)

    pushcte                        shift and go to state 124

state 89

    (96) var_cte -> FALSE . pushcte
    (108) pushcte -> .

    TIMES           reduce using rule 108 (pushcte -> .)
    DIVIDE          reduce using rule 108 (pushcte -> .)
    PLUS            reduce using rule 108 (pushcte -> .)
    MINUS           reduce using rule 108 (pushcte -> .)
    LOWERTHAN       reduce using rule 108 (pushcte -> .)
    MORETHAN        reduce using rule 108 (pushcte -> .)
    LOWEREQ         reduce using rule 108 (pushcte -> .)
    MOREEQ          reduce using rule 108 (pushcte -> .)
    SAME            reduce using rule 108 (pushcte -> .)
    DIFFERENT       reduce using rule 108 (pushcte -> .)
    OR              reduce using rule 108 (pushcte -> .)
    AND             reduce using rule 108 (pushcte -> .)
    RPAREN          reduce using rule 108 (pushcte -> .)
    COMA            reduce using rule 108 (pushcte -> .)
    RBRACE          reduce using rule 108 (pushcte -> .)
    SEMICOLON       reduce using rule 108 (pushcte -> .)
    RKEY            reduce using rule 108 (pushcte -> .)
    LPAREN          reduce using rule 108 (pushcte -> .)
    ID              reduce using rule 108 (pushcte -> .)
    CTE_I           reduce using rule 108 (pushcte -> .)
    CTE_F           reduce using rule 108 (pushcte -> .)
    CTE_S           reduce using rule 108 (pushcte -> .)
    TRUE            reduce using rule 108 (pushcte -> .)
    FALSE           reduce using rule 108 (pushcte -> .)

    pushcte                        shift and go to state 125

state 90

    (97) var_cte -> fcall .

    TIMES           reduce using rule 97 (var_cte -> fcall .)
    DIVIDE          reduce using rule 97 (var_cte -> fcall .)
    PLUS            reduce using rule 97 (var_cte -> fcall .)
    MINUS           reduce using rule 97 (var_cte -> fcall .)
    LOWERTHAN       reduce using rule 97 (var_cte -> fcall .)
    MORETHAN        reduce using rule 97 (var_cte -> fcall .)
    LOWEREQ         reduce using rule 97 (var_cte -> fcall .)
    MOREEQ          reduce using rule 97 (var_cte -> fcall .)
    SAME            reduce using rule 97 (var_cte -> fcall .)
    DIFFERENT       reduce using rule 97 (var_cte -> fcall .)
    OR              reduce using rule 97 (var_cte -> fcall .)
    AND             reduce using rule 97 (var_cte -> fcall .)
    RPAREN          reduce using rule 97 (var_cte -> fcall .)
    COMA            reduce using rule 97 (var_cte -> fcall .)
    RBRACE          reduce using rule 97 (var_cte -> fcall .)
    SEMICOLON       reduce using rule 97 (var_cte -> fcall .)
    RKEY            reduce using rule 97 (var_cte -> fcall .)
    LPAREN          reduce using rule 97 (var_cte -> fcall .)
    ID              reduce using rule 97 (var_cte -> fcall .)
    CTE_I           reduce using rule 97 (var_cte -> fcall .)
    CTE_F           reduce using rule 97 (var_cte -> fcall .)
    CTE_S           reduce using rule 97 (var_cte -> fcall .)
    TRUE            reduce using rule 97 (var_cte -> fcall .)
    FALSE           reduce using rule 97 (var_cte -> fcall .)


state 91

    (98) var_cte -> vcall .

    TIMES           reduce using rule 98 (var_cte -> vcall .)
    DIVIDE          reduce using rule 98 (var_cte -> vcall .)
    PLUS            reduce using rule 98 (var_cte -> vcall .)
    MINUS           reduce using rule 98 (var_cte -> vcall .)
    LOWERTHAN       reduce using rule 98 (var_cte -> vcall .)
    MORETHAN        reduce using rule 98 (var_cte -> vcall .)
    LOWEREQ         reduce using rule 98 (var_cte -> vcall .)
    MOREEQ          reduce using rule 98 (var_cte -> vcall .)
    SAME            reduce using rule 98 (var_cte -> vcall .)
    DIFFERENT       reduce using rule 98 (var_cte -> vcall .)
    OR              reduce using rule 98 (var_cte -> vcall .)
    AND             reduce using rule 98 (var_cte -> vcall .)
    RPAREN          reduce using rule 98 (var_cte -> vcall .)
    COMA            reduce using rule 98 (var_cte -> vcall .)
    RBRACE          reduce using rule 98 (var_cte -> vcall .)
    SEMICOLON       reduce using rule 98 (var_cte -> vcall .)
    RKEY            reduce using rule 98 (var_cte -> vcall .)
    LPAREN          reduce using rule 98 (var_cte -> vcall .)
    ID              reduce using rule 98 (var_cte -> vcall .)
    CTE_I           reduce using rule 98 (var_cte -> vcall .)
    CTE_F           reduce using rule 98 (var_cte -> vcall .)
    CTE_S           reduce using rule 98 (var_cte -> vcall .)
    TRUE            reduce using rule 98 (var_cte -> vcall .)
    FALSE           reduce using rule 98 (var_cte -> vcall .)


state 92

    (64) escrit -> PRINT LPAREN escriti . RPAREN SEMICOLON

    RPAREN          shift and go to state 126


state 93

    (65) escriti -> expres .
    (66) escriti -> expres . COMA escriti

    RPAREN          reduce using rule 65 (escriti -> expres .)
    COMA            shift and go to state 127


state 94

    (67) ciclo -> WHILE while1 LPAREN . expres RPAREN while2 LKEY bloq RKEY while3
    (69) expres -> . exr
    (70) expres -> . exr log expres
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 128
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 95

    (68) leer -> READ LPAREN ID . RPAREN SEMICOLON

    RPAREN          shift and go to state 129


state 96

    (1) program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc . finmain
    (13) finmain -> .

    $end            reduce using rule 13 (finmain -> .)

    finmain                        shift and go to state 130

state 97

    (2) program -> PROGRAM COLON global program2 finglobal MAIN main1 mainc finmain .

    $end            reduce using rule 2 (program -> PROGRAM COLON global program2 finglobal MAIN main1 mainc finmain .)


state 98

    (20) function -> FUNCTION functype ID addInTable . LPAREN funci RPAREN LKEY localvar bloq return expres RKEY
    (21) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY localvar RKEY
    (22) function -> FUNCTION functype ID addInTable . LPAREN funci RPAREN LKEY localvar bloq RKEY
    (23) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY localvar bloq return expres RKEY
    (24) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY localvar bloq RKEY
    (25) function -> FUNCTION functype ID addInTable . LPAREN RPAREN LKEY RKEY

    LPAREN          shift and go to state 131


state 99

    (19) vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .

    VAR             reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    VECTOR          reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    MAIN            reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    FUNCTION        reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    RKEY            reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    ID              reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    IF              reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    PRINT           reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    WHILE           reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)
    READ            reduce using rule 19 (vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON .)


state 100

    (60) asign -> ID pushid EQUAL pushop . expres resolverasignacion SEMICOLON
    (69) expres -> . exr
    (70) expres -> . exr log expres
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 132
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 101

    (61) asign -> ID pushid LBRACE exr . RBRACE EQUAL pushop expres SEMICOLON

    RBRACE          shift and go to state 133


state 102

    (79) fact -> LPAREN pushop . expres RPAREN popop
    (69) expres -> . exr
    (70) expres -> . exr log expres
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 134
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 103

    (62) cond -> IF LPAREN expres RPAREN . LKEY resif bloq RKEY finif
    (63) cond -> IF LPAREN expres RPAREN . LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif

    LKEY            shift and go to state 135


state 104

    (70) expres -> exr log . expres
    (69) expres -> . exr
    (70) expres -> . exr log expres
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    exr                            shift and go to state 77
    expres                         shift and go to state 136
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 105

    (89) log -> OR .

    LPAREN          reduce using rule 89 (log -> OR .)
    PLUS            reduce using rule 89 (log -> OR .)
    MINUS           reduce using rule 89 (log -> OR .)
    ID              reduce using rule 89 (log -> OR .)
    CTE_I           reduce using rule 89 (log -> OR .)
    CTE_F           reduce using rule 89 (log -> OR .)
    CTE_S           reduce using rule 89 (log -> OR .)
    TRUE            reduce using rule 89 (log -> OR .)
    FALSE           reduce using rule 89 (log -> OR .)


state 106

    (90) log -> AND .

    LPAREN          reduce using rule 90 (log -> AND .)
    PLUS            reduce using rule 90 (log -> AND .)
    MINUS           reduce using rule 90 (log -> AND .)
    ID              reduce using rule 90 (log -> AND .)
    CTE_I           reduce using rule 90 (log -> AND .)
    CTE_F           reduce using rule 90 (log -> AND .)
    CTE_S           reduce using rule 90 (log -> AND .)
    TRUE            reduce using rule 90 (log -> AND .)
    FALSE           reduce using rule 90 (log -> AND .)


state 107

    (72) exr -> ex rel . exr resrel
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    ex                             shift and go to state 78
    exr                            shift and go to state 137
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 108

    (83) rel -> LOWERTHAN .

    LPAREN          reduce using rule 83 (rel -> LOWERTHAN .)
    PLUS            reduce using rule 83 (rel -> LOWERTHAN .)
    MINUS           reduce using rule 83 (rel -> LOWERTHAN .)
    ID              reduce using rule 83 (rel -> LOWERTHAN .)
    CTE_I           reduce using rule 83 (rel -> LOWERTHAN .)
    CTE_F           reduce using rule 83 (rel -> LOWERTHAN .)
    CTE_S           reduce using rule 83 (rel -> LOWERTHAN .)
    TRUE            reduce using rule 83 (rel -> LOWERTHAN .)
    FALSE           reduce using rule 83 (rel -> LOWERTHAN .)


state 109

    (84) rel -> MORETHAN .

    LPAREN          reduce using rule 84 (rel -> MORETHAN .)
    PLUS            reduce using rule 84 (rel -> MORETHAN .)
    MINUS           reduce using rule 84 (rel -> MORETHAN .)
    ID              reduce using rule 84 (rel -> MORETHAN .)
    CTE_I           reduce using rule 84 (rel -> MORETHAN .)
    CTE_F           reduce using rule 84 (rel -> MORETHAN .)
    CTE_S           reduce using rule 84 (rel -> MORETHAN .)
    TRUE            reduce using rule 84 (rel -> MORETHAN .)
    FALSE           reduce using rule 84 (rel -> MORETHAN .)


state 110

    (85) rel -> LOWEREQ .

    LPAREN          reduce using rule 85 (rel -> LOWEREQ .)
    PLUS            reduce using rule 85 (rel -> LOWEREQ .)
    MINUS           reduce using rule 85 (rel -> LOWEREQ .)
    ID              reduce using rule 85 (rel -> LOWEREQ .)
    CTE_I           reduce using rule 85 (rel -> LOWEREQ .)
    CTE_F           reduce using rule 85 (rel -> LOWEREQ .)
    CTE_S           reduce using rule 85 (rel -> LOWEREQ .)
    TRUE            reduce using rule 85 (rel -> LOWEREQ .)
    FALSE           reduce using rule 85 (rel -> LOWEREQ .)


state 111

    (86) rel -> MOREEQ .

    LPAREN          reduce using rule 86 (rel -> MOREEQ .)
    PLUS            reduce using rule 86 (rel -> MOREEQ .)
    MINUS           reduce using rule 86 (rel -> MOREEQ .)
    ID              reduce using rule 86 (rel -> MOREEQ .)
    CTE_I           reduce using rule 86 (rel -> MOREEQ .)
    CTE_F           reduce using rule 86 (rel -> MOREEQ .)
    CTE_S           reduce using rule 86 (rel -> MOREEQ .)
    TRUE            reduce using rule 86 (rel -> MOREEQ .)
    FALSE           reduce using rule 86 (rel -> MOREEQ .)


state 112

    (87) rel -> SAME .

    LPAREN          reduce using rule 87 (rel -> SAME .)
    PLUS            reduce using rule 87 (rel -> SAME .)
    MINUS           reduce using rule 87 (rel -> SAME .)
    ID              reduce using rule 87 (rel -> SAME .)
    CTE_I           reduce using rule 87 (rel -> SAME .)
    CTE_F           reduce using rule 87 (rel -> SAME .)
    CTE_S           reduce using rule 87 (rel -> SAME .)
    TRUE            reduce using rule 87 (rel -> SAME .)
    FALSE           reduce using rule 87 (rel -> SAME .)


state 113

    (88) rel -> DIFFERENT .

    LPAREN          reduce using rule 88 (rel -> DIFFERENT .)
    PLUS            reduce using rule 88 (rel -> DIFFERENT .)
    MINUS           reduce using rule 88 (rel -> DIFFERENT .)
    ID              reduce using rule 88 (rel -> DIFFERENT .)
    CTE_I           reduce using rule 88 (rel -> DIFFERENT .)
    CTE_F           reduce using rule 88 (rel -> DIFFERENT .)
    CTE_S           reduce using rule 88 (rel -> DIFFERENT .)
    TRUE            reduce using rule 88 (rel -> DIFFERENT .)
    FALSE           reduce using rule 88 (rel -> DIFFERENT .)


state 114

    (73) ex -> term resterm .
    (74) ex -> term resterm . PLUS pushop ex
    (75) ex -> term resterm . MINUS pushop ex

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LOWERTHAN       reduce using rule 73 (ex -> term resterm .)
    MORETHAN        reduce using rule 73 (ex -> term resterm .)
    LOWEREQ         reduce using rule 73 (ex -> term resterm .)
    MOREEQ          reduce using rule 73 (ex -> term resterm .)
    SAME            reduce using rule 73 (ex -> term resterm .)
    DIFFERENT       reduce using rule 73 (ex -> term resterm .)
    OR              reduce using rule 73 (ex -> term resterm .)
    AND             reduce using rule 73 (ex -> term resterm .)
    RPAREN          reduce using rule 73 (ex -> term resterm .)
    COMA            reduce using rule 73 (ex -> term resterm .)
    RBRACE          reduce using rule 73 (ex -> term resterm .)
    SEMICOLON       reduce using rule 73 (ex -> term resterm .)
    RKEY            reduce using rule 73 (ex -> term resterm .)
    LPAREN          reduce using rule 73 (ex -> term resterm .)
    ID              reduce using rule 73 (ex -> term resterm .)
    CTE_I           reduce using rule 73 (ex -> term resterm .)
    CTE_F           reduce using rule 73 (ex -> term resterm .)
    CTE_S           reduce using rule 73 (ex -> term resterm .)
    TRUE            reduce using rule 73 (ex -> term resterm .)
    FALSE           reduce using rule 73 (ex -> term resterm .)
    PLUS            shift and go to state 138
    MINUS           shift and go to state 139

  ! PLUS            [ reduce using rule 73 (ex -> term resterm .) ]
  ! MINUS           [ reduce using rule 73 (ex -> term resterm .) ]


state 115

    (81) fact -> PLUS var_cte .

    TIMES           reduce using rule 81 (fact -> PLUS var_cte .)
    DIVIDE          reduce using rule 81 (fact -> PLUS var_cte .)
    PLUS            reduce using rule 81 (fact -> PLUS var_cte .)
    MINUS           reduce using rule 81 (fact -> PLUS var_cte .)
    LOWERTHAN       reduce using rule 81 (fact -> PLUS var_cte .)
    MORETHAN        reduce using rule 81 (fact -> PLUS var_cte .)
    LOWEREQ         reduce using rule 81 (fact -> PLUS var_cte .)
    MOREEQ          reduce using rule 81 (fact -> PLUS var_cte .)
    SAME            reduce using rule 81 (fact -> PLUS var_cte .)
    DIFFERENT       reduce using rule 81 (fact -> PLUS var_cte .)
    OR              reduce using rule 81 (fact -> PLUS var_cte .)
    AND             reduce using rule 81 (fact -> PLUS var_cte .)
    RPAREN          reduce using rule 81 (fact -> PLUS var_cte .)
    COMA            reduce using rule 81 (fact -> PLUS var_cte .)
    RBRACE          reduce using rule 81 (fact -> PLUS var_cte .)
    SEMICOLON       reduce using rule 81 (fact -> PLUS var_cte .)
    RKEY            reduce using rule 81 (fact -> PLUS var_cte .)
    LPAREN          reduce using rule 81 (fact -> PLUS var_cte .)
    ID              reduce using rule 81 (fact -> PLUS var_cte .)
    CTE_I           reduce using rule 81 (fact -> PLUS var_cte .)
    CTE_F           reduce using rule 81 (fact -> PLUS var_cte .)
    CTE_S           reduce using rule 81 (fact -> PLUS var_cte .)
    TRUE            reduce using rule 81 (fact -> PLUS var_cte .)
    FALSE           reduce using rule 81 (fact -> PLUS var_cte .)


state 116

    (82) fact -> MINUS var_cte .

    TIMES           reduce using rule 82 (fact -> MINUS var_cte .)
    DIVIDE          reduce using rule 82 (fact -> MINUS var_cte .)
    PLUS            reduce using rule 82 (fact -> MINUS var_cte .)
    MINUS           reduce using rule 82 (fact -> MINUS var_cte .)
    LOWERTHAN       reduce using rule 82 (fact -> MINUS var_cte .)
    MORETHAN        reduce using rule 82 (fact -> MINUS var_cte .)
    LOWEREQ         reduce using rule 82 (fact -> MINUS var_cte .)
    MOREEQ          reduce using rule 82 (fact -> MINUS var_cte .)
    SAME            reduce using rule 82 (fact -> MINUS var_cte .)
    DIFFERENT       reduce using rule 82 (fact -> MINUS var_cte .)
    OR              reduce using rule 82 (fact -> MINUS var_cte .)
    AND             reduce using rule 82 (fact -> MINUS var_cte .)
    RPAREN          reduce using rule 82 (fact -> MINUS var_cte .)
    COMA            reduce using rule 82 (fact -> MINUS var_cte .)
    RBRACE          reduce using rule 82 (fact -> MINUS var_cte .)
    SEMICOLON       reduce using rule 82 (fact -> MINUS var_cte .)
    RKEY            reduce using rule 82 (fact -> MINUS var_cte .)
    LPAREN          reduce using rule 82 (fact -> MINUS var_cte .)
    ID              reduce using rule 82 (fact -> MINUS var_cte .)
    CTE_I           reduce using rule 82 (fact -> MINUS var_cte .)
    CTE_F           reduce using rule 82 (fact -> MINUS var_cte .)
    CTE_S           reduce using rule 82 (fact -> MINUS var_cte .)
    TRUE            reduce using rule 82 (fact -> MINUS var_cte .)
    FALSE           reduce using rule 82 (fact -> MINUS var_cte .)


state 117

    (76) term -> fact resfact .
    (77) term -> fact resfact . TIMES pushop term
    (78) term -> fact resfact . DIVIDE pushop term

    PLUS            reduce using rule 76 (term -> fact resfact .)
    MINUS           reduce using rule 76 (term -> fact resfact .)
    LOWERTHAN       reduce using rule 76 (term -> fact resfact .)
    MORETHAN        reduce using rule 76 (term -> fact resfact .)
    LOWEREQ         reduce using rule 76 (term -> fact resfact .)
    MOREEQ          reduce using rule 76 (term -> fact resfact .)
    SAME            reduce using rule 76 (term -> fact resfact .)
    DIFFERENT       reduce using rule 76 (term -> fact resfact .)
    OR              reduce using rule 76 (term -> fact resfact .)
    AND             reduce using rule 76 (term -> fact resfact .)
    RPAREN          reduce using rule 76 (term -> fact resfact .)
    COMA            reduce using rule 76 (term -> fact resfact .)
    RBRACE          reduce using rule 76 (term -> fact resfact .)
    SEMICOLON       reduce using rule 76 (term -> fact resfact .)
    RKEY            reduce using rule 76 (term -> fact resfact .)
    LPAREN          reduce using rule 76 (term -> fact resfact .)
    ID              reduce using rule 76 (term -> fact resfact .)
    CTE_I           reduce using rule 76 (term -> fact resfact .)
    CTE_F           reduce using rule 76 (term -> fact resfact .)
    CTE_S           reduce using rule 76 (term -> fact resfact .)
    TRUE            reduce using rule 76 (term -> fact resfact .)
    FALSE           reduce using rule 76 (term -> fact resfact .)
    TIMES           shift and go to state 140
    DIVIDE          shift and go to state 141


state 118

    (91) var_cte -> ID pushid .

    TIMES           reduce using rule 91 (var_cte -> ID pushid .)
    DIVIDE          reduce using rule 91 (var_cte -> ID pushid .)
    PLUS            reduce using rule 91 (var_cte -> ID pushid .)
    MINUS           reduce using rule 91 (var_cte -> ID pushid .)
    LOWERTHAN       reduce using rule 91 (var_cte -> ID pushid .)
    MORETHAN        reduce using rule 91 (var_cte -> ID pushid .)
    LOWEREQ         reduce using rule 91 (var_cte -> ID pushid .)
    MOREEQ          reduce using rule 91 (var_cte -> ID pushid .)
    SAME            reduce using rule 91 (var_cte -> ID pushid .)
    DIFFERENT       reduce using rule 91 (var_cte -> ID pushid .)
    OR              reduce using rule 91 (var_cte -> ID pushid .)
    AND             reduce using rule 91 (var_cte -> ID pushid .)
    RPAREN          reduce using rule 91 (var_cte -> ID pushid .)
    COMA            reduce using rule 91 (var_cte -> ID pushid .)
    RBRACE          reduce using rule 91 (var_cte -> ID pushid .)
    SEMICOLON       reduce using rule 91 (var_cte -> ID pushid .)
    RKEY            reduce using rule 91 (var_cte -> ID pushid .)
    LPAREN          reduce using rule 91 (var_cte -> ID pushid .)
    ID              reduce using rule 91 (var_cte -> ID pushid .)
    CTE_I           reduce using rule 91 (var_cte -> ID pushid .)
    CTE_F           reduce using rule 91 (var_cte -> ID pushid .)
    CTE_S           reduce using rule 91 (var_cte -> ID pushid .)
    TRUE            reduce using rule 91 (var_cte -> ID pushid .)
    FALSE           reduce using rule 91 (var_cte -> ID pushid .)


state 119

    (99) fcall -> ID existfunc . LPAREN startera fcall1 RPAREN
    (100) fcall -> ID existfunc . LPAREN RPAREN

    LPAREN          shift and go to state 142


state 120

    (106) vcall -> ID LBRACE . expres RBRACE
    (69) expres -> . exr
    (70) expres -> . exr log expres
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 143
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 121

    (92) var_cte -> CTE_I pushcte .

    TIMES           reduce using rule 92 (var_cte -> CTE_I pushcte .)
    DIVIDE          reduce using rule 92 (var_cte -> CTE_I pushcte .)
    PLUS            reduce using rule 92 (var_cte -> CTE_I pushcte .)
    MINUS           reduce using rule 92 (var_cte -> CTE_I pushcte .)
    LOWERTHAN       reduce using rule 92 (var_cte -> CTE_I pushcte .)
    MORETHAN        reduce using rule 92 (var_cte -> CTE_I pushcte .)
    LOWEREQ         reduce using rule 92 (var_cte -> CTE_I pushcte .)
    MOREEQ          reduce using rule 92 (var_cte -> CTE_I pushcte .)
    SAME            reduce using rule 92 (var_cte -> CTE_I pushcte .)
    DIFFERENT       reduce using rule 92 (var_cte -> CTE_I pushcte .)
    OR              reduce using rule 92 (var_cte -> CTE_I pushcte .)
    AND             reduce using rule 92 (var_cte -> CTE_I pushcte .)
    RPAREN          reduce using rule 92 (var_cte -> CTE_I pushcte .)
    COMA            reduce using rule 92 (var_cte -> CTE_I pushcte .)
    RBRACE          reduce using rule 92 (var_cte -> CTE_I pushcte .)
    SEMICOLON       reduce using rule 92 (var_cte -> CTE_I pushcte .)
    RKEY            reduce using rule 92 (var_cte -> CTE_I pushcte .)
    LPAREN          reduce using rule 92 (var_cte -> CTE_I pushcte .)
    ID              reduce using rule 92 (var_cte -> CTE_I pushcte .)
    CTE_I           reduce using rule 92 (var_cte -> CTE_I pushcte .)
    CTE_F           reduce using rule 92 (var_cte -> CTE_I pushcte .)
    CTE_S           reduce using rule 92 (var_cte -> CTE_I pushcte .)
    TRUE            reduce using rule 92 (var_cte -> CTE_I pushcte .)
    FALSE           reduce using rule 92 (var_cte -> CTE_I pushcte .)


state 122

    (93) var_cte -> CTE_F pushcte .

    TIMES           reduce using rule 93 (var_cte -> CTE_F pushcte .)
    DIVIDE          reduce using rule 93 (var_cte -> CTE_F pushcte .)
    PLUS            reduce using rule 93 (var_cte -> CTE_F pushcte .)
    MINUS           reduce using rule 93 (var_cte -> CTE_F pushcte .)
    LOWERTHAN       reduce using rule 93 (var_cte -> CTE_F pushcte .)
    MORETHAN        reduce using rule 93 (var_cte -> CTE_F pushcte .)
    LOWEREQ         reduce using rule 93 (var_cte -> CTE_F pushcte .)
    MOREEQ          reduce using rule 93 (var_cte -> CTE_F pushcte .)
    SAME            reduce using rule 93 (var_cte -> CTE_F pushcte .)
    DIFFERENT       reduce using rule 93 (var_cte -> CTE_F pushcte .)
    OR              reduce using rule 93 (var_cte -> CTE_F pushcte .)
    AND             reduce using rule 93 (var_cte -> CTE_F pushcte .)
    RPAREN          reduce using rule 93 (var_cte -> CTE_F pushcte .)
    COMA            reduce using rule 93 (var_cte -> CTE_F pushcte .)
    RBRACE          reduce using rule 93 (var_cte -> CTE_F pushcte .)
    SEMICOLON       reduce using rule 93 (var_cte -> CTE_F pushcte .)
    RKEY            reduce using rule 93 (var_cte -> CTE_F pushcte .)
    LPAREN          reduce using rule 93 (var_cte -> CTE_F pushcte .)
    ID              reduce using rule 93 (var_cte -> CTE_F pushcte .)
    CTE_I           reduce using rule 93 (var_cte -> CTE_F pushcte .)
    CTE_F           reduce using rule 93 (var_cte -> CTE_F pushcte .)
    CTE_S           reduce using rule 93 (var_cte -> CTE_F pushcte .)
    TRUE            reduce using rule 93 (var_cte -> CTE_F pushcte .)
    FALSE           reduce using rule 93 (var_cte -> CTE_F pushcte .)


state 123

    (94) var_cte -> CTE_S pushcte .

    TIMES           reduce using rule 94 (var_cte -> CTE_S pushcte .)
    DIVIDE          reduce using rule 94 (var_cte -> CTE_S pushcte .)
    PLUS            reduce using rule 94 (var_cte -> CTE_S pushcte .)
    MINUS           reduce using rule 94 (var_cte -> CTE_S pushcte .)
    LOWERTHAN       reduce using rule 94 (var_cte -> CTE_S pushcte .)
    MORETHAN        reduce using rule 94 (var_cte -> CTE_S pushcte .)
    LOWEREQ         reduce using rule 94 (var_cte -> CTE_S pushcte .)
    MOREEQ          reduce using rule 94 (var_cte -> CTE_S pushcte .)
    SAME            reduce using rule 94 (var_cte -> CTE_S pushcte .)
    DIFFERENT       reduce using rule 94 (var_cte -> CTE_S pushcte .)
    OR              reduce using rule 94 (var_cte -> CTE_S pushcte .)
    AND             reduce using rule 94 (var_cte -> CTE_S pushcte .)
    RPAREN          reduce using rule 94 (var_cte -> CTE_S pushcte .)
    COMA            reduce using rule 94 (var_cte -> CTE_S pushcte .)
    RBRACE          reduce using rule 94 (var_cte -> CTE_S pushcte .)
    SEMICOLON       reduce using rule 94 (var_cte -> CTE_S pushcte .)
    RKEY            reduce using rule 94 (var_cte -> CTE_S pushcte .)
    LPAREN          reduce using rule 94 (var_cte -> CTE_S pushcte .)
    ID              reduce using rule 94 (var_cte -> CTE_S pushcte .)
    CTE_I           reduce using rule 94 (var_cte -> CTE_S pushcte .)
    CTE_F           reduce using rule 94 (var_cte -> CTE_S pushcte .)
    CTE_S           reduce using rule 94 (var_cte -> CTE_S pushcte .)
    TRUE            reduce using rule 94 (var_cte -> CTE_S pushcte .)
    FALSE           reduce using rule 94 (var_cte -> CTE_S pushcte .)


state 124

    (95) var_cte -> TRUE pushcte .

    TIMES           reduce using rule 95 (var_cte -> TRUE pushcte .)
    DIVIDE          reduce using rule 95 (var_cte -> TRUE pushcte .)
    PLUS            reduce using rule 95 (var_cte -> TRUE pushcte .)
    MINUS           reduce using rule 95 (var_cte -> TRUE pushcte .)
    LOWERTHAN       reduce using rule 95 (var_cte -> TRUE pushcte .)
    MORETHAN        reduce using rule 95 (var_cte -> TRUE pushcte .)
    LOWEREQ         reduce using rule 95 (var_cte -> TRUE pushcte .)
    MOREEQ          reduce using rule 95 (var_cte -> TRUE pushcte .)
    SAME            reduce using rule 95 (var_cte -> TRUE pushcte .)
    DIFFERENT       reduce using rule 95 (var_cte -> TRUE pushcte .)
    OR              reduce using rule 95 (var_cte -> TRUE pushcte .)
    AND             reduce using rule 95 (var_cte -> TRUE pushcte .)
    RPAREN          reduce using rule 95 (var_cte -> TRUE pushcte .)
    COMA            reduce using rule 95 (var_cte -> TRUE pushcte .)
    RBRACE          reduce using rule 95 (var_cte -> TRUE pushcte .)
    SEMICOLON       reduce using rule 95 (var_cte -> TRUE pushcte .)
    RKEY            reduce using rule 95 (var_cte -> TRUE pushcte .)
    LPAREN          reduce using rule 95 (var_cte -> TRUE pushcte .)
    ID              reduce using rule 95 (var_cte -> TRUE pushcte .)
    CTE_I           reduce using rule 95 (var_cte -> TRUE pushcte .)
    CTE_F           reduce using rule 95 (var_cte -> TRUE pushcte .)
    CTE_S           reduce using rule 95 (var_cte -> TRUE pushcte .)
    TRUE            reduce using rule 95 (var_cte -> TRUE pushcte .)
    FALSE           reduce using rule 95 (var_cte -> TRUE pushcte .)


state 125

    (96) var_cte -> FALSE pushcte .

    TIMES           reduce using rule 96 (var_cte -> FALSE pushcte .)
    DIVIDE          reduce using rule 96 (var_cte -> FALSE pushcte .)
    PLUS            reduce using rule 96 (var_cte -> FALSE pushcte .)
    MINUS           reduce using rule 96 (var_cte -> FALSE pushcte .)
    LOWERTHAN       reduce using rule 96 (var_cte -> FALSE pushcte .)
    MORETHAN        reduce using rule 96 (var_cte -> FALSE pushcte .)
    LOWEREQ         reduce using rule 96 (var_cte -> FALSE pushcte .)
    MOREEQ          reduce using rule 96 (var_cte -> FALSE pushcte .)
    SAME            reduce using rule 96 (var_cte -> FALSE pushcte .)
    DIFFERENT       reduce using rule 96 (var_cte -> FALSE pushcte .)
    OR              reduce using rule 96 (var_cte -> FALSE pushcte .)
    AND             reduce using rule 96 (var_cte -> FALSE pushcte .)
    RPAREN          reduce using rule 96 (var_cte -> FALSE pushcte .)
    COMA            reduce using rule 96 (var_cte -> FALSE pushcte .)
    RBRACE          reduce using rule 96 (var_cte -> FALSE pushcte .)
    SEMICOLON       reduce using rule 96 (var_cte -> FALSE pushcte .)
    RKEY            reduce using rule 96 (var_cte -> FALSE pushcte .)
    LPAREN          reduce using rule 96 (var_cte -> FALSE pushcte .)
    ID              reduce using rule 96 (var_cte -> FALSE pushcte .)
    CTE_I           reduce using rule 96 (var_cte -> FALSE pushcte .)
    CTE_F           reduce using rule 96 (var_cte -> FALSE pushcte .)
    CTE_S           reduce using rule 96 (var_cte -> FALSE pushcte .)
    TRUE            reduce using rule 96 (var_cte -> FALSE pushcte .)
    FALSE           reduce using rule 96 (var_cte -> FALSE pushcte .)


state 126

    (64) escrit -> PRINT LPAREN escriti RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 144


state 127

    (66) escriti -> expres COMA . escriti
    (65) escriti -> . expres
    (66) escriti -> . expres COMA escriti
    (69) expres -> . exr
    (70) expres -> . exr log expres
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 93
    escriti                        shift and go to state 145
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 128

    (67) ciclo -> WHILE while1 LPAREN expres . RPAREN while2 LKEY bloq RKEY while3

    RPAREN          shift and go to state 146


state 129

    (68) leer -> READ LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 147


state 130

    (1) program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc finmain .

    $end            reduce using rule 1 (program -> PROGRAM COLON global program2 finglobal program3 MAIN main1 mainc finmain .)


state 131

    (20) function -> FUNCTION functype ID addInTable LPAREN . funci RPAREN LKEY localvar bloq return expres RKEY
    (21) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY localvar RKEY
    (22) function -> FUNCTION functype ID addInTable LPAREN . funci RPAREN LKEY localvar bloq RKEY
    (23) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY localvar bloq return expres RKEY
    (24) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY localvar bloq RKEY
    (25) function -> FUNCTION functype ID addInTable LPAREN . RPAREN LKEY RKEY
    (32) funci -> . funcitype ID
    (33) funci -> . funcitype ID COMA funci
    (34) funci -> . empty
    (35) funcitype -> . INT
    (36) funcitype -> . FLOAT
    (37) funcitype -> . STRING
    (38) funcitype -> . BOOL
    (107) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 149
    INT             shift and go to state 152
    FLOAT           shift and go to state 153
    STRING          shift and go to state 154
    BOOL            shift and go to state 155

  ! RPAREN          [ reduce using rule 107 (empty -> .) ]

    funci                          shift and go to state 148
    funcitype                      shift and go to state 150
    empty                          shift and go to state 151

state 132

    (60) asign -> ID pushid EQUAL pushop expres . resolverasignacion SEMICOLON
    (112) resolverasignacion -> .

    SEMICOLON       reduce using rule 112 (resolverasignacion -> .)

    resolverasignacion             shift and go to state 156

state 133

    (61) asign -> ID pushid LBRACE exr RBRACE . EQUAL pushop expres SEMICOLON

    EQUAL           shift and go to state 157


state 134

    (79) fact -> LPAREN pushop expres . RPAREN popop

    RPAREN          shift and go to state 158


state 135

    (62) cond -> IF LPAREN expres RPAREN LKEY . resif bloq RKEY finif
    (63) cond -> IF LPAREN expres RPAREN LKEY . resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (116) resif -> .

    ID              reduce using rule 116 (resif -> .)
    IF              reduce using rule 116 (resif -> .)
    PRINT           reduce using rule 116 (resif -> .)
    WHILE           reduce using rule 116 (resif -> .)
    READ            reduce using rule 116 (resif -> .)

    resif                          shift and go to state 159

state 136

    (70) expres -> exr log expres .

    RPAREN          reduce using rule 70 (expres -> exr log expres .)
    COMA            reduce using rule 70 (expres -> exr log expres .)
    SEMICOLON       reduce using rule 70 (expres -> exr log expres .)
    RBRACE          reduce using rule 70 (expres -> exr log expres .)
    RKEY            reduce using rule 70 (expres -> exr log expres .)
    LPAREN          reduce using rule 70 (expres -> exr log expres .)
    PLUS            reduce using rule 70 (expres -> exr log expres .)
    MINUS           reduce using rule 70 (expres -> exr log expres .)
    ID              reduce using rule 70 (expres -> exr log expres .)
    CTE_I           reduce using rule 70 (expres -> exr log expres .)
    CTE_F           reduce using rule 70 (expres -> exr log expres .)
    CTE_S           reduce using rule 70 (expres -> exr log expres .)
    TRUE            reduce using rule 70 (expres -> exr log expres .)
    FALSE           reduce using rule 70 (expres -> exr log expres .)


state 137

    (72) exr -> ex rel exr . resrel
    (115) resrel -> .

    OR              reduce using rule 115 (resrel -> .)
    AND             reduce using rule 115 (resrel -> .)
    RPAREN          reduce using rule 115 (resrel -> .)
    COMA            reduce using rule 115 (resrel -> .)
    RBRACE          reduce using rule 115 (resrel -> .)
    SEMICOLON       reduce using rule 115 (resrel -> .)
    RKEY            reduce using rule 115 (resrel -> .)
    LPAREN          reduce using rule 115 (resrel -> .)
    PLUS            reduce using rule 115 (resrel -> .)
    MINUS           reduce using rule 115 (resrel -> .)
    ID              reduce using rule 115 (resrel -> .)
    CTE_I           reduce using rule 115 (resrel -> .)
    CTE_F           reduce using rule 115 (resrel -> .)
    CTE_S           reduce using rule 115 (resrel -> .)
    TRUE            reduce using rule 115 (resrel -> .)
    FALSE           reduce using rule 115 (resrel -> .)

    resrel                         shift and go to state 160

state 138

    (74) ex -> term resterm PLUS . pushop ex
    (110) pushop -> .

    LPAREN          reduce using rule 110 (pushop -> .)
    PLUS            reduce using rule 110 (pushop -> .)
    MINUS           reduce using rule 110 (pushop -> .)
    ID              reduce using rule 110 (pushop -> .)
    CTE_I           reduce using rule 110 (pushop -> .)
    CTE_F           reduce using rule 110 (pushop -> .)
    CTE_S           reduce using rule 110 (pushop -> .)
    TRUE            reduce using rule 110 (pushop -> .)
    FALSE           reduce using rule 110 (pushop -> .)

    pushop                         shift and go to state 161

state 139

    (75) ex -> term resterm MINUS . pushop ex
    (110) pushop -> .

    LPAREN          reduce using rule 110 (pushop -> .)
    PLUS            reduce using rule 110 (pushop -> .)
    MINUS           reduce using rule 110 (pushop -> .)
    ID              reduce using rule 110 (pushop -> .)
    CTE_I           reduce using rule 110 (pushop -> .)
    CTE_F           reduce using rule 110 (pushop -> .)
    CTE_S           reduce using rule 110 (pushop -> .)
    TRUE            reduce using rule 110 (pushop -> .)
    FALSE           reduce using rule 110 (pushop -> .)

    pushop                         shift and go to state 162

state 140

    (77) term -> fact resfact TIMES . pushop term
    (110) pushop -> .

    LPAREN          reduce using rule 110 (pushop -> .)
    PLUS            reduce using rule 110 (pushop -> .)
    MINUS           reduce using rule 110 (pushop -> .)
    ID              reduce using rule 110 (pushop -> .)
    CTE_I           reduce using rule 110 (pushop -> .)
    CTE_F           reduce using rule 110 (pushop -> .)
    CTE_S           reduce using rule 110 (pushop -> .)
    TRUE            reduce using rule 110 (pushop -> .)
    FALSE           reduce using rule 110 (pushop -> .)

    pushop                         shift and go to state 163

state 141

    (78) term -> fact resfact DIVIDE . pushop term
    (110) pushop -> .

    LPAREN          reduce using rule 110 (pushop -> .)
    PLUS            reduce using rule 110 (pushop -> .)
    MINUS           reduce using rule 110 (pushop -> .)
    ID              reduce using rule 110 (pushop -> .)
    CTE_I           reduce using rule 110 (pushop -> .)
    CTE_F           reduce using rule 110 (pushop -> .)
    CTE_S           reduce using rule 110 (pushop -> .)
    TRUE            reduce using rule 110 (pushop -> .)
    FALSE           reduce using rule 110 (pushop -> .)

    pushop                         shift and go to state 164

state 142

    (99) fcall -> ID existfunc LPAREN . startera fcall1 RPAREN
    (100) fcall -> ID existfunc LPAREN . RPAREN
    (102) startera -> .

    RPAREN          shift and go to state 166
    LPAREN          reduce using rule 102 (startera -> .)
    PLUS            reduce using rule 102 (startera -> .)
    MINUS           reduce using rule 102 (startera -> .)
    ID              reduce using rule 102 (startera -> .)
    CTE_I           reduce using rule 102 (startera -> .)
    CTE_F           reduce using rule 102 (startera -> .)
    CTE_S           reduce using rule 102 (startera -> .)
    TRUE            reduce using rule 102 (startera -> .)
    FALSE           reduce using rule 102 (startera -> .)

    startera                       shift and go to state 165

state 143

    (106) vcall -> ID LBRACE expres . RBRACE

    RBRACE          shift and go to state 167


state 144

    (64) escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .

    ID              reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    IF              reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    PRINT           reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    WHILE           reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    READ            reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    RKEY            reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    RETURN          reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    LPAREN          reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    PLUS            reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    MINUS           reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    CTE_I           reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    CTE_F           reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    CTE_S           reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    TRUE            reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)
    FALSE           reduce using rule 64 (escrit -> PRINT LPAREN escriti RPAREN SEMICOLON .)


state 145

    (66) escriti -> expres COMA escriti .

    RPAREN          reduce using rule 66 (escriti -> expres COMA escriti .)


state 146

    (67) ciclo -> WHILE while1 LPAREN expres RPAREN . while2 LKEY bloq RKEY while3
    (120) while2 -> .

    LKEY            reduce using rule 120 (while2 -> .)

    while2                         shift and go to state 168

state 147

    (68) leer -> READ LPAREN ID RPAREN SEMICOLON .

    ID              reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    READ            reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    RKEY            reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    RETURN          reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    LPAREN          reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    PLUS            reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    MINUS           reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    CTE_I           reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    CTE_F           reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    CTE_S           reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    TRUE            reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)
    FALSE           reduce using rule 68 (leer -> READ LPAREN ID RPAREN SEMICOLON .)


state 148

    (20) function -> FUNCTION functype ID addInTable LPAREN funci . RPAREN LKEY localvar bloq return expres RKEY
    (22) function -> FUNCTION functype ID addInTable LPAREN funci . RPAREN LKEY localvar bloq RKEY

    RPAREN          shift and go to state 169


state 149

    (21) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY localvar RKEY
    (23) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY localvar bloq return expres RKEY
    (24) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY localvar bloq RKEY
    (25) function -> FUNCTION functype ID addInTable LPAREN RPAREN . LKEY RKEY

    LKEY            shift and go to state 170


state 150

    (32) funci -> funcitype . ID
    (33) funci -> funcitype . ID COMA funci

    ID              shift and go to state 171


state 151

    (34) funci -> empty .

    RPAREN          reduce using rule 34 (funci -> empty .)


state 152

    (35) funcitype -> INT .

    ID              reduce using rule 35 (funcitype -> INT .)


state 153

    (36) funcitype -> FLOAT .

    ID              reduce using rule 36 (funcitype -> FLOAT .)


state 154

    (37) funcitype -> STRING .

    ID              reduce using rule 37 (funcitype -> STRING .)


state 155

    (38) funcitype -> BOOL .

    ID              reduce using rule 38 (funcitype -> BOOL .)


state 156

    (60) asign -> ID pushid EQUAL pushop expres resolverasignacion . SEMICOLON

    SEMICOLON       shift and go to state 172


state 157

    (61) asign -> ID pushid LBRACE exr RBRACE EQUAL . pushop expres SEMICOLON
    (110) pushop -> .

    LPAREN          reduce using rule 110 (pushop -> .)
    PLUS            reduce using rule 110 (pushop -> .)
    MINUS           reduce using rule 110 (pushop -> .)
    ID              reduce using rule 110 (pushop -> .)
    CTE_I           reduce using rule 110 (pushop -> .)
    CTE_F           reduce using rule 110 (pushop -> .)
    CTE_S           reduce using rule 110 (pushop -> .)
    TRUE            reduce using rule 110 (pushop -> .)
    FALSE           reduce using rule 110 (pushop -> .)

    pushop                         shift and go to state 173

state 158

    (79) fact -> LPAREN pushop expres RPAREN . popop
    (111) popop -> .

    TIMES           reduce using rule 111 (popop -> .)
    DIVIDE          reduce using rule 111 (popop -> .)
    PLUS            reduce using rule 111 (popop -> .)
    MINUS           reduce using rule 111 (popop -> .)
    LOWERTHAN       reduce using rule 111 (popop -> .)
    MORETHAN        reduce using rule 111 (popop -> .)
    LOWEREQ         reduce using rule 111 (popop -> .)
    MOREEQ          reduce using rule 111 (popop -> .)
    SAME            reduce using rule 111 (popop -> .)
    DIFFERENT       reduce using rule 111 (popop -> .)
    OR              reduce using rule 111 (popop -> .)
    AND             reduce using rule 111 (popop -> .)
    RPAREN          reduce using rule 111 (popop -> .)
    COMA            reduce using rule 111 (popop -> .)
    RBRACE          reduce using rule 111 (popop -> .)
    SEMICOLON       reduce using rule 111 (popop -> .)
    RKEY            reduce using rule 111 (popop -> .)
    LPAREN          reduce using rule 111 (popop -> .)
    ID              reduce using rule 111 (popop -> .)
    CTE_I           reduce using rule 111 (popop -> .)
    CTE_F           reduce using rule 111 (popop -> .)
    CTE_S           reduce using rule 111 (popop -> .)
    TRUE            reduce using rule 111 (popop -> .)
    FALSE           reduce using rule 111 (popop -> .)

    popop                          shift and go to state 174

state 159

    (62) cond -> IF LPAREN expres RPAREN LKEY resif . bloq RKEY finif
    (63) cond -> IF LPAREN expres RPAREN LKEY resif . bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (53) bloq -> . estat
    (54) bloq -> . estat bloq
    (55) estat -> . asign
    (56) estat -> . cond
    (57) estat -> . escrit
    (58) estat -> . ciclo
    (59) estat -> . leer
    (60) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (61) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (62) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (63) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (64) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (67) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (68) leer -> . READ LPAREN ID RPAREN SEMICOLON

    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

    bloq                           shift and go to state 175
    estat                          shift and go to state 33
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 160

    (72) exr -> ex rel exr resrel .

    OR              reduce using rule 72 (exr -> ex rel exr resrel .)
    AND             reduce using rule 72 (exr -> ex rel exr resrel .)
    RPAREN          reduce using rule 72 (exr -> ex rel exr resrel .)
    COMA            reduce using rule 72 (exr -> ex rel exr resrel .)
    RBRACE          reduce using rule 72 (exr -> ex rel exr resrel .)
    SEMICOLON       reduce using rule 72 (exr -> ex rel exr resrel .)
    RKEY            reduce using rule 72 (exr -> ex rel exr resrel .)
    LPAREN          reduce using rule 72 (exr -> ex rel exr resrel .)
    PLUS            reduce using rule 72 (exr -> ex rel exr resrel .)
    MINUS           reduce using rule 72 (exr -> ex rel exr resrel .)
    ID              reduce using rule 72 (exr -> ex rel exr resrel .)
    CTE_I           reduce using rule 72 (exr -> ex rel exr resrel .)
    CTE_F           reduce using rule 72 (exr -> ex rel exr resrel .)
    CTE_S           reduce using rule 72 (exr -> ex rel exr resrel .)
    TRUE            reduce using rule 72 (exr -> ex rel exr resrel .)
    FALSE           reduce using rule 72 (exr -> ex rel exr resrel .)


state 161

    (74) ex -> term resterm PLUS pushop . ex
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    term                           shift and go to state 79
    ex                             shift and go to state 176
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 162

    (75) ex -> term resterm MINUS pushop . ex
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    term                           shift and go to state 79
    ex                             shift and go to state 177
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 163

    (77) term -> fact resfact TIMES pushop . term
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    fact                           shift and go to state 82
    term                           shift and go to state 178
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 164

    (78) term -> fact resfact DIVIDE pushop . term
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    fact                           shift and go to state 82
    term                           shift and go to state 179
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 165

    (99) fcall -> ID existfunc LPAREN startera . fcall1 RPAREN
    (103) fcall1 -> . expres generateparam
    (104) fcall1 -> . expres generateparam COMA fcall1
    (69) expres -> . exr
    (70) expres -> . exr log expres
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    fcall1                         shift and go to state 180
    expres                         shift and go to state 181
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 166

    (100) fcall -> ID existfunc LPAREN RPAREN .

    TIMES           reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    DIVIDE          reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    PLUS            reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    MINUS           reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    LOWERTHAN       reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    MORETHAN        reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    LOWEREQ         reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    MOREEQ          reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    SAME            reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    DIFFERENT       reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    OR              reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    AND             reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    RPAREN          reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    COMA            reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    RBRACE          reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    SEMICOLON       reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    RKEY            reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    LPAREN          reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    ID              reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    CTE_I           reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    CTE_F           reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    CTE_S           reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    TRUE            reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)
    FALSE           reduce using rule 100 (fcall -> ID existfunc LPAREN RPAREN .)


state 167

    (106) vcall -> ID LBRACE expres RBRACE .

    TIMES           reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    DIVIDE          reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    PLUS            reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    MINUS           reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    LOWERTHAN       reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    MORETHAN        reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    LOWEREQ         reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    MOREEQ          reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    SAME            reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    DIFFERENT       reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    OR              reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    AND             reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    RPAREN          reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    COMA            reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    RBRACE          reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    SEMICOLON       reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    RKEY            reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    LPAREN          reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    ID              reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    CTE_I           reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    CTE_F           reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    CTE_S           reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    TRUE            reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)
    FALSE           reduce using rule 106 (vcall -> ID LBRACE expres RBRACE .)


state 168

    (67) ciclo -> WHILE while1 LPAREN expres RPAREN while2 . LKEY bloq RKEY while3

    LKEY            shift and go to state 182


state 169

    (20) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN . LKEY localvar bloq return expres RKEY
    (22) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN . LKEY localvar bloq RKEY

    LKEY            shift and go to state 183


state 170

    (21) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . localvar RKEY
    (23) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . localvar bloq return expres RKEY
    (24) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . localvar bloq RKEY
    (25) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY . RKEY
    (39) localvar -> . var
    (40) localvar -> . vector
    (41) localvar -> . var localvar
    (42) localvar -> . vector localvar
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            shift and go to state 185
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    localvar                       shift and go to state 184
    var                            shift and go to state 186
    vector                         shift and go to state 187

state 171

    (32) funci -> funcitype ID .
    (33) funci -> funcitype ID . COMA funci

    RPAREN          reduce using rule 32 (funci -> funcitype ID .)
    COMA            shift and go to state 188


state 172

    (60) asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .

    ID              reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    IF              reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    PRINT           reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    WHILE           reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    READ            reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    RKEY            reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    RETURN          reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    LPAREN          reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    PLUS            reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    MINUS           reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    CTE_I           reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    CTE_F           reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    CTE_S           reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    TRUE            reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)
    FALSE           reduce using rule 60 (asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON .)


state 173

    (61) asign -> ID pushid LBRACE exr RBRACE EQUAL pushop . expres SEMICOLON
    (69) expres -> . exr
    (70) expres -> . exr log expres
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    exr                            shift and go to state 77
    expres                         shift and go to state 189
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 174

    (79) fact -> LPAREN pushop expres RPAREN popop .

    TIMES           reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    DIVIDE          reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    PLUS            reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    MINUS           reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    LOWERTHAN       reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    MORETHAN        reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    LOWEREQ         reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    MOREEQ          reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    SAME            reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    DIFFERENT       reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    OR              reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    AND             reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    RPAREN          reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    COMA            reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    RBRACE          reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    SEMICOLON       reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    RKEY            reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    LPAREN          reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    ID              reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    CTE_I           reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    CTE_F           reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    CTE_S           reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    TRUE            reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)
    FALSE           reduce using rule 79 (fact -> LPAREN pushop expres RPAREN popop .)


state 175

    (62) cond -> IF LPAREN expres RPAREN LKEY resif bloq . RKEY finif
    (63) cond -> IF LPAREN expres RPAREN LKEY resif bloq . RKEY ELSE LKEY reselse bloq RKEY finif

    RKEY            shift and go to state 190


state 176

    (74) ex -> term resterm PLUS pushop ex .

    LOWERTHAN       reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    MORETHAN        reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    LOWEREQ         reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    MOREEQ          reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    SAME            reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    DIFFERENT       reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    OR              reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    AND             reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    RPAREN          reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    COMA            reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    RBRACE          reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    SEMICOLON       reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    RKEY            reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    LPAREN          reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    PLUS            reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    MINUS           reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    ID              reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    CTE_I           reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    CTE_F           reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    CTE_S           reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    TRUE            reduce using rule 74 (ex -> term resterm PLUS pushop ex .)
    FALSE           reduce using rule 74 (ex -> term resterm PLUS pushop ex .)


state 177

    (75) ex -> term resterm MINUS pushop ex .

    LOWERTHAN       reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    MORETHAN        reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    LOWEREQ         reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    MOREEQ          reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    SAME            reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    DIFFERENT       reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    OR              reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    AND             reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    RPAREN          reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    COMA            reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    RBRACE          reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    SEMICOLON       reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    RKEY            reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    LPAREN          reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    PLUS            reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    MINUS           reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    ID              reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    CTE_I           reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    CTE_F           reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    CTE_S           reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    TRUE            reduce using rule 75 (ex -> term resterm MINUS pushop ex .)
    FALSE           reduce using rule 75 (ex -> term resterm MINUS pushop ex .)


state 178

    (77) term -> fact resfact TIMES pushop term .

    PLUS            reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    MINUS           reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    LOWERTHAN       reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    MORETHAN        reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    LOWEREQ         reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    MOREEQ          reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    SAME            reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    DIFFERENT       reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    OR              reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    AND             reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    RPAREN          reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    COMA            reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    RBRACE          reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    SEMICOLON       reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    RKEY            reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    LPAREN          reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    ID              reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    CTE_I           reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    CTE_F           reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    CTE_S           reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    TRUE            reduce using rule 77 (term -> fact resfact TIMES pushop term .)
    FALSE           reduce using rule 77 (term -> fact resfact TIMES pushop term .)


state 179

    (78) term -> fact resfact DIVIDE pushop term .

    PLUS            reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    MINUS           reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    LOWERTHAN       reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    MORETHAN        reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    LOWEREQ         reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    MOREEQ          reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    SAME            reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    DIFFERENT       reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    OR              reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    AND             reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    RPAREN          reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    COMA            reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    RBRACE          reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    SEMICOLON       reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    RKEY            reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    LPAREN          reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    ID              reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    CTE_I           reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    CTE_F           reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    CTE_S           reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    TRUE            reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)
    FALSE           reduce using rule 78 (term -> fact resfact DIVIDE pushop term .)


state 180

    (99) fcall -> ID existfunc LPAREN startera fcall1 . RPAREN

    RPAREN          shift and go to state 191


state 181

    (103) fcall1 -> expres . generateparam
    (104) fcall1 -> expres . generateparam COMA fcall1
    (105) generateparam -> .

    COMA            reduce using rule 105 (generateparam -> .)
    RPAREN          reduce using rule 105 (generateparam -> .)

    generateparam                  shift and go to state 192

state 182

    (67) ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY . bloq RKEY while3
    (53) bloq -> . estat
    (54) bloq -> . estat bloq
    (55) estat -> . asign
    (56) estat -> . cond
    (57) estat -> . escrit
    (58) estat -> . ciclo
    (59) estat -> . leer
    (60) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (61) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (62) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (63) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (64) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (67) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (68) leer -> . READ LPAREN ID RPAREN SEMICOLON

    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

    bloq                           shift and go to state 193
    estat                          shift and go to state 33
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 183

    (20) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY . localvar bloq return expres RKEY
    (22) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY . localvar bloq RKEY
    (39) localvar -> . var
    (40) localvar -> . vector
    (41) localvar -> . var localvar
    (42) localvar -> . vector localvar
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    localvar                       shift and go to state 194
    var                            shift and go to state 186
    vector                         shift and go to state 187

state 184

    (21) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar . RKEY
    (23) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar . bloq return expres RKEY
    (24) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar . bloq RKEY
    (53) bloq -> . estat
    (54) bloq -> . estat bloq
    (55) estat -> . asign
    (56) estat -> . cond
    (57) estat -> . escrit
    (58) estat -> . ciclo
    (59) estat -> . leer
    (60) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (61) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (62) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (63) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (64) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (67) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (68) leer -> . READ LPAREN ID RPAREN SEMICOLON

    RKEY            shift and go to state 195
    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

    bloq                           shift and go to state 196
    estat                          shift and go to state 33
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 185

    (25) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY .

    FUNCTION        reduce using rule 25 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY .)
    MAIN            reduce using rule 25 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY .)


state 186

    (39) localvar -> var .
    (41) localvar -> var . localvar
    (39) localvar -> . var
    (40) localvar -> . vector
    (41) localvar -> . var localvar
    (42) localvar -> . vector localvar
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            reduce using rule 39 (localvar -> var .)
    ID              reduce using rule 39 (localvar -> var .)
    IF              reduce using rule 39 (localvar -> var .)
    PRINT           reduce using rule 39 (localvar -> var .)
    WHILE           reduce using rule 39 (localvar -> var .)
    READ            reduce using rule 39 (localvar -> var .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    var                            shift and go to state 186
    localvar                       shift and go to state 197
    vector                         shift and go to state 187

state 187

    (40) localvar -> vector .
    (42) localvar -> vector . localvar
    (39) localvar -> . var
    (40) localvar -> . vector
    (41) localvar -> . var localvar
    (42) localvar -> . vector localvar
    (14) var -> . VAR tipo ID SEMICOLON
    (19) vector -> . VECTOR ID LBRACE CTE_I RBRACE SEMICOLON

    RKEY            reduce using rule 40 (localvar -> vector .)
    ID              reduce using rule 40 (localvar -> vector .)
    IF              reduce using rule 40 (localvar -> vector .)
    PRINT           reduce using rule 40 (localvar -> vector .)
    WHILE           reduce using rule 40 (localvar -> vector .)
    READ            reduce using rule 40 (localvar -> vector .)
    VAR             shift and go to state 10
    VECTOR          shift and go to state 11

    vector                         shift and go to state 187
    localvar                       shift and go to state 198
    var                            shift and go to state 186

state 188

    (33) funci -> funcitype ID COMA . funci
    (32) funci -> . funcitype ID
    (33) funci -> . funcitype ID COMA funci
    (34) funci -> . empty
    (35) funcitype -> . INT
    (36) funcitype -> . FLOAT
    (37) funcitype -> . STRING
    (38) funcitype -> . BOOL
    (107) empty -> .

    INT             shift and go to state 152
    FLOAT           shift and go to state 153
    STRING          shift and go to state 154
    BOOL            shift and go to state 155
    RPAREN          reduce using rule 107 (empty -> .)

    funcitype                      shift and go to state 150
    funci                          shift and go to state 199
    empty                          shift and go to state 151

state 189

    (61) asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres . SEMICOLON

    SEMICOLON       shift and go to state 200


state 190

    (62) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY . finif
    (63) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY . ELSE LKEY reselse bloq RKEY finif
    (118) finif -> .

    ELSE            shift and go to state 202
    ID              reduce using rule 118 (finif -> .)
    IF              reduce using rule 118 (finif -> .)
    PRINT           reduce using rule 118 (finif -> .)
    WHILE           reduce using rule 118 (finif -> .)
    READ            reduce using rule 118 (finif -> .)
    RKEY            reduce using rule 118 (finif -> .)
    RETURN          reduce using rule 118 (finif -> .)
    LPAREN          reduce using rule 118 (finif -> .)
    PLUS            reduce using rule 118 (finif -> .)
    MINUS           reduce using rule 118 (finif -> .)
    CTE_I           reduce using rule 118 (finif -> .)
    CTE_F           reduce using rule 118 (finif -> .)
    CTE_S           reduce using rule 118 (finif -> .)
    TRUE            reduce using rule 118 (finif -> .)
    FALSE           reduce using rule 118 (finif -> .)

    finif                          shift and go to state 201

state 191

    (99) fcall -> ID existfunc LPAREN startera fcall1 RPAREN .

    TIMES           reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    DIVIDE          reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    PLUS            reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    MINUS           reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    LOWERTHAN       reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    MORETHAN        reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    LOWEREQ         reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    MOREEQ          reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    SAME            reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    DIFFERENT       reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    OR              reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    AND             reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    RPAREN          reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    COMA            reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    RBRACE          reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    SEMICOLON       reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    RKEY            reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    LPAREN          reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    ID              reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    CTE_I           reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    CTE_F           reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    CTE_S           reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    TRUE            reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)
    FALSE           reduce using rule 99 (fcall -> ID existfunc LPAREN startera fcall1 RPAREN .)


state 192

    (103) fcall1 -> expres generateparam .
    (104) fcall1 -> expres generateparam . COMA fcall1

    RPAREN          reduce using rule 103 (fcall1 -> expres generateparam .)
    COMA            shift and go to state 203


state 193

    (67) ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq . RKEY while3

    RKEY            shift and go to state 204


state 194

    (20) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar . bloq return expres RKEY
    (22) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar . bloq RKEY
    (53) bloq -> . estat
    (54) bloq -> . estat bloq
    (55) estat -> . asign
    (56) estat -> . cond
    (57) estat -> . escrit
    (58) estat -> . ciclo
    (59) estat -> . leer
    (60) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (61) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (62) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (63) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (64) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (67) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (68) leer -> . READ LPAREN ID RPAREN SEMICOLON

    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

    bloq                           shift and go to state 205
    estat                          shift and go to state 33
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 195

    (21) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY .

    FUNCTION        reduce using rule 21 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY .)
    MAIN            reduce using rule 21 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY .)


state 196

    (23) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq . return expres RKEY
    (24) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq . RKEY
    (43) return -> . RETURN expres
    (44) return -> . empty
    (107) empty -> .

    RKEY            shift and go to state 207
    RETURN          shift and go to state 208
    LPAREN          reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    ID              reduce using rule 107 (empty -> .)
    CTE_I           reduce using rule 107 (empty -> .)
    CTE_F           reduce using rule 107 (empty -> .)
    CTE_S           reduce using rule 107 (empty -> .)
    TRUE            reduce using rule 107 (empty -> .)
    FALSE           reduce using rule 107 (empty -> .)

    return                         shift and go to state 206
    empty                          shift and go to state 209

state 197

    (41) localvar -> var localvar .

    RKEY            reduce using rule 41 (localvar -> var localvar .)
    ID              reduce using rule 41 (localvar -> var localvar .)
    IF              reduce using rule 41 (localvar -> var localvar .)
    PRINT           reduce using rule 41 (localvar -> var localvar .)
    WHILE           reduce using rule 41 (localvar -> var localvar .)
    READ            reduce using rule 41 (localvar -> var localvar .)


state 198

    (42) localvar -> vector localvar .

    RKEY            reduce using rule 42 (localvar -> vector localvar .)
    ID              reduce using rule 42 (localvar -> vector localvar .)
    IF              reduce using rule 42 (localvar -> vector localvar .)
    PRINT           reduce using rule 42 (localvar -> vector localvar .)
    WHILE           reduce using rule 42 (localvar -> vector localvar .)
    READ            reduce using rule 42 (localvar -> vector localvar .)


state 199

    (33) funci -> funcitype ID COMA funci .

    RPAREN          reduce using rule 33 (funci -> funcitype ID COMA funci .)


state 200

    (61) asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .

    ID              reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    IF              reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    PRINT           reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    WHILE           reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    READ            reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    RKEY            reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    RETURN          reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    LPAREN          reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    PLUS            reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    MINUS           reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    CTE_I           reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    CTE_F           reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    CTE_S           reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    TRUE            reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)
    FALSE           reduce using rule 61 (asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON .)


state 201

    (62) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .

    ID              reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    IF              reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    PRINT           reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    WHILE           reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    READ            reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    RKEY            reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    RETURN          reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    LPAREN          reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    PLUS            reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    MINUS           reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    CTE_I           reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    CTE_F           reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    CTE_S           reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    TRUE            reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)
    FALSE           reduce using rule 62 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif .)


state 202

    (63) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE . LKEY reselse bloq RKEY finif

    LKEY            shift and go to state 210


state 203

    (104) fcall1 -> expres generateparam COMA . fcall1
    (103) fcall1 -> . expres generateparam
    (104) fcall1 -> . expres generateparam COMA fcall1
    (69) expres -> . exr
    (70) expres -> . exr log expres
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 181
    fcall1                         shift and go to state 211
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 204

    (67) ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY . while3
    (121) while3 -> .

    ID              reduce using rule 121 (while3 -> .)
    IF              reduce using rule 121 (while3 -> .)
    PRINT           reduce using rule 121 (while3 -> .)
    WHILE           reduce using rule 121 (while3 -> .)
    READ            reduce using rule 121 (while3 -> .)
    RKEY            reduce using rule 121 (while3 -> .)
    RETURN          reduce using rule 121 (while3 -> .)
    LPAREN          reduce using rule 121 (while3 -> .)
    PLUS            reduce using rule 121 (while3 -> .)
    MINUS           reduce using rule 121 (while3 -> .)
    CTE_I           reduce using rule 121 (while3 -> .)
    CTE_F           reduce using rule 121 (while3 -> .)
    CTE_S           reduce using rule 121 (while3 -> .)
    TRUE            reduce using rule 121 (while3 -> .)
    FALSE           reduce using rule 121 (while3 -> .)

    while3                         shift and go to state 212

state 205

    (20) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq . return expres RKEY
    (22) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq . RKEY
    (43) return -> . RETURN expres
    (44) return -> . empty
    (107) empty -> .

    RKEY            shift and go to state 214
    RETURN          shift and go to state 208
    LPAREN          reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    ID              reduce using rule 107 (empty -> .)
    CTE_I           reduce using rule 107 (empty -> .)
    CTE_F           reduce using rule 107 (empty -> .)
    CTE_S           reduce using rule 107 (empty -> .)
    TRUE            reduce using rule 107 (empty -> .)
    FALSE           reduce using rule 107 (empty -> .)

    return                         shift and go to state 213
    empty                          shift and go to state 209

state 206

    (23) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return . expres RKEY
    (69) expres -> . exr
    (70) expres -> . exr log expres
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 215
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 207

    (24) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY .

    FUNCTION        reduce using rule 24 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY .)
    MAIN            reduce using rule 24 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY .)


state 208

    (43) return -> RETURN . expres
    (69) expres -> . exr
    (70) expres -> . exr log expres
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 216
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 209

    (44) return -> empty .

    LPAREN          reduce using rule 44 (return -> empty .)
    PLUS            reduce using rule 44 (return -> empty .)
    MINUS           reduce using rule 44 (return -> empty .)
    ID              reduce using rule 44 (return -> empty .)
    CTE_I           reduce using rule 44 (return -> empty .)
    CTE_F           reduce using rule 44 (return -> empty .)
    CTE_S           reduce using rule 44 (return -> empty .)
    TRUE            reduce using rule 44 (return -> empty .)
    FALSE           reduce using rule 44 (return -> empty .)


state 210

    (63) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY . reselse bloq RKEY finif
    (117) reselse -> .

    ID              reduce using rule 117 (reselse -> .)
    IF              reduce using rule 117 (reselse -> .)
    PRINT           reduce using rule 117 (reselse -> .)
    WHILE           reduce using rule 117 (reselse -> .)
    READ            reduce using rule 117 (reselse -> .)

    reselse                        shift and go to state 217

state 211

    (104) fcall1 -> expres generateparam COMA fcall1 .

    RPAREN          reduce using rule 104 (fcall1 -> expres generateparam COMA fcall1 .)


state 212

    (67) ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .

    ID              reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    IF              reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    PRINT           reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    WHILE           reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    READ            reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    RKEY            reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    RETURN          reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    LPAREN          reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    PLUS            reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    MINUS           reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    CTE_I           reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    CTE_F           reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    CTE_S           reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    TRUE            reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)
    FALSE           reduce using rule 67 (ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3 .)


state 213

    (20) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return . expres RKEY
    (69) expres -> . exr
    (70) expres -> . exr log expres
    (71) exr -> . ex
    (72) exr -> . ex rel exr resrel
    (73) ex -> . term resterm
    (74) ex -> . term resterm PLUS pushop ex
    (75) ex -> . term resterm MINUS pushop ex
    (76) term -> . fact resfact
    (77) term -> . fact resfact TIMES pushop term
    (78) term -> . fact resfact DIVIDE pushop term
    (79) fact -> . LPAREN pushop expres RPAREN popop
    (80) fact -> . var_cte
    (81) fact -> . PLUS var_cte
    (82) fact -> . MINUS var_cte
    (91) var_cte -> . ID pushid
    (92) var_cte -> . CTE_I pushcte
    (93) var_cte -> . CTE_F pushcte
    (94) var_cte -> . CTE_S pushcte
    (95) var_cte -> . TRUE pushcte
    (96) var_cte -> . FALSE pushcte
    (97) var_cte -> . fcall
    (98) var_cte -> . vcall
    (99) fcall -> . ID existfunc LPAREN startera fcall1 RPAREN
    (100) fcall -> . ID existfunc LPAREN RPAREN
    (106) vcall -> . ID LBRACE expres RBRACE

    LPAREN          shift and go to state 75
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    ID              shift and go to state 84
    CTE_I           shift and go to state 85
    CTE_F           shift and go to state 86
    CTE_S           shift and go to state 87
    TRUE            shift and go to state 88
    FALSE           shift and go to state 89

    expres                         shift and go to state 218
    exr                            shift and go to state 77
    ex                             shift and go to state 78
    term                           shift and go to state 79
    fact                           shift and go to state 82
    var_cte                        shift and go to state 83
    fcall                          shift and go to state 90
    vcall                          shift and go to state 91

state 214

    (22) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY .

    FUNCTION        reduce using rule 22 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY .)
    MAIN            reduce using rule 22 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY .)


state 215

    (23) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres . RKEY

    RKEY            shift and go to state 219


state 216

    (43) return -> RETURN expres .

    LPAREN          reduce using rule 43 (return -> RETURN expres .)
    PLUS            reduce using rule 43 (return -> RETURN expres .)
    MINUS           reduce using rule 43 (return -> RETURN expres .)
    ID              reduce using rule 43 (return -> RETURN expres .)
    CTE_I           reduce using rule 43 (return -> RETURN expres .)
    CTE_F           reduce using rule 43 (return -> RETURN expres .)
    CTE_S           reduce using rule 43 (return -> RETURN expres .)
    TRUE            reduce using rule 43 (return -> RETURN expres .)
    FALSE           reduce using rule 43 (return -> RETURN expres .)


state 217

    (63) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse . bloq RKEY finif
    (53) bloq -> . estat
    (54) bloq -> . estat bloq
    (55) estat -> . asign
    (56) estat -> . cond
    (57) estat -> . escrit
    (58) estat -> . ciclo
    (59) estat -> . leer
    (60) asign -> . ID pushid EQUAL pushop expres resolverasignacion SEMICOLON
    (61) asign -> . ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON
    (62) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY finif
    (63) cond -> . IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif
    (64) escrit -> . PRINT LPAREN escriti RPAREN SEMICOLON
    (67) ciclo -> . WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3
    (68) leer -> . READ LPAREN ID RPAREN SEMICOLON

    ID              shift and go to state 41
    IF              shift and go to state 42
    PRINT           shift and go to state 43
    WHILE           shift and go to state 44
    READ            shift and go to state 45

    bloq                           shift and go to state 220
    estat                          shift and go to state 33
    asign                          shift and go to state 36
    cond                           shift and go to state 37
    escrit                         shift and go to state 38
    ciclo                          shift and go to state 39
    leer                           shift and go to state 40

state 218

    (20) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres . RKEY

    RKEY            shift and go to state 221


state 219

    (23) function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY .

    FUNCTION        reduce using rule 23 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY .)
    MAIN            reduce using rule 23 (function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return expres RKEY .)


state 220

    (63) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq . RKEY finif

    RKEY            shift and go to state 222


state 221

    (20) function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY .

    FUNCTION        reduce using rule 20 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY .)
    MAIN            reduce using rule 20 (function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return expres RKEY .)


state 222

    (63) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY . finif
    (118) finif -> .

    ID              reduce using rule 118 (finif -> .)
    IF              reduce using rule 118 (finif -> .)
    PRINT           reduce using rule 118 (finif -> .)
    WHILE           reduce using rule 118 (finif -> .)
    READ            reduce using rule 118 (finif -> .)
    RKEY            reduce using rule 118 (finif -> .)
    RETURN          reduce using rule 118 (finif -> .)
    LPAREN          reduce using rule 118 (finif -> .)
    PLUS            reduce using rule 118 (finif -> .)
    MINUS           reduce using rule 118 (finif -> .)
    CTE_I           reduce using rule 118 (finif -> .)
    CTE_F           reduce using rule 118 (finif -> .)
    CTE_S           reduce using rule 118 (finif -> .)
    TRUE            reduce using rule 118 (finif -> .)
    FALSE           reduce using rule 118 (finif -> .)

    finif                          shift and go to state 223

state 223

    (63) cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .

    ID              reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    IF              reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    PRINT           reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    WHILE           reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    READ            reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    RKEY            reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    RETURN          reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    LPAREN          reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    PLUS            reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    MINUS           reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    CTE_I           reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    CTE_F           reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    CTE_S           reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    TRUE            reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)
    FALSE           reduce using rule 63 (cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 33 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 114 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 114 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 131 resolved as shift
WARNING: reduce/reduce conflict in state 84 resolved using rule (existfunc -> <empty>)
WARNING: rejected rule (pushid -> <empty>) in state 84
