
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL COLON COMA CTE_B CTE_F CTE_I CTE_S DIFFERENT DIVIDE ELSE EQUAL FLOAT FUNCTION ID IF INT LBRACE LKEY LOWEREQ LOWERTHAN LPAREN MINUS MOREEQ MORETHAN OR PLUS PRINT PROGRAM RBRACE READ RETURN RKEY RPAREN SAME SEMICOLON STRING TIMES VAR VECTOR VOID WHILE\n  \tprogram : PROGRAM COLON program2 bloq\n    \t| PROGRAM COLON bloq\n        | PROGRAM COLON\n  \n  \tprogram2 : crear program2\n    \t| crear\n  \n  \tcrear : var\n    \t| vector\n        | func\n  \n  \tvar : VAR tipo ID SEMICOLON\n  \n  \ttipo : INT\n    \t| FLOAT\n        | STRING\n        | BOOL\n  \n  \tvector : VECTOR ID LBRACE CTE_I RBRACE SEMICOLON\n  \n  \tfunc : FUNCTION functype ID addInTable LPAREN funci RPAREN localvar bloq return\n    | FUNCTION functype ID addInTable LPAREN funci RPAREN bloq return\n  \n  \tfunctype : INT\n    | FLOAT\n    | STRING\n    | BOOL\n    | VOID\n  \n    addInTable :\n    \n    funci : tipo ID\n    | tipo ID COMA funci\n    | empty\n  \n     localvar : var\n     | vector\n     | var localvar\n     | vector localvar\n     \n    return : RETURN expres\n    | empty\n    \n  \tbloq : LKEY bloqi RKEY\n  \n  \tbloqi : estat\n        | estat bloqi\n  \n  \testat : asign\n        | cond\n        | escrit\n        | ciclo\n        | leer\n  \n    asign : ID pushid EQUAL pushop expres cuadradresasign SEMICOLON\n        | ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON\n  \n    cond : IF LPAREN expres RPAREN bloq\n        | IF LPAREN expres RPAREN bloq ELSE bloq\n  \n    escrit : PRINT LPAREN escriti RPAREN SEMICOLON\n  \n  \tescriti : expres\n    \t| expres COMA escriti\n  \n    ciclo : WHILE LPAREN expres RPAREN bloq\n  \n  \tleer : READ LPAREN ID RPAREN SEMICOLON\n  \n  expres : exr\n        | exr log expres\n  \n  \texr : ex\n    \t| ex rel exr\n  \n  \tex : term resterm\n    \t| term resterm PLUS pushop ex\n    \t| term resterm MINUS pushop ex\n  \n  \tterm : fact resfact\n    \t| fact resfact TIMES pushop term\n        | fact resfact DIVIDE pushop term\n  \n  \tfact : LPAREN pushop expres RPAREN pushop\n        | var_cte\n        | PLUS var_cte\n        | MINUS var_cte\n  \n  \trel : LOWERTHAN\n    \t| MORETHAN\n        | LOWEREQ\n        | MOREEQ\n        | SAME\n        | DIFFERENT\n  \n  \tlog : OR\n        | AND\n  \n  \tvar_cte : ID pushid\n        | CTE_I pushcte\n        | CTE_F pushcte\n        | CTE_B pushcte\n        | CTE_S pushcte\n        | fcall\n        | vcall\n  \n  \tfcall : ID LPAREN fcall1 RPAREN\n        | ID LPAREN RPAREN\n  \n  \tfcall1 : expres\n        | expres COMA fcall1\n  \n  \tvcall : ID LBRACE expres RBRACE\n  \n    empty :\n    pushcte :pushid :pushop :cuadradresasign :resfact :resterm :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,3,5,14,40,],[0,-3,-2,-1,-32,]),'COLON':([2,],[3,]),'LKEY':([3,4,6,8,9,10,15,40,54,55,56,59,60,61,62,63,64,65,66,67,72,78,89,90,91,92,93,96,97,98,99,102,110,111,117,124,130,131,136,138,139,143,145,146,147,148,150,151,152,153,156,157,159,160,161,164,165,],[7,7,-5,-6,-7,-8,-4,-32,-49,-51,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,-9,7,-53,-61,-62,-56,-71,-72,-73,-74,-75,7,-50,-52,-79,-14,-86,7,-78,-82,7,-59,-54,-55,-57,-58,7,-83,-26,-27,-83,-16,-31,-28,-29,-15,-30,]),'VAR':([3,6,8,9,10,40,54,55,56,59,60,61,62,63,64,65,66,67,72,89,90,91,92,93,96,97,98,99,110,111,117,124,130,136,138,139,143,145,146,147,148,151,152,153,156,157,159,164,165,],[11,11,-6,-7,-8,-32,-49,-51,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,-9,-53,-61,-62,-56,-71,-72,-73,-74,-75,-50,-52,-79,-14,-86,-78,-82,11,-59,-54,-55,-57,-58,-83,11,11,-83,-16,-31,-15,-30,]),'VECTOR':([3,6,8,9,10,40,54,55,56,59,60,61,62,63,64,65,66,67,72,89,90,91,92,93,96,97,98,99,110,111,117,124,130,136,138,139,143,145,146,147,148,151,152,153,156,157,159,164,165,],[12,12,-6,-7,-8,-32,-49,-51,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,-9,-53,-61,-62,-56,-71,-72,-73,-74,-75,-50,-52,-79,-14,-86,-78,-82,12,-59,-54,-55,-57,-58,-83,12,12,-83,-16,-31,-15,-30,]),'FUNCTION':([3,6,8,9,10,40,54,55,56,59,60,61,62,63,64,65,66,67,72,89,90,91,92,93,96,97,98,99,110,111,117,124,130,136,138,143,145,146,147,148,151,156,157,159,164,165,],[13,13,-6,-7,-8,-32,-49,-51,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,-9,-53,-61,-62,-56,-71,-72,-73,-74,-75,-50,-52,-79,-14,-86,-78,-82,-59,-54,-55,-57,-58,-83,-83,-16,-31,-15,-30,]),'ID':([7,12,17,18,19,20,21,22,28,29,30,31,32,34,35,36,37,38,39,40,43,44,45,46,50,51,52,57,58,75,77,79,80,81,82,83,84,85,86,87,88,94,95,101,109,112,113,114,115,120,122,123,126,129,132,133,134,135,137,141,142,144,158,163,],[23,33,23,-35,-36,-37,-38,-39,47,-10,-11,-12,-13,49,-17,-18,-19,-20,-21,-32,61,61,61,71,-86,61,-86,61,61,61,61,61,-69,-70,61,-63,-64,-65,-66,-67,-68,61,61,61,-42,-86,-86,-86,-86,-44,-47,-48,140,-86,61,61,61,61,61,-40,61,-43,61,-41,]),'IF':([7,17,18,19,20,21,22,40,109,120,122,123,141,144,163,],[24,24,-35,-36,-37,-38,-39,-32,-42,-44,-47,-48,-40,-43,-41,]),'PRINT':([7,17,18,19,20,21,22,40,109,120,122,123,141,144,163,],[25,25,-35,-36,-37,-38,-39,-32,-42,-44,-47,-48,-40,-43,-41,]),'WHILE':([7,17,18,19,20,21,22,40,109,120,122,123,141,144,163,],[26,26,-35,-36,-37,-38,-39,-32,-42,-44,-47,-48,-40,-43,-41,]),'READ':([7,17,18,19,20,21,22,40,109,120,122,123,141,144,163,],[27,27,-35,-36,-37,-38,-39,-32,-42,-44,-47,-48,-40,-43,-41,]),'INT':([11,13,105,154,],[29,35,29,29,]),'FLOAT':([11,13,105,154,],[30,36,30,30,]),'STRING':([11,13,105,154,],[31,37,31,31,]),'BOOL':([11,13,105,154,],[32,38,32,32,]),'VOID':([13,],[39,]),'RKEY':([16,17,18,19,20,21,22,40,41,109,120,122,123,141,144,163,],[40,-33,-35,-36,-37,-38,-39,-32,-34,-42,-44,-47,-48,-40,-43,-41,]),'EQUAL':([23,42,107,],[-85,50,129,]),'LBRACE':([23,33,42,61,],[-85,48,51,95,]),'LPAREN':([24,25,26,27,43,44,45,49,50,51,52,61,74,75,77,79,80,81,82,83,84,85,86,87,88,94,95,101,112,113,114,115,129,132,133,134,135,137,142,158,],[43,44,45,46,52,52,52,-22,-86,52,-86,94,105,52,52,52,-69,-70,52,-63,-64,-65,-66,-67,-68,52,52,52,-86,-86,-86,-86,-86,52,52,52,52,52,52,52,]),'ELSE':([40,109,],[-32,131,]),'RETURN':([40,151,156,],[-32,158,158,]),'PLUS':([43,44,45,50,51,52,56,59,60,61,62,63,64,65,66,67,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,112,113,114,115,117,129,130,132,133,134,135,136,137,138,142,143,147,148,158,],[57,57,57,-86,57,-86,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,57,57,57,-69,-70,57,-63,-64,-65,-66,-67,-68,112,-61,-62,-56,-71,57,57,-72,-73,-74,-75,57,-86,-86,-86,-86,-79,-86,-86,57,57,57,57,-78,57,-82,57,-59,-57,-58,57,]),'MINUS':([43,44,45,50,51,52,56,59,60,61,62,63,64,65,66,67,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,112,113,114,115,117,129,130,132,133,134,135,136,137,138,142,143,147,148,158,],[58,58,58,-86,58,-86,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,58,58,58,-69,-70,58,-63,-64,-65,-66,-67,-68,113,-61,-62,-56,-71,58,58,-72,-73,-74,-75,58,-86,-86,-86,-86,-79,-86,-86,58,58,58,58,-78,58,-82,58,-59,-57,-58,58,]),'CTE_I':([43,44,45,48,50,51,52,57,58,75,77,79,80,81,82,83,84,85,86,87,88,94,95,101,112,113,114,115,129,132,133,134,135,137,142,158,],[62,62,62,73,-86,62,-86,62,62,62,62,62,-69,-70,62,-63,-64,-65,-66,-67,-68,62,62,62,-86,-86,-86,-86,-86,62,62,62,62,62,62,62,]),'CTE_F':([43,44,45,50,51,52,57,58,75,77,79,80,81,82,83,84,85,86,87,88,94,95,101,112,113,114,115,129,132,133,134,135,137,142,158,],[63,63,63,-86,63,-86,63,63,63,63,63,-69,-70,63,-63,-64,-65,-66,-67,-68,63,63,63,-86,-86,-86,-86,-86,63,63,63,63,63,63,63,]),'CTE_B':([43,44,45,50,51,52,57,58,75,77,79,80,81,82,83,84,85,86,87,88,94,95,101,112,113,114,115,129,132,133,134,135,137,142,158,],[64,64,64,-86,64,-86,64,64,64,64,64,-69,-70,64,-63,-64,-65,-66,-67,-68,64,64,64,-86,-86,-86,-86,-86,64,64,64,64,64,64,64,]),'CTE_S':([43,44,45,50,51,52,57,58,75,77,79,80,81,82,83,84,85,86,87,88,94,95,101,112,113,114,115,129,132,133,134,135,137,142,158,],[65,65,65,-86,65,-86,65,65,65,65,65,-69,-70,65,-63,-64,-65,-66,-67,-68,65,65,65,-86,-86,-86,-86,-86,65,65,65,65,65,65,65,]),'SEMICOLON':([47,54,55,56,59,60,61,62,63,64,65,66,67,89,90,91,92,93,96,97,98,99,100,103,104,106,110,111,117,128,130,136,138,143,145,146,147,148,155,],[72,-49,-51,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,-53,-61,-62,-56,-71,-72,-73,-74,-75,120,123,124,-87,-50,-52,-79,141,-86,-78,-82,-59,-54,-55,-57,-58,163,]),'RPAREN':([53,54,55,56,59,60,61,62,63,64,65,66,67,68,69,70,71,89,90,91,92,93,94,96,97,98,99,105,108,110,111,116,117,118,121,125,127,130,136,138,140,143,145,146,147,148,149,154,162,],[78,-49,-51,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,100,-45,102,103,-53,-61,-62,-56,-71,117,-72,-73,-74,-75,-83,130,-50,-52,136,-79,-80,-46,139,-25,-86,-78,-82,-23,-59,-54,-55,-57,-58,-81,-83,-24,]),'COMA':([54,55,56,59,60,61,62,63,64,65,66,67,69,89,90,91,92,93,96,97,98,99,110,111,117,118,130,136,138,140,143,145,146,147,148,],[-49,-51,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,101,-53,-61,-62,-56,-71,-72,-73,-74,-75,-50,-52,-79,137,-86,-78,-82,154,-59,-54,-55,-57,-58,]),'RBRACE':([54,55,56,59,60,61,62,63,64,65,66,67,73,76,89,90,91,92,93,96,97,98,99,110,111,117,119,130,136,138,143,145,146,147,148,],[-49,-51,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,104,107,-53,-61,-62,-56,-71,-72,-73,-74,-75,-50,-52,-79,138,-86,-78,-82,-59,-54,-55,-57,-58,]),'OR':([54,55,56,59,60,61,62,63,64,65,66,67,89,90,91,92,93,96,97,98,99,111,117,130,136,138,143,145,146,147,148,],[80,-51,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,-53,-61,-62,-56,-71,-72,-73,-74,-75,-52,-79,-86,-78,-82,-59,-54,-55,-57,-58,]),'AND':([54,55,56,59,60,61,62,63,64,65,66,67,89,90,91,92,93,96,97,98,99,111,117,130,136,138,143,145,146,147,148,],[81,-51,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,-53,-61,-62,-56,-71,-72,-73,-74,-75,-52,-79,-86,-78,-82,-59,-54,-55,-57,-58,]),'LOWERTHAN':([55,56,59,60,61,62,63,64,65,66,67,89,90,91,92,93,96,97,98,99,117,130,136,138,143,145,146,147,148,],[83,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,-53,-61,-62,-56,-71,-72,-73,-74,-75,-79,-86,-78,-82,-59,-54,-55,-57,-58,]),'MORETHAN':([55,56,59,60,61,62,63,64,65,66,67,89,90,91,92,93,96,97,98,99,117,130,136,138,143,145,146,147,148,],[84,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,-53,-61,-62,-56,-71,-72,-73,-74,-75,-79,-86,-78,-82,-59,-54,-55,-57,-58,]),'LOWEREQ':([55,56,59,60,61,62,63,64,65,66,67,89,90,91,92,93,96,97,98,99,117,130,136,138,143,145,146,147,148,],[85,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,-53,-61,-62,-56,-71,-72,-73,-74,-75,-79,-86,-78,-82,-59,-54,-55,-57,-58,]),'MOREEQ':([55,56,59,60,61,62,63,64,65,66,67,89,90,91,92,93,96,97,98,99,117,130,136,138,143,145,146,147,148,],[86,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,-53,-61,-62,-56,-71,-72,-73,-74,-75,-79,-86,-78,-82,-59,-54,-55,-57,-58,]),'SAME':([55,56,59,60,61,62,63,64,65,66,67,89,90,91,92,93,96,97,98,99,117,130,136,138,143,145,146,147,148,],[87,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,-53,-61,-62,-56,-71,-72,-73,-74,-75,-79,-86,-78,-82,-59,-54,-55,-57,-58,]),'DIFFERENT':([55,56,59,60,61,62,63,64,65,66,67,89,90,91,92,93,96,97,98,99,117,130,136,138,143,145,146,147,148,],[88,-89,-88,-60,-85,-84,-84,-84,-84,-76,-77,-53,-61,-62,-56,-71,-72,-73,-74,-75,-79,-86,-78,-82,-59,-54,-55,-57,-58,]),'TIMES':([59,60,61,62,63,64,65,66,67,90,91,92,93,96,97,98,99,117,130,136,138,143,],[-88,-60,-85,-84,-84,-84,-84,-76,-77,-61,-62,114,-71,-72,-73,-74,-75,-79,-86,-78,-82,-59,]),'DIVIDE':([59,60,61,62,63,64,65,66,67,90,91,92,93,96,97,98,99,117,130,136,138,143,],[-88,-60,-85,-84,-84,-84,-84,-76,-77,-61,-62,115,-71,-72,-73,-74,-75,-79,-86,-78,-82,-59,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program2':([3,6,],[4,15,]),'bloq':([3,4,78,102,131,139,150,],[5,14,109,122,144,151,156,]),'crear':([3,6,],[6,6,]),'var':([3,6,139,152,153,],[8,8,152,152,152,]),'vector':([3,6,139,152,153,],[9,9,153,153,153,]),'func':([3,6,],[10,10,]),'bloqi':([7,17,],[16,41,]),'estat':([7,17,],[17,17,]),'asign':([7,17,],[18,18,]),'cond':([7,17,],[19,19,]),'escrit':([7,17,],[20,20,]),'ciclo':([7,17,],[21,21,]),'leer':([7,17,],[22,22,]),'tipo':([11,105,154,],[28,126,126,]),'functype':([13,],[34,]),'pushid':([23,61,],[42,93,]),'expres':([43,44,45,75,77,79,94,95,101,137,142,158,],[53,69,70,106,108,110,118,119,69,118,155,165,]),'exr':([43,44,45,51,75,77,79,82,94,95,101,137,142,158,],[54,54,54,76,54,54,54,111,54,54,54,54,54,54,]),'ex':([43,44,45,51,75,77,79,82,94,95,101,132,133,137,142,158,],[55,55,55,55,55,55,55,55,55,55,55,145,146,55,55,55,]),'term':([43,44,45,51,75,77,79,82,94,95,101,132,133,134,135,137,142,158,],[56,56,56,56,56,56,56,56,56,56,56,56,56,147,148,56,56,56,]),'fact':([43,44,45,51,75,77,79,82,94,95,101,132,133,134,135,137,142,158,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'var_cte':([43,44,45,51,57,58,75,77,79,82,94,95,101,132,133,134,135,137,142,158,],[60,60,60,60,90,91,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'fcall':([43,44,45,51,57,58,75,77,79,82,94,95,101,132,133,134,135,137,142,158,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'vcall':([43,44,45,51,57,58,75,77,79,82,94,95,101,132,133,134,135,137,142,158,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'escriti':([44,101,],[68,121,]),'addInTable':([49,],[74,]),'pushop':([50,52,112,113,114,115,129,130,],[75,77,132,133,134,135,142,143,]),'log':([54,],[79,]),'rel':([55,],[82,]),'resterm':([56,],[89,]),'resfact':([59,],[92,]),'pushcte':([62,63,64,65,],[96,97,98,99,]),'fcall1':([94,137,],[116,149,]),'funci':([105,154,],[125,162,]),'empty':([105,151,154,156,],[127,159,127,159,]),'cuadradresasign':([106,],[128,]),'localvar':([139,152,153,],[150,160,161,]),'return':([151,156,],[157,164,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM COLON program2 bloq','program',4,'p_program','lexPar.py',150),
  ('program -> PROGRAM COLON bloq','program',3,'p_program','lexPar.py',151),
  ('program -> PROGRAM COLON','program',2,'p_program','lexPar.py',152),
  ('program2 -> crear program2','program2',2,'p_program2','lexPar.py',157),
  ('program2 -> crear','program2',1,'p_program2','lexPar.py',158),
  ('crear -> var','crear',1,'p_crear','lexPar.py',163),
  ('crear -> vector','crear',1,'p_crear','lexPar.py',164),
  ('crear -> func','crear',1,'p_crear','lexPar.py',165),
  ('var -> VAR tipo ID SEMICOLON','var',4,'p_var','lexPar.py',170),
  ('tipo -> INT','tipo',1,'p_tipo','lexPar.py',181),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lexPar.py',182),
  ('tipo -> STRING','tipo',1,'p_tipo','lexPar.py',183),
  ('tipo -> BOOL','tipo',1,'p_tipo','lexPar.py',184),
  ('vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON','vector',6,'p_vector','lexPar.py',190),
  ('func -> FUNCTION functype ID addInTable LPAREN funci RPAREN localvar bloq return','func',10,'p_func','lexPar.py',197),
  ('func -> FUNCTION functype ID addInTable LPAREN funci RPAREN bloq return','func',9,'p_func','lexPar.py',198),
  ('functype -> INT','functype',1,'p_functype','lexPar.py',206),
  ('functype -> FLOAT','functype',1,'p_functype','lexPar.py',207),
  ('functype -> STRING','functype',1,'p_functype','lexPar.py',208),
  ('functype -> BOOL','functype',1,'p_functype','lexPar.py',209),
  ('functype -> VOID','functype',1,'p_functype','lexPar.py',210),
  ('addInTable -> <empty>','addInTable',0,'p_addInTable','lexPar.py',216),
  ('funci -> tipo ID','funci',2,'p_funci','lexPar.py',225),
  ('funci -> tipo ID COMA funci','funci',4,'p_funci','lexPar.py',226),
  ('funci -> empty','funci',1,'p_funci','lexPar.py',227),
  ('localvar -> var','localvar',1,'p_localvar','lexPar.py',233),
  ('localvar -> vector','localvar',1,'p_localvar','lexPar.py',234),
  ('localvar -> var localvar','localvar',2,'p_localvar','lexPar.py',235),
  ('localvar -> vector localvar','localvar',2,'p_localvar','lexPar.py',236),
  ('return -> RETURN expres','return',2,'p_return','lexPar.py',241),
  ('return -> empty','return',1,'p_return','lexPar.py',242),
  ('bloq -> LKEY bloqi RKEY','bloq',3,'p_bloq','lexPar.py',247),
  ('bloqi -> estat','bloqi',1,'p_bloqi','lexPar.py',252),
  ('bloqi -> estat bloqi','bloqi',2,'p_bloqi','lexPar.py',253),
  ('estat -> asign','estat',1,'p_estat','lexPar.py',258),
  ('estat -> cond','estat',1,'p_estat','lexPar.py',259),
  ('estat -> escrit','estat',1,'p_estat','lexPar.py',260),
  ('estat -> ciclo','estat',1,'p_estat','lexPar.py',261),
  ('estat -> leer','estat',1,'p_estat','lexPar.py',262),
  ('asign -> ID pushid EQUAL pushop expres cuadradresasign SEMICOLON','asign',7,'p_asign','lexPar.py',267),
  ('asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres SEMICOLON','asign',9,'p_asign','lexPar.py',268),
  ('cond -> IF LPAREN expres RPAREN bloq','cond',5,'p_cond','lexPar.py',273),
  ('cond -> IF LPAREN expres RPAREN bloq ELSE bloq','cond',7,'p_cond','lexPar.py',274),
  ('escrit -> PRINT LPAREN escriti RPAREN SEMICOLON','escrit',5,'p_escrit','lexPar.py',279),
  ('escriti -> expres','escriti',1,'p_escriti','lexPar.py',284),
  ('escriti -> expres COMA escriti','escriti',3,'p_escriti','lexPar.py',285),
  ('ciclo -> WHILE LPAREN expres RPAREN bloq','ciclo',5,'p_ciclo','lexPar.py',290),
  ('leer -> READ LPAREN ID RPAREN SEMICOLON','leer',5,'p_leer','lexPar.py',295),
  ('expres -> exr','expres',1,'p_expres','lexPar.py',300),
  ('expres -> exr log expres','expres',3,'p_expres','lexPar.py',301),
  ('exr -> ex','exr',1,'p_exr','lexPar.py',306),
  ('exr -> ex rel exr','exr',3,'p_exr','lexPar.py',307),
  ('ex -> term resterm','ex',2,'p_ex','lexPar.py',312),
  ('ex -> term resterm PLUS pushop ex','ex',5,'p_ex','lexPar.py',313),
  ('ex -> term resterm MINUS pushop ex','ex',5,'p_ex','lexPar.py',314),
  ('term -> fact resfact','term',2,'p_term','lexPar.py',319),
  ('term -> fact resfact TIMES pushop term','term',5,'p_term','lexPar.py',320),
  ('term -> fact resfact DIVIDE pushop term','term',5,'p_term','lexPar.py',321),
  ('fact -> LPAREN pushop expres RPAREN pushop','fact',5,'p_fact','lexPar.py',326),
  ('fact -> var_cte','fact',1,'p_fact','lexPar.py',327),
  ('fact -> PLUS var_cte','fact',2,'p_fact','lexPar.py',328),
  ('fact -> MINUS var_cte','fact',2,'p_fact','lexPar.py',329),
  ('rel -> LOWERTHAN','rel',1,'p_rel','lexPar.py',334),
  ('rel -> MORETHAN','rel',1,'p_rel','lexPar.py',335),
  ('rel -> LOWEREQ','rel',1,'p_rel','lexPar.py',336),
  ('rel -> MOREEQ','rel',1,'p_rel','lexPar.py',337),
  ('rel -> SAME','rel',1,'p_rel','lexPar.py',338),
  ('rel -> DIFFERENT','rel',1,'p_rel','lexPar.py',339),
  ('log -> OR','log',1,'p_log','lexPar.py',344),
  ('log -> AND','log',1,'p_log','lexPar.py',345),
  ('var_cte -> ID pushid','var_cte',2,'p_var_cte','lexPar.py',350),
  ('var_cte -> CTE_I pushcte','var_cte',2,'p_var_cte','lexPar.py',351),
  ('var_cte -> CTE_F pushcte','var_cte',2,'p_var_cte','lexPar.py',352),
  ('var_cte -> CTE_B pushcte','var_cte',2,'p_var_cte','lexPar.py',353),
  ('var_cte -> CTE_S pushcte','var_cte',2,'p_var_cte','lexPar.py',354),
  ('var_cte -> fcall','var_cte',1,'p_var_cte','lexPar.py',355),
  ('var_cte -> vcall','var_cte',1,'p_var_cte','lexPar.py',356),
  ('fcall -> ID LPAREN fcall1 RPAREN','fcall',4,'p_fcall','lexPar.py',361),
  ('fcall -> ID LPAREN RPAREN','fcall',3,'p_fcall','lexPar.py',362),
  ('fcall1 -> expres','fcall1',1,'p_fcall1','lexPar.py',367),
  ('fcall1 -> expres COMA fcall1','fcall1',3,'p_fcall1','lexPar.py',368),
  ('vcall -> ID LBRACE expres RBRACE','vcall',4,'p_vcall','lexPar.py',373),
  ('empty -> <empty>','empty',0,'p_empty','lexPar.py',378),
  ('pushcte -> <empty>','pushcte',0,'p_pushcte','lexPar.py',389),
  ('pushid -> <empty>','pushid',0,'p_pushid','lexPar.py',393),
  ('pushop -> <empty>','pushop',0,'p_pushop','lexPar.py',397),
  ('cuadradresasign -> <empty>','cuadradresasign',0,'p_cuadradresasign','lexPar.py',401),
  ('resfact -> <empty>','resfact',0,'p_resfact','lexPar.py',405),
  ('resterm -> <empty>','resterm',0,'p_resterm','lexPar.py',409),
]
