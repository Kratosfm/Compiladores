
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL COLON COMA CTE_B CTE_F CTE_I CTE_S CTE_STRING DIFFERENT DIVIDE ELSE EQUAL FLOAT FUNCTION ID IF INT LBRACE LKEY LOWEREQ LOWERTHAN LPAREN MINUS MOREEQ MORETHAN OR PLUS PRINT PROGRAM RBRACE READ RETURN RKEY RPAREN SAME SEMICOLON STRING TIMES VAR VECTOR VOID WHILE\n  \tprogram : PROGRAM ID COLON program2 bloq\n    \t| PROGRAM ID COLON bloq\n        | PROGRAM ID COLON\n  \n  \tprogram2 : crear program2\n    \t| crear\n  \n  \tcrear : var\n    \t| vector\n        | func\n  \n  \tvar : VAR tipo ID SEMICOLON\n  \n  \ttipo : INT\n    \t| FLOAT\n        | STRING\n        | BOOL\n  \n  \tvector : VECTOR ID LBRACE CTE_I RBRACE SEMICOLON\n  \n  \tfunc : FUNCTION functype ID LPAREN funci RPAREN bloq\n    | FUNCTION functype ID LPAREN funci RPAREN bloq RETURN expres\n  \n  \tfunctype : tipo\n    | VOID\n  \n    funci : tipo ID\n    | tipo ID COMA funci\n  \n  \tbloq : LKEY bloqi RKEY\n  \n  \tbloqi : estat\n        | estat bloqi\n  \n  \testat : asign\n        | cond\n        | escrit\n        | ciclo\n        | leer\n  \n    asign : ID EQUAL expres SEMICOLON\n        | ID LBRACE exr RBRACE EQUAL expres SEMICOLON\n  \n    cond : IF LPAREN expres RPAREN bloq\n        | IF LPAREN expres RPAREN bloq ELSE bloq\n  \n    escrit : PRINT LPAREN escriti RPAREN SEMICOLON\n  \n  \tescriti : expres\n    \t| expres COMA escriti\n  \n    ciclo : WHILE LPAREN expres RPAREN bloq\n  \n  \tleer : READ LPAREN ID RPAREN SEMICOLON\n  \n  \texpres : exr\n        | exr log expres\n  \n  \texr : ex\n    \t| ex rel exr\n  \n  \tex : term\n    \t| term PLUS ex\n    \t| term MINUS ex\n  \n  \tterm : fact\n    \t| fact TIMES term\n        | fact DIVIDE term\n  \n  \tfact : LPAREN expres RPAREN\n        | fact1\n  \n  \tfact1 : PLUS var_cte\n        | MINUS var_cte\n        | var_cte\n  \n  \trel : LOWERTHAN\n    \t| MORETHAN\n        | LOWEREQ\n        | MOREEQ\n        | SAME\n        | DIFFERENT\n  \n  \tlog : OR\n        | AND\n  \n  \tvar_cte : ID\n        | CTE_I\n        | CTE_F\n        | CTE_B\n        | CTE_S\n        | fcall\n        | vcall\n  \n  \tfcall : ID LPAREN fcall1 RPAREN\n        | ID LPAREN RPAREN\n  \n  \tfcall1 : expres\n        | expres COMA fcall1\n  \n  \tvcall : ID LBRACE expres RBRACE\n  '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,4,6,15,38,],[0,-3,-2,-1,-21,]),'ID':([2,8,13,18,19,20,21,22,23,29,30,31,32,33,35,36,37,38,40,41,42,43,44,45,54,55,57,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,98,103,115,116,117,119,120,125,132,133,134,],[3,24,34,24,-24,-25,-26,-27,-28,46,-10,-11,-12,-13,48,-17,-18,-21,49,49,49,49,49,71,49,49,49,49,49,-29,49,-59,-60,49,-53,-54,-55,-56,-57,-58,49,49,49,49,49,123,49,-31,-33,-36,-37,49,-30,-32,49,]),'COLON':([3,],[4,]),'LKEY':([4,5,7,9,10,11,16,38,49,51,52,53,56,58,59,60,61,62,63,64,65,72,90,91,96,99,105,108,109,110,111,112,113,114,121,122,124,126,128,129,136,],[8,8,-5,-6,-7,-8,-4,-21,-61,-38,-40,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,-9,-50,-51,8,8,-69,-39,-41,-43,-44,-46,-47,-48,-14,8,-68,-72,8,-15,-16,]),'VAR':([4,7,9,10,11,38,49,51,52,53,56,58,59,60,61,62,63,64,65,72,90,91,105,108,109,110,111,112,113,114,121,124,126,129,136,],[12,12,-6,-7,-8,-21,-61,-38,-40,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,-9,-50,-51,-69,-39,-41,-43,-44,-46,-47,-48,-14,-68,-72,-15,-16,]),'VECTOR':([4,7,9,10,11,38,49,51,52,53,56,58,59,60,61,62,63,64,65,72,90,91,105,108,109,110,111,112,113,114,121,124,126,129,136,],[13,13,-6,-7,-8,-21,-61,-38,-40,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,-9,-50,-51,-69,-39,-41,-43,-44,-46,-47,-48,-14,-68,-72,-15,-16,]),'FUNCTION':([4,7,9,10,11,38,49,51,52,53,56,58,59,60,61,62,63,64,65,72,90,91,105,108,109,110,111,112,113,114,121,124,126,129,136,],[14,14,-6,-7,-8,-21,-61,-38,-40,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,-9,-50,-51,-69,-39,-41,-43,-44,-46,-47,-48,-14,-68,-72,-15,-16,]),'IF':([8,18,19,20,21,22,23,38,77,116,117,119,120,132,133,],[25,25,-24,-25,-26,-27,-28,-21,-29,-31,-33,-36,-37,-30,-32,]),'PRINT':([8,18,19,20,21,22,23,38,77,116,117,119,120,132,133,],[26,26,-24,-25,-26,-27,-28,-21,-29,-31,-33,-36,-37,-30,-32,]),'WHILE':([8,18,19,20,21,22,23,38,77,116,117,119,120,132,133,],[27,27,-24,-25,-26,-27,-28,-21,-29,-31,-33,-36,-37,-30,-32,]),'READ':([8,18,19,20,21,22,23,38,77,116,117,119,120,132,133,],[28,28,-24,-25,-26,-27,-28,-21,-29,-31,-33,-36,-37,-30,-32,]),'INT':([12,14,74,130,],[30,30,30,30,]),'FLOAT':([12,14,74,130,],[31,31,31,31,]),'STRING':([12,14,74,130,],[32,32,32,32,]),'BOOL':([12,14,74,130,],[33,33,33,33,]),'VOID':([14,],[37,]),'RKEY':([17,18,19,20,21,22,23,38,39,77,116,117,119,120,132,133,],[38,-22,-24,-25,-26,-27,-28,-21,-23,-29,-31,-33,-36,-37,-30,-32,]),'EQUAL':([24,95,],[40,115,]),'LBRACE':([24,34,49,],[41,47,76,]),'LPAREN':([25,26,27,28,40,41,42,43,44,48,49,57,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,98,115,125,134,],[42,43,44,45,57,57,57,57,57,74,75,57,57,57,57,-59,-60,57,-53,-54,-55,-56,-57,-58,57,57,57,57,57,57,57,57,]),'ELSE':([38,116,],[-21,128,]),'RETURN':([38,129,],[-21,134,]),'PLUS':([40,41,42,43,44,49,53,56,57,58,59,60,61,62,63,64,65,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,105,112,113,114,115,124,125,126,134,],[54,54,54,54,54,-61,88,-45,54,-49,-52,-62,-63,-64,-65,-66,-67,54,54,54,-59,-60,54,-53,-54,-55,-56,-57,-58,54,54,-50,-51,54,54,54,-69,-46,-47,-48,54,-68,54,-72,54,]),'MINUS':([40,41,42,43,44,49,53,56,57,58,59,60,61,62,63,64,65,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,105,112,113,114,115,124,125,126,134,],[55,55,55,55,55,-61,89,-45,55,-49,-52,-62,-63,-64,-65,-66,-67,55,55,55,-59,-60,55,-53,-54,-55,-56,-57,-58,55,55,-50,-51,55,55,55,-69,-46,-47,-48,55,-68,55,-72,55,]),'CTE_I':([40,41,42,43,44,47,54,55,57,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,98,115,125,134,],[60,60,60,60,60,73,60,60,60,60,60,60,-59,-60,60,-53,-54,-55,-56,-57,-58,60,60,60,60,60,60,60,60,]),'CTE_F':([40,41,42,43,44,54,55,57,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,98,115,125,134,],[61,61,61,61,61,61,61,61,61,61,61,-59,-60,61,-53,-54,-55,-56,-57,-58,61,61,61,61,61,61,61,61,]),'CTE_B':([40,41,42,43,44,54,55,57,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,98,115,125,134,],[62,62,62,62,62,62,62,62,62,62,62,-59,-60,62,-53,-54,-55,-56,-57,-58,62,62,62,62,62,62,62,62,]),'CTE_S':([40,41,42,43,44,54,55,57,75,76,78,79,80,81,82,83,84,85,86,87,88,89,92,93,98,115,125,134,],[63,63,63,63,63,63,63,63,63,63,63,-59,-60,63,-53,-54,-55,-56,-57,-58,63,63,63,63,63,63,63,63,]),'SEMICOLON':([46,49,50,51,52,53,56,58,59,60,61,62,63,64,65,90,91,97,100,101,105,108,109,110,111,112,113,114,124,126,127,],[72,-61,77,-38,-40,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,-50,-51,117,120,121,-69,-39,-41,-43,-44,-46,-47,-48,-68,-72,132,]),'TIMES':([49,56,58,59,60,61,62,63,64,65,90,91,105,114,124,126,],[-61,92,-49,-52,-62,-63,-64,-65,-66,-67,-50,-51,-69,-48,-68,-72,]),'DIVIDE':([49,56,58,59,60,61,62,63,64,65,90,91,105,114,124,126,],[-61,93,-49,-52,-62,-63,-64,-65,-66,-67,-50,-51,-69,-48,-68,-72,]),'LOWERTHAN':([49,52,53,56,58,59,60,61,62,63,64,65,90,91,105,110,111,112,113,114,124,126,],[-61,82,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,-50,-51,-69,-43,-44,-46,-47,-48,-68,-72,]),'MORETHAN':([49,52,53,56,58,59,60,61,62,63,64,65,90,91,105,110,111,112,113,114,124,126,],[-61,83,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,-50,-51,-69,-43,-44,-46,-47,-48,-68,-72,]),'LOWEREQ':([49,52,53,56,58,59,60,61,62,63,64,65,90,91,105,110,111,112,113,114,124,126,],[-61,84,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,-50,-51,-69,-43,-44,-46,-47,-48,-68,-72,]),'MOREEQ':([49,52,53,56,58,59,60,61,62,63,64,65,90,91,105,110,111,112,113,114,124,126,],[-61,85,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,-50,-51,-69,-43,-44,-46,-47,-48,-68,-72,]),'SAME':([49,52,53,56,58,59,60,61,62,63,64,65,90,91,105,110,111,112,113,114,124,126,],[-61,86,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,-50,-51,-69,-43,-44,-46,-47,-48,-68,-72,]),'DIFFERENT':([49,52,53,56,58,59,60,61,62,63,64,65,90,91,105,110,111,112,113,114,124,126,],[-61,87,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,-50,-51,-69,-43,-44,-46,-47,-48,-68,-72,]),'OR':([49,51,52,53,56,58,59,60,61,62,63,64,65,90,91,105,109,110,111,112,113,114,124,126,],[-61,79,-40,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,-50,-51,-69,-41,-43,-44,-46,-47,-48,-68,-72,]),'AND':([49,51,52,53,56,58,59,60,61,62,63,64,65,90,91,105,109,110,111,112,113,114,124,126,],[-61,80,-40,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,-50,-51,-69,-41,-43,-44,-46,-47,-48,-68,-72,]),'RBRACE':([49,51,52,53,56,58,59,60,61,62,63,64,65,66,73,90,91,105,107,108,109,110,111,112,113,114,124,126,],[-61,-38,-40,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,95,101,-50,-51,-69,126,-39,-41,-43,-44,-46,-47,-48,-68,-72,]),'RPAREN':([49,51,52,53,56,58,59,60,61,62,63,64,65,67,68,69,70,71,75,90,91,94,102,104,105,106,108,109,110,111,112,113,114,118,123,124,126,131,135,],[-61,-38,-40,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,96,97,-34,99,100,105,-50,-51,114,122,124,-69,-70,-39,-41,-43,-44,-46,-47,-48,-35,-19,-68,-72,-71,-20,]),'COMA':([49,51,52,53,56,58,59,60,61,62,63,64,65,69,90,91,105,106,108,109,110,111,112,113,114,123,124,126,],[-61,-38,-40,-42,-45,-49,-52,-62,-63,-64,-65,-66,-67,98,-50,-51,-69,125,-39,-41,-43,-44,-46,-47,-48,130,-68,-72,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program2':([4,7,],[5,16,]),'bloq':([4,5,96,99,122,128,],[6,15,116,119,129,133,]),'crear':([4,7,],[7,7,]),'var':([4,7,],[9,9,]),'vector':([4,7,],[10,10,]),'func':([4,7,],[11,11,]),'bloqi':([8,18,],[17,39,]),'estat':([8,18,],[18,18,]),'asign':([8,18,],[19,19,]),'cond':([8,18,],[20,20,]),'escrit':([8,18,],[21,21,]),'ciclo':([8,18,],[22,22,]),'leer':([8,18,],[23,23,]),'tipo':([12,14,74,130,],[29,36,103,103,]),'functype':([14,],[35,]),'expres':([40,42,43,44,57,75,76,78,98,115,125,134,],[50,67,69,70,94,106,107,108,69,127,106,136,]),'exr':([40,41,42,43,44,57,75,76,78,81,98,115,125,134,],[51,66,51,51,51,51,51,51,51,109,51,51,51,51,]),'ex':([40,41,42,43,44,57,75,76,78,81,88,89,98,115,125,134,],[52,52,52,52,52,52,52,52,52,52,110,111,52,52,52,52,]),'term':([40,41,42,43,44,57,75,76,78,81,88,89,92,93,98,115,125,134,],[53,53,53,53,53,53,53,53,53,53,53,53,112,113,53,53,53,53,]),'fact':([40,41,42,43,44,57,75,76,78,81,88,89,92,93,98,115,125,134,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'fact1':([40,41,42,43,44,57,75,76,78,81,88,89,92,93,98,115,125,134,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'var_cte':([40,41,42,43,44,54,55,57,75,76,78,81,88,89,92,93,98,115,125,134,],[59,59,59,59,59,90,91,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'fcall':([40,41,42,43,44,54,55,57,75,76,78,81,88,89,92,93,98,115,125,134,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'vcall':([40,41,42,43,44,54,55,57,75,76,78,81,88,89,92,93,98,115,125,134,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'escriti':([43,98,],[68,118,]),'log':([51,],[78,]),'rel':([52,],[81,]),'funci':([74,130,],[102,135,]),'fcall1':([75,125,],[104,131,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID COLON program2 bloq','program',5,'p_program','Proyecto.py',149),
  ('program -> PROGRAM ID COLON bloq','program',4,'p_program','Proyecto.py',150),
  ('program -> PROGRAM ID COLON','program',3,'p_program','Proyecto.py',151),
  ('program2 -> crear program2','program2',2,'p_program2','Proyecto.py',156),
  ('program2 -> crear','program2',1,'p_program2','Proyecto.py',157),
  ('crear -> var','crear',1,'p_crear','Proyecto.py',162),
  ('crear -> vector','crear',1,'p_crear','Proyecto.py',163),
  ('crear -> func','crear',1,'p_crear','Proyecto.py',164),
  ('var -> VAR tipo ID SEMICOLON','var',4,'p_var','Proyecto.py',169),
  ('tipo -> INT','tipo',1,'p_tipo','Proyecto.py',175),
  ('tipo -> FLOAT','tipo',1,'p_tipo','Proyecto.py',176),
  ('tipo -> STRING','tipo',1,'p_tipo','Proyecto.py',177),
  ('tipo -> BOOL','tipo',1,'p_tipo','Proyecto.py',178),
  ('vector -> VECTOR ID LBRACE CTE_I RBRACE SEMICOLON','vector',6,'p_vector','Proyecto.py',184),
  ('func -> FUNCTION functype ID LPAREN funci RPAREN bloq','func',7,'p_func','Proyecto.py',189),
  ('func -> FUNCTION functype ID LPAREN funci RPAREN bloq RETURN expres','func',9,'p_func','Proyecto.py',190),
  ('functype -> tipo','functype',1,'p_functype','Proyecto.py',195),
  ('functype -> VOID','functype',1,'p_functype','Proyecto.py',196),
  ('funci -> tipo ID','funci',2,'p_funci','Proyecto.py',201),
  ('funci -> tipo ID COMA funci','funci',4,'p_funci','Proyecto.py',202),
  ('bloq -> LKEY bloqi RKEY','bloq',3,'p_bloq','Proyecto.py',207),
  ('bloqi -> estat','bloqi',1,'p_bloqi','Proyecto.py',212),
  ('bloqi -> estat bloqi','bloqi',2,'p_bloqi','Proyecto.py',213),
  ('estat -> asign','estat',1,'p_estat','Proyecto.py',218),
  ('estat -> cond','estat',1,'p_estat','Proyecto.py',219),
  ('estat -> escrit','estat',1,'p_estat','Proyecto.py',220),
  ('estat -> ciclo','estat',1,'p_estat','Proyecto.py',221),
  ('estat -> leer','estat',1,'p_estat','Proyecto.py',222),
  ('asign -> ID EQUAL expres SEMICOLON','asign',4,'p_asign','Proyecto.py',227),
  ('asign -> ID LBRACE exr RBRACE EQUAL expres SEMICOLON','asign',7,'p_asign','Proyecto.py',228),
  ('cond -> IF LPAREN expres RPAREN bloq','cond',5,'p_cond','Proyecto.py',234),
  ('cond -> IF LPAREN expres RPAREN bloq ELSE bloq','cond',7,'p_cond','Proyecto.py',235),
  ('escrit -> PRINT LPAREN escriti RPAREN SEMICOLON','escrit',5,'p_escrit','Proyecto.py',240),
  ('escriti -> expres','escriti',1,'p_escriti','Proyecto.py',245),
  ('escriti -> expres COMA escriti','escriti',3,'p_escriti','Proyecto.py',246),
  ('ciclo -> WHILE LPAREN expres RPAREN bloq','ciclo',5,'p_ciclo','Proyecto.py',251),
  ('leer -> READ LPAREN ID RPAREN SEMICOLON','leer',5,'p_leer','Proyecto.py',256),
  ('expres -> exr','expres',1,'p_expres','Proyecto.py',261),
  ('expres -> exr log expres','expres',3,'p_expres','Proyecto.py',262),
  ('exr -> ex','exr',1,'p_exr','Proyecto.py',267),
  ('exr -> ex rel exr','exr',3,'p_exr','Proyecto.py',268),
  ('ex -> term','ex',1,'p_ex','Proyecto.py',273),
  ('ex -> term PLUS ex','ex',3,'p_ex','Proyecto.py',274),
  ('ex -> term MINUS ex','ex',3,'p_ex','Proyecto.py',275),
  ('term -> fact','term',1,'p_term','Proyecto.py',280),
  ('term -> fact TIMES term','term',3,'p_term','Proyecto.py',281),
  ('term -> fact DIVIDE term','term',3,'p_term','Proyecto.py',282),
  ('fact -> LPAREN expres RPAREN','fact',3,'p_fact','Proyecto.py',287),
  ('fact -> fact1','fact',1,'p_fact','Proyecto.py',288),
  ('fact1 -> PLUS var_cte','fact1',2,'p_fact1','Proyecto.py',293),
  ('fact1 -> MINUS var_cte','fact1',2,'p_fact1','Proyecto.py',294),
  ('fact1 -> var_cte','fact1',1,'p_fact1','Proyecto.py',295),
  ('rel -> LOWERTHAN','rel',1,'p_rel','Proyecto.py',300),
  ('rel -> MORETHAN','rel',1,'p_rel','Proyecto.py',301),
  ('rel -> LOWEREQ','rel',1,'p_rel','Proyecto.py',302),
  ('rel -> MOREEQ','rel',1,'p_rel','Proyecto.py',303),
  ('rel -> SAME','rel',1,'p_rel','Proyecto.py',304),
  ('rel -> DIFFERENT','rel',1,'p_rel','Proyecto.py',305),
  ('log -> OR','log',1,'p_log','Proyecto.py',310),
  ('log -> AND','log',1,'p_log','Proyecto.py',311),
  ('var_cte -> ID','var_cte',1,'p_var_cte','Proyecto.py',316),
  ('var_cte -> CTE_I','var_cte',1,'p_var_cte','Proyecto.py',317),
  ('var_cte -> CTE_F','var_cte',1,'p_var_cte','Proyecto.py',318),
  ('var_cte -> CTE_B','var_cte',1,'p_var_cte','Proyecto.py',319),
  ('var_cte -> CTE_S','var_cte',1,'p_var_cte','Proyecto.py',320),
  ('var_cte -> fcall','var_cte',1,'p_var_cte','Proyecto.py',321),
  ('var_cte -> vcall','var_cte',1,'p_var_cte','Proyecto.py',322),
  ('fcall -> ID LPAREN fcall1 RPAREN','fcall',4,'p_fcall','Proyecto.py',328),
  ('fcall -> ID LPAREN RPAREN','fcall',3,'p_fcall','Proyecto.py',329),
  ('fcall1 -> expres','fcall1',1,'p_fcall1','Proyecto.py',334),
  ('fcall1 -> expres COMA fcall1','fcall1',3,'p_fcall1','Proyecto.py',335),
  ('vcall -> ID LBRACE expres RBRACE','vcall',4,'p_vcall','Proyecto.py',340),
]
