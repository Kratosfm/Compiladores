
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL COLON COMA CTE_F CTE_I CTE_S DIFFERENT DIVIDE ELSE EQUAL FALSE FLOAT FUNCTION ID IF INT LBRACE LKEY LOWEREQ LOWERTHAN LPAREN MAIN MINUS MOREEQ MORETHAN OR PLUS PRINT PROGRAM RBRACE READ RETURN RKEY RPAREN SAME SEMICOLON STRING TIMES TRUE VAR VECTOR VOID WHILE\n  \tprogram : PROGRAM COLON gotomain global program2 finglobal program3 llenarmain MAIN main1 mainc finmain\n        | PROGRAM COLON gotomain global program2 finglobal llenarmain MAIN main1 mainc finmain\n        | PROGRAM COLON gotomain global finglobal program3 llenarmain MAIN main1 mainc finmain\n        | PROGRAM COLON gotomain llenarmain MAIN main1 mainc finmain\n  gotomain :\n  \tprogram2 : crear program2\n    \t| crear\n  \n  \tprogram3 : function program3\n    \t| function\n  llenarmain :\n  \tcrear : var\n    \t| vector\n  global :finglobal :main1 :finmain :\n  \tvar : VAR tipo ID SEMICOLON\n  \n  \ttipo : INT\n    \t| FLOAT\n        | STRING\n        | BOOL\n  \n  \tvector : VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON\n  initvector :\n  \tfunction : FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return1 RKEY\n    | FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY bloq return1 RKEY\n    | FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY\n    | FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY bloq RKEY\n    | FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY\n    | FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar RKEY\n    | FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return1 RKEY\n    | FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY\n    | FUNCTION pushvoid ID addInTable  LPAREN RPAREN LKEY bloq RKEY\n    | FUNCTION functype ID addInTable LPAREN RPAREN LKEY bloq return1 RKEY\n    | FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY\n  \n  \tfunctype : INT\n    | FLOAT\n    | STRING\n    | BOOL\n  \n  \tpushvoid : VOID\n  \n    addInTable :\n    \n    funci : tipo ID sumparam\n    | tipo ID sumparam COMA funci\n  \n     localvar : var\n     | vector\n     | var localvar\n     | vector localvar\n     \n     sumparam :\n     \n    return1 : RETURN pushop expres resreturn SEMICOLON\n    | empty\n    \n    resreturn :\n    \n    mainc : LKEY RKEY\n    | LKEY localvar bloq RKEY\n    | LKEY localvar RKEY\n    | LKEY bloq RKEY\n    \n  \t bloq : estat\n         | estat bloq\n    \n  \testat : asign\n        | cond\n        | escrit\n        | ciclo\n        | leer\n        | fcallvoid\n\n  \n    asign : ID pushid EQUAL pushop fcall SEMICOLON\n        | ID pushid EQUAL pushop expres resolverasignacion SEMICOLON\n        | ID pushid LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON\n  \n    cond : IF LPAREN expres RPAREN LKEY resif bloq RKEY finif\n        | IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif\n  \n    escrit : PRINT pushop LPAREN escriti RPAREN SEMICOLON\n  \n  \tescriti : expres escrit1\n    \t| expres escrit2 COMA escriti\n  \n    escrit1 :\n    \n    escrit2 :\n    \n    ciclo : WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3\n  \n  \tleer : READ pushop LPAREN ID pushid RPAREN readid SEMICOLON\n  \n  \treadid :\n  \n  expres : exr\n        | exr log expres reslog\n  \n  \texr : ex\n    \t| ex rel exr resrel\n  \n    reslog :\n    \n  \tex : term resterm\n    \t| term resterm PLUS pushop ex\n    \t| term resterm MINUS pushop ex\n  \n  \tterm : fact resfact\n    \t| fact resfact TIMES pushop term\n        | fact resfact DIVIDE pushop term\n  \n  \tfact : LPAREN pushop expres RPAREN popop\n        | var_cte\n        | PLUS pushop var_cte\n        | MINUS pushop var_cte\n  \n  \trel : LOWERTHAN\n    \t| MORETHAN\n        | LOWEREQ\n        | MOREEQ\n        | SAME\n        | DIFFERENT\n  \n  \tlog : OR\n        | AND\n  \n  \tvar_cte : ID pushid\n        | CTE_I pushcte\n        | CTE_F pushcte\n        | CTE_S pushcte\n        | TRUE pushcte\n        | FALSE pushcte\n        | asigvector\n  \n    asigvector : ID pushid LBRACE ex RBRACE\n    \n  \tfcall : ID existfunc LPAREN startera fcall1 RPAREN\n        | ID existfunc LPAREN startera RPAREN\n  \n    fcallvoid : ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON\n    | ID existfunc LPAREN startera RPAREN SEMICOLON\n    existfunc :startera :\n  \tfcall1 : expres generateparam\n        | expres generateparam COMA fcall1\n  generateparam :\n    empty :\n    pushcte :pushid :pushop :popop :resolverasignacion :resasignvec :resfact :resterm :resrel :resif :reselse :finif :while1 :while2 :while3 :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,40,49,50,74,75,86,87,91,114,115,116,152,],[0,-16,-4,-51,-53,-54,-16,-16,-52,-16,-2,-3,-1,]),'COLON':([2,],[3,]),'VAR':([3,4,5,9,10,11,41,47,53,54,154,157,158,182,187,],[-5,-13,12,12,-11,-12,12,-17,12,12,12,12,-22,12,12,]),'VECTOR':([3,4,5,9,10,11,41,47,53,54,154,157,158,182,187,],[-5,-13,13,13,-11,-12,13,-17,13,13,13,13,-22,13,13,]),'FUNCTION':([3,4,5,7,8,9,10,11,15,17,19,47,158,184,212,220,222,241,245,246,254,255,257,264,],[-5,-13,-14,-14,18,-7,-11,-12,18,18,-6,-17,-22,-34,-28,-29,-32,-33,-27,-31,-25,-30,-26,-24,]),'MAIN':([3,4,6,7,9,10,11,15,16,17,19,27,28,29,30,42,47,158,184,212,220,222,241,245,246,254,255,257,264,],[-5,-10,14,-14,-7,-11,-12,-10,-10,-9,-6,-10,43,44,-8,67,-17,-22,-34,-28,-29,-32,-33,-27,-31,-25,-30,-26,-24,]),'INT':([12,13,18,25,88,89,217,],[21,-23,33,21,21,21,21,]),'FLOAT':([12,13,18,25,88,89,217,],[22,-23,34,22,22,22,22,]),'STRING':([12,13,18,25,88,89,217,],[23,-23,35,23,23,23,23,]),'BOOL':([12,13,18,25,88,89,217,],[24,-23,36,24,24,24,24,]),'LKEY':([14,26,43,44,67,68,69,85,118,121,127,153,156,180,208,262,],[-15,41,-15,-15,-15,41,41,41,154,157,167,182,187,-130,236,268,]),'VOID':([18,],[37,]),'ID':([20,21,22,23,24,31,32,33,34,35,36,37,39,41,47,51,53,54,55,57,58,59,60,61,62,76,77,81,92,93,94,95,100,101,111,112,113,119,123,125,126,128,129,130,131,132,133,134,135,136,137,139,140,154,157,158,167,170,171,174,175,176,182,183,187,188,191,193,195,198,201,202,203,204,206,207,210,215,218,223,224,225,226,227,236,242,247,250,252,261,263,267,268,269,271,273,274,],[38,-18,-19,-20,-21,45,46,-35,-36,-37,-38,-39,48,56,-17,56,-43,-44,56,-57,-58,-59,-60,-61,-62,-45,-46,104,-119,104,-112,-119,-119,-119,104,104,151,155,159,104,104,104,-97,-98,104,-91,-92,-93,-94,-95,-96,104,104,56,56,-22,-126,-119,-119,-119,-119,104,56,56,56,56,-63,-119,-110,56,104,104,104,104,-68,104,56,-119,56,-112,-64,104,-109,104,56,104,104,-128,-74,-66,-131,-65,-127,-73,56,-128,-67,]),'SEMICOLON':([38,97,98,99,102,103,104,105,106,107,108,109,110,122,138,141,142,143,144,145,146,147,159,160,161,164,168,169,172,173,177,192,194,197,199,200,209,228,230,231,232,233,234,237,248,256,259,260,265,266,],[47,-76,-78,-124,-123,-88,-118,-117,-117,-117,-117,-117,-105,158,-81,-84,-99,-100,-101,-102,-103,-104,-118,191,-121,195,-80,-125,-89,-90,206,224,226,-120,-77,-79,-75,-87,-82,-83,-85,-86,-106,252,-122,-50,-108,267,270,-107,]),'RKEY':([41,47,51,52,53,54,55,57,58,59,60,61,62,73,76,77,78,154,158,183,185,188,189,191,195,206,211,213,214,216,219,221,224,226,229,238,239,240,244,250,251,252,253,261,263,267,269,270,272,273,274,],[50,-17,74,75,-43,-44,-55,-57,-58,-59,-60,-61,-62,91,-45,-46,-56,184,-22,212,-116,220,222,-63,-110,-68,-116,-116,241,-49,245,246,-64,-109,250,-116,254,255,257,-128,263,-74,264,-66,-131,-65,-73,-48,273,-128,-67,]),'IF':([41,47,51,53,54,55,57,58,59,60,61,62,76,77,154,157,158,167,182,183,187,188,191,195,198,206,210,218,224,226,236,250,252,261,263,267,268,269,271,273,274,],[63,-17,63,-43,-44,63,-57,-58,-59,-60,-61,-62,-45,-46,63,63,-22,-126,63,63,63,63,-63,-110,63,-68,63,63,-64,-109,63,-128,-74,-66,-131,-65,-127,-73,63,-128,-67,]),'PRINT':([41,47,51,53,54,55,57,58,59,60,61,62,76,77,154,157,158,167,182,183,187,188,191,195,198,206,210,218,224,226,236,250,252,261,263,267,268,269,271,273,274,],[64,-17,64,-43,-44,64,-57,-58,-59,-60,-61,-62,-45,-46,64,64,-22,-126,64,64,64,64,-63,-110,64,-68,64,64,-64,-109,64,-128,-74,-66,-131,-65,-127,-73,64,-128,-67,]),'WHILE':([41,47,51,53,54,55,57,58,59,60,61,62,76,77,154,157,158,167,182,183,187,188,191,195,198,206,210,218,224,226,236,250,252,261,263,267,268,269,271,273,274,],[65,-17,65,-43,-44,65,-57,-58,-59,-60,-61,-62,-45,-46,65,65,-22,-126,65,65,65,65,-63,-110,65,-68,65,65,-64,-109,65,-128,-74,-66,-131,-65,-127,-73,65,-128,-67,]),'READ':([41,47,51,53,54,55,57,58,59,60,61,62,76,77,154,157,158,167,182,183,187,188,191,195,198,206,210,218,224,226,236,250,252,261,263,267,268,269,271,273,274,],[66,-17,66,-43,-44,66,-57,-58,-59,-60,-61,-62,-45,-46,66,66,-22,-126,66,66,66,66,-63,-110,66,-68,66,66,-64,-109,66,-128,-74,-66,-131,-65,-127,-73,66,-128,-67,]),'LPAREN':([45,46,56,63,64,65,66,70,71,80,81,82,83,84,92,93,94,95,111,112,123,125,126,128,129,130,131,132,133,134,135,136,137,159,170,171,174,175,176,190,193,201,202,203,204,207,215,223,225,227,242,247,],[-40,-40,-111,81,-119,-129,-119,88,89,94,95,111,112,113,-119,95,-112,-119,95,95,95,95,95,95,-97,-98,95,-91,-92,-93,-94,-95,-96,-111,-119,-119,-119,-119,95,223,-119,95,95,95,95,95,-119,-112,95,95,95,95,]),'LBRACE':([48,56,79,104,142,159,],[72,-118,93,-118,176,-118,]),'RETURN':([55,57,58,59,60,61,62,78,185,191,195,206,211,213,224,226,238,250,252,261,263,267,269,273,274,],[-55,-57,-58,-59,-60,-61,-62,-56,215,-63,-110,-68,215,215,-64,-109,215,-128,-74,-66,-131,-65,-73,-128,-67,]),'EQUAL':([56,79,162,],[-118,92,193,]),'CTE_I':([72,81,92,93,94,95,100,101,111,112,123,125,126,128,129,130,131,132,133,134,135,136,137,139,140,170,171,174,175,176,193,201,202,203,204,207,215,223,225,227,242,247,],[90,105,-119,105,-112,-119,-119,-119,105,105,105,105,105,105,-97,-98,105,-91,-92,-93,-94,-95,-96,105,105,-119,-119,-119,-119,105,-119,105,105,105,105,105,-119,-112,105,105,105,105,]),'PLUS':([81,92,93,94,95,99,102,103,104,105,106,107,108,109,110,111,112,123,125,126,128,129,130,131,132,133,134,135,136,137,138,141,142,143,144,145,146,147,159,170,171,172,173,174,175,176,193,197,201,202,203,204,207,215,223,225,227,228,232,233,234,242,247,],[100,-119,100,-112,-119,-124,-123,-88,-118,-117,-117,-117,-117,-117,-105,100,100,100,100,100,100,-97,-98,100,-91,-92,-93,-94,-95,-96,170,-84,-99,-100,-101,-102,-103,-104,-118,-119,-119,-89,-90,-119,-119,100,-119,-120,100,100,100,100,100,-119,-112,100,100,-87,-85,-86,-106,100,100,]),'MINUS':([81,92,93,94,95,99,102,103,104,105,106,107,108,109,110,111,112,123,125,126,128,129,130,131,132,133,134,135,136,137,138,141,142,143,144,145,146,147,159,170,171,172,173,174,175,176,193,197,201,202,203,204,207,215,223,225,227,228,232,233,234,242,247,],[101,-119,101,-112,-119,-124,-123,-88,-118,-117,-117,-117,-117,-117,-105,101,101,101,101,101,101,-97,-98,101,-91,-92,-93,-94,-95,-96,171,-84,-99,-100,-101,-102,-103,-104,-118,-119,-119,-89,-90,-119,-119,101,-119,-120,101,101,101,101,101,-119,-112,101,101,-87,-85,-86,-106,101,101,]),'CTE_F':([81,92,93,94,95,100,101,111,112,123,125,126,128,129,130,131,132,133,134,135,136,137,139,140,170,171,174,175,176,193,201,202,203,204,207,215,223,225,227,242,247,],[106,-119,106,-112,-119,-119,-119,106,106,106,106,106,106,-97,-98,106,-91,-92,-93,-94,-95,-96,106,106,-119,-119,-119,-119,106,-119,106,106,106,106,106,-119,-112,106,106,106,106,]),'CTE_S':([81,92,93,94,95,100,101,111,112,123,125,126,128,129,130,131,132,133,134,135,136,137,139,140,170,171,174,175,176,193,201,202,203,204,207,215,223,225,227,242,247,],[107,-119,107,-112,-119,-119,-119,107,107,107,107,107,107,-97,-98,107,-91,-92,-93,-94,-95,-96,107,107,-119,-119,-119,-119,107,-119,107,107,107,107,107,-119,-112,107,107,107,107,]),'TRUE':([81,92,93,94,95,100,101,111,112,123,125,126,128,129,130,131,132,133,134,135,136,137,139,140,170,171,174,175,176,193,201,202,203,204,207,215,223,225,227,242,247,],[108,-119,108,-112,-119,-119,-119,108,108,108,108,108,108,-97,-98,108,-91,-92,-93,-94,-95,-96,108,108,-119,-119,-119,-119,108,-119,108,108,108,108,108,-119,-112,108,108,108,108,]),'FALSE':([81,92,93,94,95,100,101,111,112,123,125,126,128,129,130,131,132,133,134,135,136,137,139,140,170,171,174,175,176,193,201,202,203,204,207,215,223,225,227,242,247,],[109,-119,109,-112,-119,-119,-119,109,109,109,109,109,109,-97,-98,109,-91,-92,-93,-94,-95,-96,109,109,-119,-119,-119,-119,109,-119,109,109,109,109,109,-119,-112,109,109,109,109,]),'RPAREN':([88,89,94,96,97,98,99,102,103,104,105,106,107,108,109,110,117,120,125,138,141,142,143,144,145,146,147,148,149,150,151,155,163,165,166,168,169,172,173,178,181,186,196,197,199,200,223,228,230,231,232,233,234,235,243,247,249,258,],[118,121,-112,127,-76,-78,-124,-123,-88,-118,-117,-117,-117,-117,-117,-105,153,156,164,-81,-84,-99,-100,-101,-102,-103,-104,177,-71,180,-118,-47,194,-115,197,-80,-125,-89,-90,-69,209,-41,-113,-120,-77,-79,-112,-87,-82,-83,-85,-86,-106,-70,-42,259,-114,266,]),'RBRACE':([90,98,99,102,103,104,105,106,107,108,109,110,124,138,141,142,143,144,145,146,147,169,172,173,197,200,205,228,230,231,232,233,234,],[122,-78,-124,-123,-88,-118,-117,-117,-117,-117,-117,-105,162,-81,-84,-99,-100,-101,-102,-103,-104,-125,-89,-90,-120,-79,234,-87,-82,-83,-85,-86,-106,]),'COMA':([97,98,99,102,103,104,105,106,107,108,109,110,138,141,142,143,144,145,146,147,149,155,165,168,169,172,173,179,186,196,197,199,200,228,230,231,232,233,234,],[-76,-78,-124,-123,-88,-118,-117,-117,-117,-117,-117,-105,-81,-84,-99,-100,-101,-102,-103,-104,-72,-47,-115,-80,-125,-89,-90,207,217,227,-120,-77,-79,-87,-82,-83,-85,-86,-106,]),'OR':([97,98,99,102,103,104,105,106,107,108,109,110,138,141,142,143,144,145,146,147,159,169,172,173,197,200,228,230,231,232,233,234,],[129,-78,-124,-123,-88,-118,-117,-117,-117,-117,-117,-105,-81,-84,-99,-100,-101,-102,-103,-104,-118,-125,-89,-90,-120,-79,-87,-82,-83,-85,-86,-106,]),'AND':([97,98,99,102,103,104,105,106,107,108,109,110,138,141,142,143,144,145,146,147,159,169,172,173,197,200,228,230,231,232,233,234,],[130,-78,-124,-123,-88,-118,-117,-117,-117,-117,-117,-105,-81,-84,-99,-100,-101,-102,-103,-104,-118,-125,-89,-90,-120,-79,-87,-82,-83,-85,-86,-106,]),'LOWERTHAN':([98,99,102,103,104,105,106,107,108,109,110,138,141,142,143,144,145,146,147,159,172,173,197,228,230,231,232,233,234,],[132,-124,-123,-88,-118,-117,-117,-117,-117,-117,-105,-81,-84,-99,-100,-101,-102,-103,-104,-118,-89,-90,-120,-87,-82,-83,-85,-86,-106,]),'MORETHAN':([98,99,102,103,104,105,106,107,108,109,110,138,141,142,143,144,145,146,147,159,172,173,197,228,230,231,232,233,234,],[133,-124,-123,-88,-118,-117,-117,-117,-117,-117,-105,-81,-84,-99,-100,-101,-102,-103,-104,-118,-89,-90,-120,-87,-82,-83,-85,-86,-106,]),'LOWEREQ':([98,99,102,103,104,105,106,107,108,109,110,138,141,142,143,144,145,146,147,159,172,173,197,228,230,231,232,233,234,],[134,-124,-123,-88,-118,-117,-117,-117,-117,-117,-105,-81,-84,-99,-100,-101,-102,-103,-104,-118,-89,-90,-120,-87,-82,-83,-85,-86,-106,]),'MOREEQ':([98,99,102,103,104,105,106,107,108,109,110,138,141,142,143,144,145,146,147,159,172,173,197,228,230,231,232,233,234,],[135,-124,-123,-88,-118,-117,-117,-117,-117,-117,-105,-81,-84,-99,-100,-101,-102,-103,-104,-118,-89,-90,-120,-87,-82,-83,-85,-86,-106,]),'SAME':([98,99,102,103,104,105,106,107,108,109,110,138,141,142,143,144,145,146,147,159,172,173,197,228,230,231,232,233,234,],[136,-124,-123,-88,-118,-117,-117,-117,-117,-117,-105,-81,-84,-99,-100,-101,-102,-103,-104,-118,-89,-90,-120,-87,-82,-83,-85,-86,-106,]),'DIFFERENT':([98,99,102,103,104,105,106,107,108,109,110,138,141,142,143,144,145,146,147,159,172,173,197,228,230,231,232,233,234,],[137,-124,-123,-88,-118,-117,-117,-117,-117,-117,-105,-81,-84,-99,-100,-101,-102,-103,-104,-118,-89,-90,-120,-87,-82,-83,-85,-86,-106,]),'TIMES':([102,103,104,105,106,107,108,109,110,141,142,143,144,145,146,147,159,172,173,197,228,234,],[-123,-88,-118,-117,-117,-117,-117,-117,-105,174,-99,-100,-101,-102,-103,-104,-118,-89,-90,-120,-87,-106,]),'DIVIDE':([102,103,104,105,106,107,108,109,110,141,142,143,144,145,146,147,159,172,173,197,228,234,],[-123,-88,-118,-117,-117,-117,-117,-117,-105,175,-99,-100,-101,-102,-103,-104,-118,-89,-90,-120,-87,-106,]),'ELSE':([250,],[262,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'gotomain':([3,],[4,]),'global':([4,],[5,]),'llenarmain':([4,15,16,27,],[6,28,29,42,]),'program2':([5,9,],[7,19,]),'finglobal':([5,7,],[8,15,]),'crear':([5,9,],[9,9,]),'var':([5,9,41,53,54,154,157,182,187,],[10,10,53,53,53,53,53,53,53,]),'vector':([5,9,41,53,54,154,157,182,187,],[11,11,54,54,54,54,54,54,54,]),'program3':([8,15,17,],[16,27,30,]),'function':([8,15,17,],[17,17,17,]),'tipo':([12,25,88,89,217,],[20,39,119,119,119,]),'initvector':([13,],[25,]),'main1':([14,43,44,67,],[26,68,69,85,]),'functype':([18,],[31,]),'pushvoid':([18,],[32,]),'mainc':([26,68,69,85,],[40,86,87,114,]),'finmain':([40,86,87,114,],[49,115,116,152,]),'localvar':([41,53,54,154,157,182,187,],[51,76,77,183,188,210,218,]),'bloq':([41,51,55,154,157,182,183,187,188,198,210,218,236,271,],[52,73,78,185,189,211,213,219,221,229,238,244,251,272,]),'estat':([41,51,55,154,157,182,183,187,188,198,210,218,236,271,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'asign':([41,51,55,154,157,182,183,187,188,198,210,218,236,271,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'cond':([41,51,55,154,157,182,183,187,188,198,210,218,236,271,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'escrit':([41,51,55,154,157,182,183,187,188,198,210,218,236,271,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'ciclo':([41,51,55,154,157,182,183,187,188,198,210,218,236,271,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'leer':([41,51,55,154,157,182,183,187,188,198,210,218,236,271,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'fcallvoid':([41,51,55,154,157,182,183,187,188,198,210,218,236,271,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'addInTable':([45,46,],[70,71,]),'pushid':([56,104,151,159,],[79,142,181,142,]),'existfunc':([56,159,],[80,190,]),'pushop':([64,66,92,95,100,101,170,171,174,175,193,215,],[82,84,123,126,139,140,201,202,203,204,225,242,]),'while1':([65,],[83,]),'expres':([81,111,112,123,125,126,128,207,225,227,242,247,],[96,149,150,161,165,166,168,149,248,165,256,165,]),'exr':([81,93,111,112,123,125,126,128,131,207,225,227,242,247,],[97,124,97,97,97,97,97,97,169,97,97,97,97,97,]),'ex':([81,93,111,112,123,125,126,128,131,176,201,202,207,225,227,242,247,],[98,98,98,98,98,98,98,98,98,205,230,231,98,98,98,98,98,]),'term':([81,93,111,112,123,125,126,128,131,176,201,202,203,204,207,225,227,242,247,],[99,99,99,99,99,99,99,99,99,99,99,99,232,233,99,99,99,99,99,]),'fact':([81,93,111,112,123,125,126,128,131,176,201,202,203,204,207,225,227,242,247,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'var_cte':([81,93,111,112,123,125,126,128,131,139,140,176,201,202,203,204,207,225,227,242,247,],[103,103,103,103,103,103,103,103,103,172,173,103,103,103,103,103,103,103,103,103,103,]),'asigvector':([81,93,111,112,123,125,126,128,131,139,140,176,201,202,203,204,207,225,227,242,247,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'funci':([88,89,217,],[117,120,243,]),'startera':([94,223,],[125,247,]),'log':([97,],[128,]),'rel':([98,],[131,]),'resterm':([99,],[138,]),'resfact':([102,],[141,]),'pushcte':([105,106,107,108,109,],[143,144,145,146,147,]),'escriti':([111,207,],[148,235,]),'fcall':([123,],[160,]),'fcall1':([125,227,247,],[163,249,258,]),'escrit1':([149,],[178,]),'escrit2':([149,],[179,]),'sumparam':([155,],[186,]),'resolverasignacion':([161,],[192,]),'generateparam':([165,],[196,]),'resif':([167,],[198,]),'reslog':([168,],[199,]),'resrel':([169,],[200,]),'while2':([180,],[208,]),'return1':([185,211,213,238,],[214,239,240,253,]),'empty':([185,211,213,238,],[216,216,216,216,]),'popop':([197,],[228,]),'readid':([209,],[237,]),'resasignvec':([248,],[260,]),'finif':([250,273,],[261,274,]),'resreturn':([256,],[265,]),'while3':([263,],[269,]),'reselse':([268,],[271,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM COLON gotomain global program2 finglobal program3 llenarmain MAIN main1 mainc finmain','program',12,'p_program','lexPar.py',150),
  ('program -> PROGRAM COLON gotomain global program2 finglobal llenarmain MAIN main1 mainc finmain','program',11,'p_program','lexPar.py',151),
  ('program -> PROGRAM COLON gotomain global finglobal program3 llenarmain MAIN main1 mainc finmain','program',11,'p_program','lexPar.py',152),
  ('program -> PROGRAM COLON gotomain llenarmain MAIN main1 mainc finmain','program',8,'p_program','lexPar.py',153),
  ('gotomain -> <empty>','gotomain',0,'p_gotomain','lexPar.py',159),
  ('program2 -> crear program2','program2',2,'p_program2','lexPar.py',164),
  ('program2 -> crear','program2',1,'p_program2','lexPar.py',165),
  ('program3 -> function program3','program3',2,'p_program3','lexPar.py',170),
  ('program3 -> function','program3',1,'p_program3','lexPar.py',171),
  ('llenarmain -> <empty>','llenarmain',0,'p_llenarmain','lexPar.py',175),
  ('crear -> var','crear',1,'p_crear','lexPar.py',180),
  ('crear -> vector','crear',1,'p_crear','lexPar.py',181),
  ('global -> <empty>','global',0,'p_global','lexPar.py',185),
  ('finglobal -> <empty>','finglobal',0,'p_finglobal','lexPar.py',192),
  ('main1 -> <empty>','main1',0,'p_main1','lexPar.py',196),
  ('finmain -> <empty>','finmain',0,'p_finmain','lexPar.py',202),
  ('var -> VAR tipo ID SEMICOLON','var',4,'p_var','lexPar.py',207),
  ('tipo -> INT','tipo',1,'p_tipo','lexPar.py',220),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lexPar.py',221),
  ('tipo -> STRING','tipo',1,'p_tipo','lexPar.py',222),
  ('tipo -> BOOL','tipo',1,'p_tipo','lexPar.py',223),
  ('vector -> VECTOR initvector tipo ID LBRACE CTE_I RBRACE SEMICOLON','vector',8,'p_vector','lexPar.py',230),
  ('initvector -> <empty>','initvector',0,'p_initvector','lexPar.py',242),
  ('function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY localvar bloq return1 RKEY','function',12,'p_function','lexPar.py',247),
  ('function -> FUNCTION functype ID addInTable LPAREN funci RPAREN LKEY bloq return1 RKEY','function',11,'p_function','lexPar.py',248),
  ('function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY localvar bloq RKEY','function',11,'p_function','lexPar.py',249),
  ('function -> FUNCTION pushvoid ID addInTable LPAREN funci RPAREN LKEY bloq RKEY','function',10,'p_function','lexPar.py',250),
  ('function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar RKEY','function',9,'p_function','lexPar.py',251),
  ('function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar RKEY','function',9,'p_function','lexPar.py',252),
  ('function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY localvar bloq return1 RKEY','function',11,'p_function','lexPar.py',253),
  ('function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY localvar bloq RKEY','function',10,'p_function','lexPar.py',254),
  ('function -> FUNCTION pushvoid ID addInTable LPAREN RPAREN LKEY bloq RKEY','function',9,'p_function','lexPar.py',255),
  ('function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY bloq return1 RKEY','function',10,'p_function','lexPar.py',256),
  ('function -> FUNCTION functype ID addInTable LPAREN RPAREN LKEY RKEY','function',8,'p_function','lexPar.py',257),
  ('functype -> INT','functype',1,'p_functype','lexPar.py',279),
  ('functype -> FLOAT','functype',1,'p_functype','lexPar.py',280),
  ('functype -> STRING','functype',1,'p_functype','lexPar.py',281),
  ('functype -> BOOL','functype',1,'p_functype','lexPar.py',282),
  ('pushvoid -> VOID','pushvoid',1,'p_pushvoid','lexPar.py',288),
  ('addInTable -> <empty>','addInTable',0,'p_addInTable','lexPar.py',295),
  ('funci -> tipo ID sumparam','funci',3,'p_funci','lexPar.py',305),
  ('funci -> tipo ID sumparam COMA funci','funci',5,'p_funci','lexPar.py',306),
  ('localvar -> var','localvar',1,'p_localvar','lexPar.py',314),
  ('localvar -> vector','localvar',1,'p_localvar','lexPar.py',315),
  ('localvar -> var localvar','localvar',2,'p_localvar','lexPar.py',316),
  ('localvar -> vector localvar','localvar',2,'p_localvar','lexPar.py',317),
  ('sumparam -> <empty>','sumparam',0,'p_sumparam','lexPar.py',322),
  ('return1 -> RETURN pushop expres resreturn SEMICOLON','return1',5,'p_return1','lexPar.py',329),
  ('return1 -> empty','return1',1,'p_return1','lexPar.py',330),
  ('resreturn -> <empty>','resreturn',0,'p_resreturn','lexPar.py',336),
  ('mainc -> LKEY RKEY','mainc',2,'p_mainc','lexPar.py',342),
  ('mainc -> LKEY localvar bloq RKEY','mainc',4,'p_mainc','lexPar.py',343),
  ('mainc -> LKEY localvar RKEY','mainc',3,'p_mainc','lexPar.py',344),
  ('mainc -> LKEY bloq RKEY','mainc',3,'p_mainc','lexPar.py',345),
  ('bloq -> estat','bloq',1,'p_bloq','lexPar.py',350),
  ('bloq -> estat bloq','bloq',2,'p_bloq','lexPar.py',351),
  ('estat -> asign','estat',1,'p_estat','lexPar.py',356),
  ('estat -> cond','estat',1,'p_estat','lexPar.py',357),
  ('estat -> escrit','estat',1,'p_estat','lexPar.py',358),
  ('estat -> ciclo','estat',1,'p_estat','lexPar.py',359),
  ('estat -> leer','estat',1,'p_estat','lexPar.py',360),
  ('estat -> fcallvoid','estat',1,'p_estat','lexPar.py',361),
  ('asign -> ID pushid EQUAL pushop fcall SEMICOLON','asign',6,'p_asign','lexPar.py',367),
  ('asign -> ID pushid EQUAL pushop expres resolverasignacion SEMICOLON','asign',7,'p_asign','lexPar.py',368),
  ('asign -> ID pushid LBRACE exr RBRACE EQUAL pushop expres resasignvec SEMICOLON','asign',10,'p_asign','lexPar.py',369),
  ('cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY finif','cond',9,'p_cond','lexPar.py',374),
  ('cond -> IF LPAREN expres RPAREN LKEY resif bloq RKEY ELSE LKEY reselse bloq RKEY finif','cond',14,'p_cond','lexPar.py',375),
  ('escrit -> PRINT pushop LPAREN escriti RPAREN SEMICOLON','escrit',6,'p_escrit','lexPar.py',380),
  ('escriti -> expres escrit1','escriti',2,'p_escriti','lexPar.py',385),
  ('escriti -> expres escrit2 COMA escriti','escriti',4,'p_escriti','lexPar.py',386),
  ('escrit1 -> <empty>','escrit1',0,'p_escrit1','lexPar.py',392),
  ('escrit2 -> <empty>','escrit2',0,'p_escrit2','lexPar.py',398),
  ('ciclo -> WHILE while1 LPAREN expres RPAREN while2 LKEY bloq RKEY while3','ciclo',10,'p_ciclo','lexPar.py',405),
  ('leer -> READ pushop LPAREN ID pushid RPAREN readid SEMICOLON','leer',8,'p_leer','lexPar.py',410),
  ('readid -> <empty>','readid',0,'p_readid','lexPar.py',415),
  ('expres -> exr','expres',1,'p_expres','lexPar.py',421),
  ('expres -> exr log expres reslog','expres',4,'p_expres','lexPar.py',422),
  ('exr -> ex','exr',1,'p_exr','lexPar.py',427),
  ('exr -> ex rel exr resrel','exr',4,'p_exr','lexPar.py',428),
  ('reslog -> <empty>','reslog',0,'p_reslog','lexPar.py',433),
  ('ex -> term resterm','ex',2,'p_ex','lexPar.py',439),
  ('ex -> term resterm PLUS pushop ex','ex',5,'p_ex','lexPar.py',440),
  ('ex -> term resterm MINUS pushop ex','ex',5,'p_ex','lexPar.py',441),
  ('term -> fact resfact','term',2,'p_term','lexPar.py',446),
  ('term -> fact resfact TIMES pushop term','term',5,'p_term','lexPar.py',447),
  ('term -> fact resfact DIVIDE pushop term','term',5,'p_term','lexPar.py',448),
  ('fact -> LPAREN pushop expres RPAREN popop','fact',5,'p_fact','lexPar.py',453),
  ('fact -> var_cte','fact',1,'p_fact','lexPar.py',454),
  ('fact -> PLUS pushop var_cte','fact',3,'p_fact','lexPar.py',455),
  ('fact -> MINUS pushop var_cte','fact',3,'p_fact','lexPar.py',456),
  ('rel -> LOWERTHAN','rel',1,'p_rel','lexPar.py',461),
  ('rel -> MORETHAN','rel',1,'p_rel','lexPar.py',462),
  ('rel -> LOWEREQ','rel',1,'p_rel','lexPar.py',463),
  ('rel -> MOREEQ','rel',1,'p_rel','lexPar.py',464),
  ('rel -> SAME','rel',1,'p_rel','lexPar.py',465),
  ('rel -> DIFFERENT','rel',1,'p_rel','lexPar.py',466),
  ('log -> OR','log',1,'p_log','lexPar.py',473),
  ('log -> AND','log',1,'p_log','lexPar.py',474),
  ('var_cte -> ID pushid','var_cte',2,'p_var_cte','lexPar.py',480),
  ('var_cte -> CTE_I pushcte','var_cte',2,'p_var_cte','lexPar.py',481),
  ('var_cte -> CTE_F pushcte','var_cte',2,'p_var_cte','lexPar.py',482),
  ('var_cte -> CTE_S pushcte','var_cte',2,'p_var_cte','lexPar.py',483),
  ('var_cte -> TRUE pushcte','var_cte',2,'p_var_cte','lexPar.py',484),
  ('var_cte -> FALSE pushcte','var_cte',2,'p_var_cte','lexPar.py',485),
  ('var_cte -> asigvector','var_cte',1,'p_var_cte','lexPar.py',486),
  ('asigvector -> ID pushid LBRACE ex RBRACE','asigvector',5,'p_asigvector','lexPar.py',491),
  ('fcall -> ID existfunc LPAREN startera fcall1 RPAREN','fcall',6,'p_fcall','lexPar.py',497),
  ('fcall -> ID existfunc LPAREN startera RPAREN','fcall',5,'p_fcall','lexPar.py',498),
  ('fcallvoid -> ID existfunc LPAREN startera fcall1 RPAREN SEMICOLON','fcallvoid',7,'p_fcallvoid','lexPar.py',509),
  ('fcallvoid -> ID existfunc LPAREN startera RPAREN SEMICOLON','fcallvoid',6,'p_fcallvoid','lexPar.py',510),
  ('existfunc -> <empty>','existfunc',0,'p_existfunc','lexPar.py',518),
  ('startera -> <empty>','startera',0,'p_startera','lexPar.py',527),
  ('fcall1 -> expres generateparam','fcall1',2,'p_fcall1','lexPar.py',532),
  ('fcall1 -> expres generateparam COMA fcall1','fcall1',4,'p_fcall1','lexPar.py',533),
  ('generateparam -> <empty>','generateparam',0,'p_generateparam','lexPar.py',542),
  ('empty -> <empty>','empty',0,'p_empty','lexPar.py',550),
  ('pushcte -> <empty>','pushcte',0,'p_pushcte','lexPar.py',561),
  ('pushid -> <empty>','pushid',0,'p_pushid','lexPar.py',565),
  ('pushop -> <empty>','pushop',0,'p_pushop','lexPar.py',569),
  ('popop -> <empty>','popop',0,'p_popop','lexPar.py',573),
  ('resolverasignacion -> <empty>','resolverasignacion',0,'p_resolverasignacion','lexPar.py',577),
  ('resasignvec -> <empty>','resasignvec',0,'p_resasignvec','lexPar.py',589),
  ('resfact -> <empty>','resfact',0,'p_resfact','lexPar.py',602),
  ('resterm -> <empty>','resterm',0,'p_resterm','lexPar.py',606),
  ('resrel -> <empty>','resrel',0,'p_resrel','lexPar.py',610),
  ('resif -> <empty>','resif',0,'p_resif','lexPar.py',614),
  ('reselse -> <empty>','reselse',0,'p_reselse','lexPar.py',618),
  ('finif -> <empty>','finif',0,'p_finif','lexPar.py',622),
  ('while1 -> <empty>','while1',0,'p_while1','lexPar.py',626),
  ('while2 -> <empty>','while2',0,'p_while2','lexPar.py',630),
  ('while3 -> <empty>','while3',0,'p_while3','lexPar.py',634),
]
